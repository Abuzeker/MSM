{"ast":null,"code":"import axios from 'axios';\nimport { message } from 'antd';\nexport default function ajax(url) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  let config = arguments.length > 3 ? arguments[3] : undefined;\n  axios.defaults.withCredentials = false;\n  return new Promise((resolve, reject) => {\n    let promise;\n\n    if (type === 'GET') {\n      promise = axios.get(url, {\n        params: data\n      });\n    } else {\n      promise = axios.post(url, data, config);\n    }\n\n    promise.then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      message.error('Request Fail: ' + error.message);\n      console.log(error.message);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/api/ajax.js"],"names":["axios","message","ajax","url","data","type","config","defaults","withCredentials","Promise","resolve","reject","promise","get","params","post","then","response","catch","error","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAoD;AAAA,MAAjCC,IAAiC,uEAA1B,EAA0B;AAAA,MAAtBC,IAAsB,uEAAf,KAAe;AAAA,MAARC,MAAQ;AACjEN,EAAAA,KAAK,CAACO,QAAN,CAAeC,eAAf,GAAiC,KAAjC;AAGA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,OAAJ;;AAEA,QAAIP,IAAI,KAAK,KAAb,EAAoB;AAClBO,MAAAA,OAAO,GAAGZ,KAAK,CAACa,GAAN,CAAUV,GAAV,EAAe;AACvBW,QAAAA,MAAM,EAAEV;AADe,OAAf,CAAV;AAGD,KAJD,MAIO;AACLQ,MAAAA,OAAO,GAAGZ,KAAK,CAACe,IAAN,CAAWZ,GAAX,EACRC,IADQ,EACFE,MADE,CAAV;AAGD;;AAEDM,IAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAI;AACvBP,MAAAA,OAAO,CAACO,QAAQ,CAACb,IAAV,CAAP;AACD,KAFD,EAEGc,KAFH,CAESC,KAAK,IAAI;AAChBlB,MAAAA,OAAO,CAACkB,KAAR,CAAc,mBAAmBA,KAAK,CAAClB,OAAvC;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAClB,OAAlB;AACD,KALD;AAMD,GAnBM,CAAP;AAoBD","sourcesContent":["\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nexport default function ajax(url, data = {}, type = 'GET', config) {\r\n  axios.defaults.withCredentials = false\r\n\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n\r\n    if (type === 'GET') {\r\n      promise = axios.get(url, {\r\n        params: data\r\n      })\r\n    } else {\r\n      promise = axios.post(url,\r\n        data, config\r\n      )\r\n    }\r\n\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    }).catch(error => {\r\n      message.error('Request Fail: ' + error.message)\r\n      console.log(error.message)\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}