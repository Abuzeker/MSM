{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1DataLog.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { RealtimeData_Request } from '../../api';\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet C3DataModel = C3Model;\nlet G2DataModel = G2Model;\nlet BlankPage;\nlet LogValue = {\n  \"C3Table\": [],\n  \"G2Table\": [],\n  \"C3Graph\": [],\n  \"G2Graph\": []\n};\n\nconst Line1DataLog = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n\n  const DataRequest = async (label, site, page, line, HMIName, TableName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    LogValue[TableName] = DataSortRT(response);\n    LogValue[HMIName] = LogValue[TableName];\n  };\n\n  const RenderNewData = () => {\n    DataRequest([], 'Polymerlink', '1', 'C3', 'C3HMI', \"C3Table\");\n    DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\");\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          xs: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(RealTimeTableWrapper, {\n            TableTitle: 'C3',\n            TableData: LogValue['C3Table']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          xs: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(RealTimeTableWrapper, {\n            TableTitle: 'G2',\n            TableData: LogValue['G2Table']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          xs: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(RealTimeGraphWrapper, {\n            GarphTitle: 'C3',\n            DataModel: C3DataModel,\n            RawDataReceive: LogValue['C3Table'],\n            Divname: 'C3Graph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          xs: 24,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(RealTimeGraphWrapper, {\n            GarphTitle: 'G2',\n            DataModel: G2DataModel,\n            RawDataReceive: LogValue['G2Table'],\n            Divname: 'G2Graph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1DataLog, \"zV1gGOQVd24INvK3EDN29d2LSoQ=\");\n\n_c = Line1DataLog;\nexport default Line1DataLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1DataLog\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1DataLog.jsx"],"names":["Button","Col","Divider","Row","React","useState","useEffect","RealtimeData_Request","C3Model","G2Model","DataSortRT","RealTimeGraphWrapper","RealTimeTableWrapper","C3DataModel","G2DataModel","BlankPage","LogValue","Line1DataLog","state","setState","count","DataRequest","label","site","page","line","HMIName","TableName","response","RenderNewData"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Row } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { RealtimeData_Request } from '../../api'\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel'\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper'\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper'\r\n\r\n\r\nlet C3DataModel = C3Model\r\nlet G2DataModel = G2Model\r\nlet BlankPage\r\n\r\nlet LogValue = {\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n}\r\n\r\nconst Line1DataLog = () => {\r\n\r\n    const [state, setState] = useState({ count: 0});\r\n\r\n    const DataRequest = async (label, site, page, line, HMIName, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        LogValue[TableName] = DataSortRT(response)\r\n        LogValue[HMIName] = LogValue[TableName]\r\n    }\r\n\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest([], 'Polymerlink', '1', 'C3', 'C3HMI', \"C3Table\")\r\n        DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\")\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                        <div>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeTableWrapper TableTitle={'C3'} TableData={LogValue['C3Table']} />\r\n                    </Col>\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeTableWrapper TableTitle={'G2'} TableData={LogValue['G2Table']} />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div>\r\n                <Row gutter={[16, 16]}>\r\n\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeGraphWrapper GarphTitle={'C3'}\r\n                            DataModel={C3DataModel}\r\n                            RawDataReceive={LogValue['C3Table']}\r\n                            Divname={'C3Graph'}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeGraphWrapper GarphTitle={'G2'}\r\n                            DataModel={G2DataModel}\r\n                            RawDataReceive={LogValue['G2Table']}\r\n                            Divname={'G2Graph'}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1DataLog\r\n"]},"metadata":{},"sourceType":"module"}