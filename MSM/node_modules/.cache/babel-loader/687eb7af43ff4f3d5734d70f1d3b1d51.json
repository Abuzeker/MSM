{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1RT.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { RealtimeData_Request } from '../../api';\nimport { C3Model } from '../../DataRequest/DataModel';\nimport { DataMapping, DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport HMIWrapper from '../Realtime/HMIWrapper';\nimport PolymerC3 from './HMI/PolymerC3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet C3DataModel = C3Model;\nlet RealTimeValue = {\n  \"R1\": [],\n  \"R2\": {},\n  \"R3\": {},\n  \"R4\": {}\n};\n\nconst Line1RT = () => {\n  _s();\n\n  const [Refresh, setRefresh] = useState(false);\n\n  const DataRequest = async (label, site, page, line, BufferName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[BufferName] = DataSortRT(response);\n    console.log(RealTimeValue[BufferName]);\n    console.log('ori'); //RealTimeValue[BufferName] = DataMapping(C3DataModel,RealTimeValue[BufferName])\n    //console.log(RealTimeValue[BufferName])\n  };\n\n  const test = () => {\n    DataRequest([], 'Polymerlink', '1', 'C3', 'R1'); //console.log(RealTimeValue['R1']);\n\n    setRefresh(!Refresh);\n  }; // function findPara(para, Line) {\n  //     let para3 = {}\n  //     if (Line === \"C3\") {\n  //         try {\n  //             let para2 = RT_tablebuf.find(x => x['Label'] === para)\n  //             para3.Value = para2.Value\n  //             para3.SV = para2.SV\n  //             //console.log(`success ${para3.Value}`)\n  //         }\n  //         catch {\n  //             para3.Value = 'none'\n  //             para3.SV = 'none'\n  //         }\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('render'), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: test,\n      children: \" Test R\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HMIWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PolymerC3, {\n          Parameter: RealTimeValue['R1']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1RT, \"Ciab3riUJBO46O2LCHiymj1kVt8=\");\n\n_c = Line1RT;\nexport default Line1RT;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1RT\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1RT.jsx"],"names":["Button","React","useState","useEffect","RealtimeData_Request","C3Model","DataMapping","DataSortRT","HMIWrapper","PolymerC3","C3DataModel","RealTimeValue","Line1RT","Refresh","setRefresh","DataRequest","label","site","page","line","BufferName","response","console","log","test"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,uCAAxC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,IAAIC,WAAW,GAAGL,OAAlB;AAEA,IAAIM,aAAa,GAAG;AAChB,QAAM,EADU;AAEhB,QAAM,EAFU;AAGhB,QAAM,EAHU;AAIhB,QAAM;AAJU,CAApB;;AAOA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAK,CAACC,OAAD,EAAWC,UAAX,IAAyBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,WAAW,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,KAA+C;AAC/D,UAAMC,QAAQ,GAAG,MAAMjB,oBAAoB,CAACY,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,CAA3C;AACAR,IAAAA,aAAa,CAACS,UAAD,CAAb,GAA4Bb,UAAU,CAACc,QAAD,CAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAa,CAACS,UAAD,CAAzB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAJ+D,CAK/D;AACA;AACH,GAPD;;AASA,QAAMC,IAAI,GAAG,MAAM;AACfT,IAAAA,WAAW,CAAC,EAAD,EAAK,aAAL,EAAoB,GAApB,EAAyB,IAAzB,EAA8B,IAA9B,CAAX,CADe,CAEf;;AACAD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAJD,CAbkB,CAmBlB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA,sBACI;AAAA,eACKS,OAAO,CAACC,GAAR,CAAY,QAAZ,CADL,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAA,6BACI;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAIb,aAAa,CAAC,IAAD;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnDD;;GAAMC,O;;KAAAA,O;AAqDN,eAAeA,OAAf","sourcesContent":["import { Button } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { RealtimeData_Request } from '../../api'\r\nimport { C3Model } from '../../DataRequest/DataModel'\r\nimport { DataMapping, DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport HMIWrapper from '../Realtime/HMIWrapper'\r\nimport PolymerC3 from './HMI/PolymerC3'\r\n\r\nlet C3DataModel = C3Model\r\n\r\nlet RealTimeValue = {\r\n    \"R1\": [],\r\n    \"R2\": {},\r\n    \"R3\": {},\r\n    \"R4\": {}\r\n}\r\n\r\nconst Line1RT = () => {\r\n\r\n    const[Refresh , setRefresh] = useState(false)\r\n\r\n    const DataRequest = async (label, site, page, line, BufferName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[BufferName] = DataSortRT(response)\r\n        console.log(RealTimeValue[BufferName])\r\n        console.log('ori');\r\n        //RealTimeValue[BufferName] = DataMapping(C3DataModel,RealTimeValue[BufferName])\r\n        //console.log(RealTimeValue[BufferName])\r\n    }\r\n\r\n    const test = () => {\r\n        DataRequest([], 'Polymerlink', '1', 'C3','R1')\r\n        //console.log(RealTimeValue['R1']);\r\n        setRefresh(!Refresh)\r\n    }\r\n\r\n    // function findPara(para, Line) {\r\n    //     let para3 = {}\r\n\r\n    //     if (Line === \"C3\") {\r\n    //         try {\r\n    //             let para2 = RT_tablebuf.find(x => x['Label'] === para)\r\n    //             para3.Value = para2.Value\r\n    //             para3.SV = para2.SV\r\n    //             //console.log(`success ${para3.Value}`)\r\n    //         }\r\n    //         catch {\r\n    //             para3.Value = 'none'\r\n    //             para3.SV = 'none'\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {console.log('render')}\r\n            <Button onClick={test}> Test R</Button>\r\n            <HMIWrapper>\r\n                <div>\r\n                    <PolymerC3 Parameter = {RealTimeValue['R1']} />\r\n                </div>\r\n            </HMIWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1RT\r\n"]},"metadata":{},"sourceType":"module"}