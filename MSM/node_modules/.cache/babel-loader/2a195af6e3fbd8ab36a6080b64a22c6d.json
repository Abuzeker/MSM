{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1RT.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { RealtimeData_Request } from '../../api';\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\nimport { DataMapping, DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport HMIWrapper from '../Realtime/HMIWrapper';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport PolymerC3 from './HMI/PolymerC3';\nimport PolymerG2 from './HMI/PolymerG2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet C3DataModel = C3Model;\nlet G2DataModel = G2Model;\nlet BlankPage;\nlet RealTimeValue = {\n  \"R1\": C3DataModel,\n  \"R2\": G2DataModel,\n  \"R3\": {},\n  \"R4\": {}\n};\n\nconst Line1RT = () => {\n  _s();\n\n  const [Refresh, setRefresh] = useState(false);\n\n  const DataRequest = async (label, site, page, line, BufferName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[BufferName] = DataSortRT(response);\n  };\n\n  const test = () => {\n    DataRequest([], 'Polymerlink', '1', 'C3', 'R1');\n    DataRequest([], 'Polymerlink', BlankPage, 'G2', 'R2'); //console.log(RealTimeValue['R2']);\n\n    setRefresh(!Refresh);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('render'), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: test,\n      children: \" Test R\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HMIWrapper, {\n      Tab: ['C3', 'G2'],\n      children: [/*#__PURE__*/_jsxDEV(PolymerC3, {\n        Parameter: RealTimeValue['R1']\n      }, 'C3', false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PolymerG2, {\n        Parameter: RealTimeValue['R2']\n      }, 'G2', false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RealTimeTableWrapper, {\n      TableTitle: 'C3',\n      TableData: RealTimeValue['R1']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RealTimeTableWrapper, {\n      TableTitle: 'C3',\n      TableData: RealTimeValue['R2']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1RT, \"oHQ0FoOQ8DFxRWAVI2xXFJlVRfc=\");\n\n_c = Line1RT;\nexport default Line1RT;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1RT\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1RT.jsx"],"names":["Button","React","useState","useEffect","RealtimeData_Request","C3Model","G2Model","DataMapping","DataSortRT","HMIWrapper","RealTimeTableWrapper","PolymerC3","PolymerG2","C3DataModel","G2DataModel","BlankPage","RealTimeValue","Line1RT","Refresh","setRefresh","DataRequest","label","site","page","line","BufferName","response","test","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,6BAAjC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,uCAAxC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,IAAIC,WAAW,GAAGR,OAAlB;AACA,IAAIS,WAAW,GAAGR,OAAlB;AACA,IAAIS,SAAJ;AAEA,IAAIC,aAAa,GAAG;AAChB,QAAMH,WADU;AAEhB,QAAMC,WAFU;AAGhB,QAAM,EAHU;AAIhB,QAAM;AAJU,CAApB;;AASA,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMkB,WAAW,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,KAA+C;AAC/D,UAAMC,QAAQ,GAAG,MAAMtB,oBAAoB,CAACiB,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,CAA3C;AACAR,IAAAA,aAAa,CAACS,UAAD,CAAb,GAA4BjB,UAAU,CAACkB,QAAD,CAAtC;AACH,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAM;AACfP,IAAAA,WAAW,CAAC,EAAD,EAAK,aAAL,EAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,CAAX;AACAA,IAAAA,WAAW,CAAC,EAAD,EAAK,aAAL,EAAoBL,SAApB,EAA+B,IAA/B,EAAqC,IAArC,CAAX,CAFe,CAIf;;AACAI,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAND;;AAQA,sBACI;AAAA,eACKU,OAAO,CAACC,GAAR,CAAY,QAAZ,CADL,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,UAAD;AAAY,MAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP,CAAjB;AAAA,8BACI,QAAC,SAAD;AAAsB,QAAA,SAAS,EAAEX,aAAa,CAAC,IAAD;AAA9C,SAAgB,IAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAsB,QAAA,SAAS,EAAEA,aAAa,CAAC,IAAD;AAA9C,SAAgB,IAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI,QAAC,oBAAD;AAAsB,MAAA,UAAU,EAAI,IAApC;AAA0C,MAAA,SAAS,EAAIA,aAAa,CAAC,IAAD;AAApE;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,oBAAD;AAAsB,MAAA,UAAU,EAAI,IAApC;AAA0C,MAAA,SAAS,EAAIA,aAAa,CAAC,IAAD;AAApE;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCD;;GAAMC,O;;KAAAA,O;AAoCN,eAAeA,OAAf","sourcesContent":["import { Button } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { RealtimeData_Request } from '../../api'\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel'\r\nimport { DataMapping, DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport HMIWrapper from '../Realtime/HMIWrapper'\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper'\r\nimport PolymerC3 from './HMI/PolymerC3'\r\nimport PolymerG2 from './HMI/PolymerG2'\r\n\r\nlet C3DataModel = C3Model\r\nlet G2DataModel = G2Model\r\nlet BlankPage\r\n\r\nlet RealTimeValue = {\r\n    \"R1\": C3DataModel,\r\n    \"R2\": G2DataModel,\r\n    \"R3\": {},\r\n    \"R4\": {}\r\n}\r\n\r\n\r\n\r\nconst Line1RT = () => {\r\n\r\n    const [Refresh, setRefresh] = useState(false)\r\n\r\n    const DataRequest = async (label, site, page, line, BufferName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[BufferName] = DataSortRT(response)\r\n    }\r\n\r\n    const test = () => {\r\n        DataRequest([], 'Polymerlink', '1', 'C3', 'R1')\r\n        DataRequest([], 'Polymerlink', BlankPage, 'G2', 'R2')\r\n\r\n        //console.log(RealTimeValue['R2']);\r\n        setRefresh(!Refresh)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {console.log('render')}\r\n            <Button onClick={test}> Test R</Button>\r\n\r\n            <HMIWrapper Tab={['C3', 'G2']}>\r\n                <PolymerC3 key={'C3'} Parameter={RealTimeValue['R1']} />\r\n                <PolymerG2 key={'G2'} Parameter={RealTimeValue['R2']} />\r\n            </HMIWrapper>\r\n\r\n            <RealTimeTableWrapper TableTitle = {'C3'} TableData = {RealTimeValue['R1']}/>\r\n            <RealTimeTableWrapper TableTitle = {'C3'} TableData = {RealTimeValue['R2']}/>\r\n                \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1RT\r\n"]},"metadata":{},"sourceType":"module"}