{"ast":null,"code":"import jsPDF from \"jspdf\";\n\nfunction createHeaders(keys) {\n  var result = [];\n\n  for (var i = 0; i < keys.length; i += 1) {\n    result.push({\n      id: keys[i],\n      name: keys[i],\n      prompt: keys[i],\n      width: 75,\n      align: \"center\",\n      padding: 3\n    });\n  }\n\n  return result;\n}\n\nexport const TimeColumbPDF = () => {\n  let TimeRow = ['Parameter'];\n\n  for (let i = 0; i < 24; i++) {\n    let n;\n    i < 10 ? n = `0${i}` : n = i;\n    TimeRow.push(`${n}:00`);\n  }\n\n  return TimeRow;\n};\n_c = TimeColumbPDF;\nexport const NameColumbPDF = Model => {\n  const Label = Object.keys(Model);\n  Label.pop();\n  Label.pop();\n  Label.pop();\n  Label.unshift(\"Time\");\n  console.log(Label);\n  return Label;\n};\n_c2 = NameColumbPDF;\nexport const GeneratePDFC3 = (headerArray, DataArray, info) => {\n  // console.log(info.Info1);\n  var headers = createHeaders(headerArray);\n  var doc = new jsPDF({\n    putOnlyUsedFonts: true,\n    orientation: \"l\",\n    unit: \"px\"\n  });\n  doc.setFontSize(20);\n  doc.text(\"Extruder Operating Sheet(82mm)\", 10, 20, {});\n  doc.setFontSize(15);\n  doc.text(\"Job No:\", 10, 60, {}); // doc.text(info.Info1, 60, 60, {});\n\n  doc.text(\"Grade:\", 140, 60, {});\n  doc.text(\"Color:\", 280, 60, {});\n  doc.text(\"Date:\", 420, 60, {});\n  doc.table(5, 80, DataArray, headers, {\n    autoSize: true,\n    fontSize: 9,\n    padding: 3\n  });\n  doc.save(\"a4.pdf\");\n};\n_c3 = GeneratePDFC3;\nexport const GeneratePDFG2 = (headerArray, DataArray, info) => {\n  var headers = createHeaders(headerArray);\n  var doc = new jsPDF({\n    putOnlyUsedFonts: true,\n    orientation: \"l\",\n    unit: \"px\",\n    verticalOffset: 40\n  });\n  doc.text(\"Extruder Operating Sheet(82mm)\", 10, 20, {});\n  doc.setFontSize(15);\n  doc.text(\"Job No:\", 10, 60, {});\n  doc.text(info.Info1, 60, 60, {});\n  doc.text(\"Grade:\", 140, 60, {});\n  doc.text(info.Info5, 190, 60, {});\n  doc.text(\"Color:\", 240, 60, {});\n  doc.text(info.Info4, 290, 60, {});\n  doc.text(\"Start Date:\", 10, 90, {});\n  doc.text(info.Info2, 90, 60, {});\n  doc.text(\"End Date:\", 180, 90, {});\n  doc.text(info.Info3, 260, 60, {});\n  doc.table(5, 120, DataArray, headers, {\n    autoSize: false,\n    fontSize: 9,\n    padding: 3\n  });\n  doc.save(\"a4.pdf\");\n};\n_c4 = GeneratePDFG2;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TimeColumbPDF\");\n$RefreshReg$(_c2, \"NameColumbPDF\");\n$RefreshReg$(_c3, \"GeneratePDFC3\");\n$RefreshReg$(_c4, \"GeneratePDFG2\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/utils/PdfGenerate.js"],"names":["jsPDF","createHeaders","keys","result","i","length","push","id","name","prompt","width","align","padding","TimeColumbPDF","TimeRow","n","NameColumbPDF","Model","Label","Object","pop","unshift","console","log","GeneratePDFC3","headerArray","DataArray","info","headers","doc","putOnlyUsedFonts","orientation","unit","setFontSize","text","table","autoSize","fontSize","save","GeneratePDFG2","verticalOffset","Info1","Info5","Info4","Info2","Info3"],"mappings":"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","sourcesContent":["import jsPDF from \"jspdf\";\r\n\r\n\r\nfunction createHeaders(keys) {\r\n    var result = [];\r\n    for (var i = 0; i < keys.length; i += 1) {\r\n        result.push({\r\n            id: keys[i],\r\n            name: keys[i],\r\n            prompt: keys[i],\r\n            width: 75,\r\n            align: \"center\",\r\n            padding: 3,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const TimeColumbPDF = () => {\r\n\r\n    let TimeRow = ['Parameter']\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n        let n\r\n        i < 10 ? n = `0${i}` : n = i\r\n        TimeRow.push(`${n}:00`)\r\n    }\r\n\r\n    return TimeRow\r\n}\r\n\r\nexport const NameColumbPDF = (Model) => {\r\n\r\n    const Label = Object.keys(Model)\r\n    Label.pop()\r\n    Label.pop()\r\n    Label.pop()\r\n\r\n    Label.unshift(\"Time\")\r\n    console.log(Label);\r\n    return Label\r\n}\r\n\r\n\r\n\r\nexport const GeneratePDFC3 = (headerArray, DataArray, info) => {\r\n\r\n    // console.log(info.Info1);\r\n\r\n    var headers = createHeaders(headerArray)\r\n\r\n    var doc = new jsPDF({ putOnlyUsedFonts: true, orientation: \"l\", unit: \"px\" })\r\n    doc.setFontSize(20)\r\n    doc.text(\"Extruder Operating Sheet(82mm)\", 10, 20, {});\r\n    doc.setFontSize(15)\r\n    doc.text(\"Job No:\", 10, 60, {});\r\n    // doc.text(info.Info1, 60, 60, {});\r\n\r\n    doc.text(\"Grade:\", 140, 60, {});\r\n    doc.text(\"Color:\", 280, 60, {});\r\n    doc.text(\"Date:\", 420, 60, {});\r\n    doc.table(5, 80, DataArray, headers, { autoSize: true, fontSize: 9, padding: 3 });\r\n    doc.save(\"a4.pdf\")\r\n}\r\n\r\n\r\n\r\n\r\nexport const GeneratePDFG2 = (headerArray, DataArray, info) => {\r\n\r\n    var headers = createHeaders(headerArray)\r\n\r\n    var doc = new jsPDF({ putOnlyUsedFonts: true, orientation: \"l\", unit: \"px\", verticalOffset:40 })\r\n    doc.text(\"Extruder Operating Sheet(82mm)\", 10, 20, {});\r\n    doc.setFontSize(15)\r\n    doc.text(\"Job No:\", 10, 60, {});\r\n    doc.text(info.Info1, 60, 60, {});\r\n\r\n    doc.text(\"Grade:\", 140, 60, {});\r\n    doc.text(info.Info5, 190, 60, {});\r\n\r\n    doc.text(\"Color:\", 240, 60, {});\r\n    doc.text(info.Info4, 290, 60, {});\r\n\r\n    doc.text(\"Start Date:\", 10, 90, {});\r\n    doc.text(info.Info2, 90, 60, {});\r\n\r\n    doc.text(\"End Date:\", 180, 90, {});\r\n    doc.text(info.Info3, 260, 60, {});\r\n\r\n    doc.table(5, 120, DataArray, headers, { autoSize: false, fontSize: 9, padding: 3 });\r\n    doc.save(\"a4.pdf\")\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}