{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{DeleteJob,logdata_request,logdata_Write,ReadJob,WriteJob}from'../../api';import{DataSortTime,TableColumbLabelAsRow,LogDataMappingName,ReportSort,TableColumbJob,TableColumbLabelAsRowG2}from'../../DataRequest/LogDataRequestWrap';import{G2Model,JobModel}from'../../DataRequest/DataModel';import NameTableWrapper from'../Report/NameTableWrapper';import ReportWrapper from'../Report/ReportWrapper';import{Button,message}from'antd';import ReportListWrapper from'../Report/ReportListWrapper';import moment from'moment';import BagModal from'../Report/BagModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LogValue={\"LogC3\":[],\"LogG2\":[]};var ReportList={\"C3ReportList\":[],\"G2ReportList\":[]};var JobDetailRecord={datetimeStart:'',datetimeEnd:'',site:'',line:'',BufferName:''};var Cell=[\"A10\",\"E10\",\"I10\",\"M10\",\"Q10\"];var ReportInfoG2={};var BlankPage,ClickTime;var Line1ReportG2=function Line1ReportG2(){var _useState=useState({count:0}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isModalVisible=_useState4[0],setIsModalVisible=_useState4[1];var JobDeleteHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(jobnumber,line,page){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return DeleteJob(jobnumber['Job No'],line,page);case 2:response=_context.sent;if(response.success===true){message.success(\"Job \".concat(jobnumber['Job No'],\" Deleted\"));RequestJob([],JobDetailRecord.datetimeStart,JobDetailRecord.datetimeEnd,JobDetailRecord.site,JobDetailRecord.line,JobDetailRecord.BufferName);}else{message.error(\"Unable to Delete Job \".concat(jobnumber['Job No']));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function JobDeleteHandler(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var DataRequestG2=function DataRequestG2(row){var TimeRange=[];TimeRange[0]=moment(row['Start Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";TimeRange[1]=moment(row['End Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";ReportInfoG2.Info1=row['Job No'];ReportInfoG2.Info2=row['Start Time'];ReportInfoG2.Info3=row['End Time'];ReportInfoG2.Info4=row['Color'];ReportInfoG2.Info5=row['Grade'];UpdateTableData([],TimeRange[0],TimeRange[1],'Polymerlink','G2',BlankPage,'LogG2',G2Model);};var ColumbJobG2=TableColumbJob(JobModel,DataRequestG2,JobDeleteHandler,'G2',BlankPage,'View','Delete');var UpdateTableData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Parameter,StartTime,EndTime,Site,Line,Page,BufferName,Model){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return logdata_request(Parameter,StartTime,EndTime,Site,Line,Page);case 2:response=_context2.sent;data=DataSortTime(response);LogValue[BufferName]=LogDataMappingName(Model,data);setState(function(_ref3){var count=_ref3.count;return{count:count+1};});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function UpdateTableData(_x4,_x5,_x6,_x7,_x8,_x9,_x10,_x11){return _ref2.apply(this,arguments);};}();var CreateJob=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(info,datetimeStart,datetimeEnd,site,line){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return WriteJob(info,datetimeStart,datetimeEnd,site,line);case 2:response=_context3.sent;if(response.success===true){message.success('Create Success !');}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function CreateJob(_x12,_x13,_x14,_x15,_x16){return _ref4.apply(this,arguments);};}();var RequestJob=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(info,datetimeStart,datetimeEnd,site,line,BufferName){var response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:JobDetailRecord.datetimeStart=datetimeStart;JobDetailRecord.datetimeEnd=datetimeEnd;JobDetailRecord.site=site;JobDetailRecord.line=line;JobDetailRecord.BufferName=BufferName;_context4.next=7;return ReadJob(info,datetimeStart,datetimeEnd,site,line);case 7:response=_context4.sent;data=ReportSort(response);ReportList[BufferName]=data;//console.log(data);\nsetState(function(_ref6){var count=_ref6.count;return{count:count+1};});case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function RequestJob(_x17,_x18,_x19,_x20,_x21,_x22){return _ref5.apply(this,arguments);};}();var InputBag=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(value){var DateTime,parameter,Value,response,TimeRange;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:parameter={},Value=[];// console.log(record['Time']);\nDateTime=ClickTime;parameter['DateTime']=DateTime;parameter['Bag']=value;Value.push(parameter);console.log(parameter);_context5.next=8;return logdata_Write(Value,'G2',BlankPage);case 8:response=_context5.sent;if(response.success===true){console.log('ok');message.success(\"Bag Number Added\");TimeRange=[];TimeRange[0]=moment(ReportInfoG2.Info2,\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";TimeRange[1]=moment(ReportInfoG2.Info3,\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";UpdateTableData([],TimeRange[0],TimeRange[1],'Polymerlink','G2',BlankPage,'LogG2',G2Model);// UpdateTableData([], JobDetailRecord.datetimeStart, JobDetailRecord.datetimeEnd, 'Polymerlink', 'G2', BlankPage, 'LogG2', G2Model)\n}else{message.error(\"Fail to add\");}console.log(response);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return function InputBag(_x23){return _ref7.apply(this,arguments);};}();var showModal=function showModal(record){ClickTime=moment(record['Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";setIsModalVisible(true);};var handleOk=function handleOk(record){//console.log(record['Bag']);\nInputBag(record['Bag']);setIsModalVisible(false);console.log(record);};var handleCancel=function handleCancel(){setIsModalVisible(false);};var ColumbG2=TableColumbLabelAsRowG2(G2Model,showModal);console.log(ColumbG2);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BagModal,{visible:isModalVisible,onok:handleOk,onCancle:handleCancel}),/*#__PURE__*/_jsx(ReportWrapper,{CreateJobCallBack:CreateJob,site:'Polymerlink',line:'G2'}),/*#__PURE__*/_jsx(ReportListWrapper,{ReportListCallBack:RequestJob,site:'Polymerlink',line:'G2',ReportList:ReportList['G2ReportList'],Columb:ColumbJobG2,BufferName:\"G2ReportList\"}),/*#__PURE__*/_jsx(NameTableWrapper,{SetTimeRangeCallBack:UpdateTableData,LogValue:LogValue['LogG2'],Columb:ColumbG2,site:'G2',page:BlankPage,BufferName:\"LogG2\",Model:G2Model,JobInfo:ReportInfoG2,FileName:'MILL.xlsx',startingColumb:'A',startingRow:14,EndingColumb:'O',EndingRow:14,Cell:Cell})]});};export default Line1ReportG2;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1ReportG2.jsx"],"names":["React","useState","useEffect","DeleteJob","logdata_request","logdata_Write","ReadJob","WriteJob","DataSortTime","TableColumbLabelAsRow","LogDataMappingName","ReportSort","TableColumbJob","TableColumbLabelAsRowG2","G2Model","JobModel","NameTableWrapper","ReportWrapper","Button","message","ReportListWrapper","moment","BagModal","LogValue","ReportList","JobDetailRecord","datetimeStart","datetimeEnd","site","line","BufferName","Cell","ReportInfoG2","BlankPage","ClickTime","Line1ReportG2","count","state","setState","isModalVisible","setIsModalVisible","JobDeleteHandler","jobnumber","page","response","success","RequestJob","error","DataRequestG2","row","TimeRange","toISOString","split","Info1","Info2","Info3","Info4","Info5","UpdateTableData","ColumbJobG2","Parameter","StartTime","EndTime","Site","Line","Page","Model","data","CreateJob","info","InputBag","value","parameter","Value","DateTime","push","console","log","showModal","record","handleOk","handleCancel","ColumbG2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DeleteJob, logdata_request, logdata_Write, ReadJob, WriteJob } from '../../api';\r\nimport { DataSortTime, TableColumbLabelAsRow, LogDataMappingName, ReportSort, TableColumbJob, TableColumbLabelAsRowG2 } from '../../DataRequest/LogDataRequestWrap';\r\nimport { G2Model, JobModel } from '../../DataRequest/DataModel';\r\nimport NameTableWrapper from '../Report/NameTableWrapper';\r\nimport ReportWrapper from '../Report/ReportWrapper';\r\nimport { Button, message } from 'antd';\r\nimport ReportListWrapper from '../Report/ReportListWrapper';\r\nimport moment from 'moment';\r\nimport BagModal from '../Report/BagModal';\r\n\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nlet ReportList = {\r\n    \"C3ReportList\": [],\r\n    \"G2ReportList\": []\r\n}\r\n\r\nlet JobDetailRecord = {\r\n    datetimeStart: '',\r\n    datetimeEnd: '',\r\n    site: '',\r\n    line: '',\r\n    BufferName: ''\r\n}\r\n\r\nlet Cell = [\"A10\",\"E10\",\"I10\",\"M10\",\"Q10\"]\r\n\r\nlet ReportInfoG2 = {}\r\n\r\nlet BlankPage, ClickTime\r\n\r\n\r\nconst Line1ReportG2 = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n    const JobDeleteHandler = async (jobnumber, line, page) => {\r\n        const response = await DeleteJob(jobnumber['Job No'], line, page)\r\n\r\n        if (response.success === true) {\r\n            message.success(`Job ${jobnumber['Job No']} Deleted`)\r\n            RequestJob([], JobDetailRecord.datetimeStart, JobDetailRecord.datetimeEnd,\r\n                JobDetailRecord.site, JobDetailRecord.line, JobDetailRecord.BufferName)\r\n        }\r\n\r\n        else {\r\n            message.error(`Unable to Delete Job ${jobnumber['Job No']}`)\r\n        }\r\n\r\n    }\r\n\r\n    const DataRequestG2 = (row) => {\r\n\r\n        let TimeRange = []\r\n\r\n        TimeRange[0] = (moment(row['Start Time'], \"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0] + \"Z\")\r\n        TimeRange[1] = (moment(row['End Time'], \"DD-MM-YYYY HH:mm:ss\")).toISOString(false).split('.')[0] + \"Z\"\r\n\r\n        ReportInfoG2.Info1 = row['Job No']\r\n        ReportInfoG2.Info2 = row['Start Time']\r\n        ReportInfoG2.Info3 = row['End Time']\r\n        ReportInfoG2.Info4 = row['Color']\r\n        ReportInfoG2.Info5 = row['Grade']\r\n\r\n        UpdateTableData([], TimeRange[0], TimeRange[1], 'Polymerlink', 'G2', BlankPage, 'LogG2', G2Model)\r\n    }\r\n    const ColumbJobG2 = TableColumbJob(JobModel, DataRequestG2, JobDeleteHandler, 'G2', BlankPage, 'View', 'Delete')\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n\r\n        LogValue[BufferName] = LogDataMappingName(Model, data)\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const CreateJob = async (info, datetimeStart, datetimeEnd, site, line) => {\r\n        const response = await WriteJob(info, datetimeStart, datetimeEnd, site, line)\r\n        if (response.success === true) {\r\n            message.success('Create Success !')\r\n        }\r\n    }\r\n\r\n    const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\r\n        JobDetailRecord.datetimeStart = datetimeStart\r\n        JobDetailRecord.datetimeEnd = datetimeEnd\r\n        JobDetailRecord.site = site\r\n        JobDetailRecord.line = line\r\n        JobDetailRecord.BufferName = BufferName\r\n\r\n        const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line)\r\n        let data = ReportSort(response)\r\n        ReportList[BufferName] = data\r\n        //console.log(data);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const InputBag = async (value) => {\r\n        let DateTime, parameter = {}, Value = []\r\n\r\n        // console.log(record['Time']);\r\n\r\n        DateTime = ClickTime\r\n        parameter['DateTime'] = DateTime\r\n        parameter['Bag'] = value\r\n\r\n        Value.push(parameter)\r\n\r\n        console.log(parameter);\r\n\r\n        const response = await logdata_Write(Value, 'G2', BlankPage)\r\n\r\n        if (response.success === true) {\r\n            console.log('ok');\r\n            message.success(`Bag Number Added`)\r\n            let TimeRange = []\r\n\r\n            TimeRange[0] = (moment(ReportInfoG2.Info2, \"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0] + \"Z\")\r\n            TimeRange[1] = (moment(ReportInfoG2.Info3, \"DD-MM-YYYY HH:mm:ss\")).toISOString(false).split('.')[0] + \"Z\"\r\n    \r\n            UpdateTableData([], TimeRange[0], TimeRange[1], 'Polymerlink', 'G2', BlankPage, 'LogG2', G2Model)\r\n            // UpdateTableData([], JobDetailRecord.datetimeStart, JobDetailRecord.datetimeEnd, 'Polymerlink', 'G2', BlankPage, 'LogG2', G2Model)\r\n        }\r\n\r\n        else {\r\n            message.error(`Fail to add`)\r\n        }\r\n\r\n\r\n        console.log(response);\r\n    }\r\n\r\n    const showModal = (record) => {\r\n        ClickTime = moment(record['Time'], \"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0] + \"Z\"\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleOk = (record) => {\r\n        //console.log(record['Bag']);\r\n        InputBag(record['Bag'])\r\n        setIsModalVisible(false)\r\n        console.log(record);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const ColumbG2 = TableColumbLabelAsRowG2(G2Model, showModal)\r\n    console.log(ColumbG2);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* G2 part here */}\r\n            <BagModal \r\n                visible={isModalVisible}\r\n                onok={handleOk} onCancle = {handleCancel}\r\n            />\r\n\r\n            <ReportWrapper CreateJobCallBack={CreateJob}\r\n                site={'Polymerlink'} line={'G2'}\r\n            />\r\n\r\n            <ReportListWrapper ReportListCallBack={RequestJob}\r\n                site={'Polymerlink'} line={'G2'}\r\n                ReportList={ReportList['G2ReportList']}\r\n                Columb={ColumbJobG2}\r\n                BufferName={\"G2ReportList\"}\r\n            />\r\n\r\n            <NameTableWrapper SetTimeRangeCallBack={UpdateTableData}\r\n                LogValue={LogValue['LogG2']} Columb={ColumbG2}\r\n                site={'G2'} page={BlankPage} BufferName={\"LogG2\"} Model={G2Model}\r\n                JobInfo={ReportInfoG2} FileName={'MILL.xlsx'} startingColumb={'A'} startingRow={14}\r\n                EndingColumb={'O'} EndingRow={14} Cell={Cell}\r\n            />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Line1ReportG2\r\n"]},"metadata":{},"sourceType":"module"}