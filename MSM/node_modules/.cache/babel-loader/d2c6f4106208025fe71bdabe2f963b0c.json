{"ast":null,"code":"import axios from 'axios';\nimport { message } from 'antd';\nexport default function request(url, data = {}, type = 'GET') {\n  axios.defaults.withCredentials = true;\n  return new Promise((resolve, reject) => {\n    let promise;\n\n    if (type === 'GET') {\n      promise = axios.get(url, {\n        params: data\n      });\n    } else {\n      promise = axios.post(url, data);\n    }\n\n    promise.then(response => {\n      resolve(response.data); //console.log(response);\n    }).catch(error => {\n      message.error('Request Fail: ' + error.message);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/tatac/Desktop/MSM-Front/MSM/src/api/request.js"],"names":["axios","message","request","url","data","type","defaults","withCredentials","Promise","resolve","reject","promise","get","params","post","then","response","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAGA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,IAAI,GAAG,EAA7B,EAAiCC,IAAI,GAAG,KAAxC,EAA+C;AAC1DL,EAAAA,KAAK,CAACM,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAGA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,OAAJ;;AAEA,QAAIN,IAAI,KAAK,KAAb,EAAoB;AAChBM,MAAAA,OAAO,GAAGX,KAAK,CAACY,GAAN,CAAUT,GAAV,EAAc;AAAEU,QAAAA,MAAM,EAAET;AAAV,OAAd,CAAV;AACH,KAFD,MAEO;AACHO,MAAAA,OAAO,GAAGX,KAAK,CAACc,IAAN,CAAWX,GAAX,EAAgBC,IAAhB,CAAV;AACH;;AAEDO,IAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAI;AACrBP,MAAAA,OAAO,CAACO,QAAQ,CAACZ,IAAV,CAAP,CADqB,CAErB;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAI;AACdjB,MAAAA,OAAO,CAACiB,KAAR,CAAc,mBAAmBA,KAAK,CAACjB,OAAvC;AACH,KALD;AAMH,GAfM,CAAP;AAgBH","sourcesContent":["import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n\r\nexport default function request(url, data = {}, type = 'GET') {\r\n    axios.defaults.withCredentials = true\r\n    \r\n\r\n    return new Promise((resolve, reject) => {\r\n        let promise\r\n\r\n        if (type === 'GET') {\r\n            promise = axios.get(url,{ params: data})\r\n        } else {\r\n            promise = axios.post(url, data)\r\n        }\r\n\r\n        promise.then(response => {\r\n            resolve(response.data)\r\n            //console.log(response);\r\n        }).catch(error => {\r\n            message.error('Request Fail: ' + error.message)\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}