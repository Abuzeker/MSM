{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ReadJob } from '../../api';\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob } from '../../DataRequest/LogDataRequestWrap';\nimport moment from 'moment';\nimport { JobModel } from '../../DataRequest/DataModel';\nimport { Button, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LogValue = {\n  \"LogC3\": [],\n  \"LogG2\": []\n};\nlet ReportList = {\n  \"C3ReportList\": [],\n  \"G2ReportList\": []\n};\nlet JobDetailRecord = {\n  datetimeStart: '',\n  datetimeEnd: '',\n  site: '',\n  line: '',\n  BufferName: ''\n};\nlet ReportInfoG2 = {};\nlet BlankPage, ClickTime;\n\nconst Home = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n\n  const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\n    const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line);\n    let data = ReportSort(response);\n    ReportList[BufferName] = data;\n    FilterOutEndedJob(ReportList[BufferName]); //console.log(data);\n\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const time = () => {\n    const timetange = GetDateTime(2, 2);\n    RequestJob([], timetange[0], timetange[1], 'Polymerlink', 'G2', \"G2ReportList\");\n  };\n\n  const ViewRealtime = () => {};\n\n  const ViewLog = () => {};\n\n  const ColumbJob = TableColumbJob(JobModel, ViewRealtime, ViewLog, 'G2', BlankPage, 'RealTime', 'Log');\n\n  const comparedate = () => {\n    let dat1 = '11-12-2021 01:00:00';\n    let dat2 = '11-12-2021 02:00:00';\n    var date1 = new Date(dat1);\n    var date2 = new Date(dat2);\n    date2 > date1 ? console.log('yes') : console.log('no');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: time,\n      children: \" test \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: comparedate,\n      children: \" compare \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: ColumbJob,\n      dataSource: ReportList[\"G2ReportList\"],\n      bordered: true,\n      scroll: {\n        x: 1000,\n        y: 500\n      },\n      pagination: false,\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"TOtJj3Zjk9A8N3grQNDDe2GZezA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Home/Home.jsx"],"names":["React","useState","ReadJob","FilterOutEndedJob","GetDateTime","ReportSort","TableColumbJob","moment","JobModel","Button","Table","LogValue","ReportList","JobDetailRecord","datetimeStart","datetimeEnd","site","line","BufferName","ReportInfoG2","BlankPage","ClickTime","Home","state","setState","count","RequestJob","info","response","data","time","timetange","ViewRealtime","ViewLog","ColumbJob","comparedate","dat1","dat2","date1","Date","date2","console","log","x","y"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { ReadJob } from '../../api'\r\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob } from '../../DataRequest/LogDataRequestWrap';\r\nimport moment from 'moment';\r\nimport { JobModel } from '../../DataRequest/DataModel';\r\nimport { Button, Table } from 'antd';\r\n\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nlet ReportList = {\r\n    \"C3ReportList\": [],\r\n    \"G2ReportList\": []\r\n}\r\n\r\nlet JobDetailRecord = {\r\n    datetimeStart: '',\r\n    datetimeEnd: '',\r\n    site: '',\r\n    line: '',\r\n    BufferName: ''\r\n}\r\n\r\nlet ReportInfoG2 = {}\r\n\r\nlet BlankPage, ClickTime\r\n\r\nconst Home = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n\r\n    const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\r\n        const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line)\r\n        let data = ReportSort(response)\r\n        ReportList[BufferName] = data\r\n        \r\n        FilterOutEndedJob(ReportList[BufferName])\r\n        //console.log(data);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n\r\n    const time = () => {\r\n        const timetange = GetDateTime(2, 2)\r\n        RequestJob([], timetange[0], timetange[1], 'Polymerlink', 'G2', \"G2ReportList\")\r\n\r\n    }\r\n\r\n    const ViewRealtime = () => {\r\n\r\n    }\r\n\r\n    const ViewLog = () => {\r\n\r\n    }\r\n\r\n    const ColumbJob = TableColumbJob(JobModel, ViewRealtime, ViewLog, 'G2', BlankPage, 'RealTime', 'Log')\r\n\r\n    const comparedate = () => {\r\n        let dat1 = '11-12-2021 01:00:00'\r\n        let dat2 = '11-12-2021 02:00:00'\r\n\r\n        var date1 = new Date(dat1);\r\n        var date2 = new Date(dat2);\r\n\r\n        date2 > date1 ? console.log('yes') : console.log('no');\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n\r\n            <Table columns={ColumbJob} dataSource={ReportList[\"G2ReportList\"]} bordered scroll={{ x: 1000, y: 500 }} pagination={false} size=\"small\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}