{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Login\\\\Login.jsx\";\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\nimport './Login.css';\nimport logo from '../../../assets/logo2.png';\nimport memoryUtils from '../../../utils/memoryUtils';\nimport storageUtils from '../../../utils/storageUtils';\nimport { Redirect } from 'react-router';\nimport React, { Component } from 'react';\nimport { LoginBackend } from '../../api/index'; // const result = {\n//     status: 0,\n//     data: 'tan',\n//     msg: 'salah pass lah!'\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Login extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onFinish = async values => {\n      const {\n        username,\n        password\n      } = values;\n      const result = await LoginBackend(username, password);\n\n      if (result.expiry !== null) {\n        //success\n        // save user info to local\n        const user = {\n          name: username,\n          site: 'All',\n          role: 'Operator',\n          autolevel: 2\n        };\n        memoryUtils.user = user;\n        storageUtils.saveUser(user);\n        message.success('Login Success');\n        this.props.history.replace('/');\n      } else {\n        //wrong pass or name\n        message.error(result.msg);\n      }\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n  }\n\n  render() {\n    const user = memoryUtils.user;\n\n    if (Object.keys(user).length !== 0) {\n      console.log('smtg');\n      console.log(Object.keys(user).length);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    } else {\n      console.log('ntg');\n      console.log(Object.keys(user).length);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"PLM-IOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"login-content\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            name: \"basic\",\n            labelCol: {\n              span: 8\n            },\n            wrapperCol: {\n              span: 16\n            },\n            initialValues: {\n              remember: true\n            },\n            onFinish: this.onFinish,\n            onFinishFailed: this.onFinishFailed,\n            autoComplete: \"off\",\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Username\",\n              name: \"username\",\n              rules: [{\n                required: true,\n                message: 'Please input your username!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Password\",\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: 'Please input your password!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                offset: 8,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Login/Login.jsx"],"names":["Form","Input","Button","Checkbox","Card","message","logo","memoryUtils","storageUtils","Redirect","React","Component","LoginBackend","Login","onFinish","values","username","password","result","expiry","user","name","site","role","autolevel","saveUser","success","props","history","replace","error","msg","onFinishFailed","errorInfo","console","log","render","Object","keys","length","span","remember","required","offset"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox, Card, message } from 'antd';\r\nimport './Login.css'\r\nimport logo from '../../../assets/logo2.png'\r\nimport memoryUtils from '../../../utils/memoryUtils'\r\nimport storageUtils from '../../../utils/storageUtils'\r\nimport { Redirect } from 'react-router';\r\nimport React, { Component } from 'react'\r\nimport {LoginBackend} from '../../api/index'\r\n\r\n// const result = {\r\n//     status: 0,\r\n//     data: 'tan',\r\n//     msg: 'salah pass lah!'\r\n// }\r\n\r\nexport class Login extends Component {\r\n\r\n    onFinish = async (values) => {\r\n\r\n        const { username, password } = values\r\n\r\n        const result = await LoginBackend(username, password)\r\n\r\n        if (result.expiry !== null) { //success\r\n\r\n            // save user info to local\r\n            const user = {\r\n                name: username,\r\n                site:'All',\r\n                role:'Operator',\r\n                autolevel:2\r\n            } \r\n            memoryUtils.user = user\r\n            storageUtils.saveUser(user)\r\n            message.success('Login Success')\r\n            this.props.history.replace('/')\r\n        }\r\n\r\n        else { //wrong pass or name\r\n            message.error(result.msg)\r\n        }\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        const user = memoryUtils.user\r\n        if (Object.keys(user).length !== 0) {\r\n            console.log('smtg')\r\n            console.log(Object.keys(user).length)\r\n            return <Redirect to='/' />\r\n        }\r\n        else{\r\n            console.log('ntg')\r\n            console.log(Object.keys(user).length)\r\n        }\r\n\r\n        return (\r\n            <div className='login'>\r\n\r\n            <header className=\"login-header\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <h1>PLM-IOT</h1>\r\n            </header>\r\n\r\n            <Card className=\"login-content\">\r\n\r\n                <section >\r\n                    <h2>Login</h2>\r\n\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 8,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        className=\"login-form\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            wrapperCol={{\r\n                                offset: 8,\r\n                                span: 16,\r\n                            }}\r\n                        >\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </Card>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}