{"ast":null,"code":"\"use strict\";\n/**\n * PageBreaks\n */\n\nvar _classCallCheck = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar PageBreaks = /*#__PURE__*/function () {\n  function PageBreaks(node) {\n    _classCallCheck(this, PageBreaks);\n\n    this._node = node;\n  }\n  /**\n   * add page-breaks by row/column id\n   * @param {number} id - row/column id (rowNumber/colNumber)\n   * @return {PageBreaks} the page-breaks\n   */\n\n\n  _createClass(PageBreaks, [{\n    key: \"add\",\n    value: function add(id) {\n      this._node.children.push({\n        name: \"brk\",\n        children: [],\n        attributes: {\n          id: id,\n          max: 16383,\n          man: 1\n        }\n      });\n\n      this._node.attributes.count++;\n      this._node.attributes.manualBreakCount++;\n      return this;\n    }\n    /**\n     * remove page-breaks by index\n     * @param {number} index - index of list\n     * @return {PageBreaks} the page-breaks\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(index) {\n      var brk = this._node.children[index];\n\n      if (brk) {\n        this._node.children.splice(index, 1);\n\n        this._node.attributes.count--;\n\n        if (brk.man) {\n          this._node.attributes.manualBreakCount--;\n        }\n      }\n\n      return this;\n    }\n    /**\n     * get count of the page-breaks\n     * @return {number} the page-breaks' count\n     */\n\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._node.attributes.count;\n    }\n    /**\n     * get list of page-breaks\n     * @return {Array} list of the page-breaks\n     */\n\n  }, {\n    key: \"list\",\n    get: function get() {\n      return this._node.children.map(function (brk) {\n        return {\n          id: brk.id,\n          isManual: !!brk.man\n        };\n      });\n    }\n  }]);\n\n  return PageBreaks;\n}();\n\nmodule.exports = PageBreaks;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/xlsx-populate/lib/PageBreaks.js"],"names":["PageBreaks","node","_node","id","children","push","name","attributes","max","man","count","manualBreakCount","index","brk","splice","map","isManual","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;;;;;IACMA,U;AACF,sBAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKC,KAAL,GAAaD,IAAb;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,aAAIE,EAAJ,EAAQ;AACJ,WAAKD,KAAL,CAAWE,QAAX,CAAoBC,IAApB,CAAyB;AACrBC,QAAAA,IAAI,EAAE,KADe;AAErBF,QAAAA,QAAQ,EAAE,EAFW;AAGrBG,QAAAA,UAAU,EAAE;AACRJ,UAAAA,EAAE,EAAFA,EADQ;AAERK,UAAAA,GAAG,EAAE,KAFG;AAGRC,UAAAA,GAAG,EAAE;AAHG;AAHS,OAAzB;;AASA,WAAKP,KAAL,CAAWK,UAAX,CAAsBG,KAAtB;AACA,WAAKR,KAAL,CAAWK,UAAX,CAAsBI,gBAAtB;AAEA,aAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,gBAAOC,KAAP,EAAc;AACV,UAAMC,GAAG,GAAG,KAAKX,KAAL,CAAWE,QAAX,CAAoBQ,KAApB,CAAZ;;AACA,UAAIC,GAAJ,EAAS;AACL,aAAKX,KAAL,CAAWE,QAAX,CAAoBU,MAApB,CAA2BF,KAA3B,EAAkC,CAAlC;;AACA,aAAKV,KAAL,CAAWK,UAAX,CAAsBG,KAAtB;;AACA,YAAIG,GAAG,CAACJ,GAAR,EAAa;AACT,eAAKP,KAAL,CAAWK,UAAX,CAAsBI,gBAAtB;AACH;AACJ;;AAED,aAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;;;;SACI,eAAY;AACR,aAAO,KAAKT,KAAL,CAAWK,UAAX,CAAsBG,KAA7B;AACH;AAED;AACJ;AACA;AACA;;;;SACI,eAAW;AACP,aAAO,KAAKR,KAAL,CAAWE,QAAX,CAAoBW,GAApB,CAAwB,UAAAF,GAAG;AAAA,eAAK;AACnCV,UAAAA,EAAE,EAAEU,GAAG,CAACV,EAD2B;AAEnCa,UAAAA,QAAQ,EAAE,CAAC,CAACH,GAAG,CAACJ;AAFmB,SAAL;AAAA,OAA3B,CAAP;AAIH;;;;;;AAGLQ,MAAM,CAACC,OAAP,GAAiBlB,UAAjB","sourcesContent":["\"use strict\";\n\n/**\n * PageBreaks\n */\nclass PageBreaks {\n    constructor(node) {\n        this._node = node;\n    }\n\n    /**\n     * add page-breaks by row/column id\n     * @param {number} id - row/column id (rowNumber/colNumber)\n     * @return {PageBreaks} the page-breaks\n     */\n    add(id) {\n        this._node.children.push({\n            name: \"brk\",\n            children: [],\n            attributes: {\n                id,\n                max: 16383,\n                man: 1\n            }\n        });\n        this._node.attributes.count++;\n        this._node.attributes.manualBreakCount++;\n\n        return this;\n    }\n\n    /**\n     * remove page-breaks by index\n     * @param {number} index - index of list\n     * @return {PageBreaks} the page-breaks\n     */\n    remove(index) {\n        const brk = this._node.children[index];\n        if (brk) {\n            this._node.children.splice(index, 1);\n            this._node.attributes.count--;\n            if (brk.man) {\n                this._node.attributes.manualBreakCount--;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * get count of the page-breaks\n     * @return {number} the page-breaks' count\n     */\n    get count() {\n        return this._node.attributes.count;\n    }\n\n    /**\n     * get list of page-breaks\n     * @return {Array} list of the page-breaks\n     */\n    get list() {\n        return this._node.children.map(brk => ({\n            id: brk.id,\n            isManual: !!brk.man\n        }));\n    }\n}\n\nmodule.exports = PageBreaks;\n"]},"metadata":{},"sourceType":"script"}