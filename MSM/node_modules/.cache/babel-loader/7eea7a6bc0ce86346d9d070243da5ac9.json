{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReadJob, RealtimeData_Request } from '../../api';\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob, TableColumbJobHome, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\nimport moment from 'moment';\nimport { C3Model, G2Model, JobModel } from '../../DataRequest/DataModel';\nimport { Button, Col, Row, Table, Typography, Statistic, Card, Descriptions, PageHeader } from 'antd';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LogValue = {\n  \"LogC3\": [],\n  \"LogG2\": []\n};\nlet ReportList = {\n  \"C3ReportList\": [],\n  \"G2ReportList\": [],\n  'All': []\n};\nlet JobDetailRecord = {\n  datetimeStart: '',\n  datetimeEnd: '',\n  site: '',\n  line: '',\n  BufferName: ''\n};\nlet ReportInfoG2 = {};\nlet BlankPage = 1,\n    ClickTime;\nlet RealTimeValue = {\n  \"C3Table\": [],\n  \"G2Table\": [],\n  \"C3Graph\": [],\n  \"G2Graph\": []\n};\nconst data = [{\n  DateTime: '2022/5/20 00:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 00:00:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 00:00:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 00:00:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 00:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/20 01:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 01:00:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 01:00:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 01:00:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 01:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/20 01:30:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 01:50:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 01:10:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 01:20:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 01:40:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}];\n\nconst Home = () => {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [sortedInfo, setSortedInfo] = useState({});\n\n  const handleChange = (pagination, filters, sorter) => {\n    // var dateMomentObject = moment(\"23/03/2022\", \"DD/MM/YYYY\"); // 1st argument - string, 2nd argument - format\n    // var dateObject = dateMomentObject.toDate(); // convert moment.js object to Date object\n    // console.log(dateObject)\n    // console.log( new Date(moment(\"23/03/2022 00:00:00\", \"DD/MM/YYYY hh:mm:ss \").format(\"LLL\")))\n    console.log('Various parameters', pagination, filters, sorter); // setFilteredInfo(filters);\n\n    setSortedInfo(sorter);\n  };\n\n  const DataRequest = async (label, site, page, line, HMIName, TableName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[TableName] = DataSortRT(response);\n    RealTimeValue[HMIName] = RealTimeValue[TableName];\n  };\n\n  const RenderNewData = () => {\n    DataRequest([], 'Polymerlink', BlankPage, 'C3', 'C3HMI', \"C3Table\");\n    DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\");\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  useEffect(() => {\n    RenderNewData();\n    time(); // const interval = setInterval(() => {\n    //     RenderNewData()\n    // }, 3000)\n\n    return () => {\n      // clearInterval(interval)\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n\n  const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\n    const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line[0]);\n    filter(response, BufferName[0]);\n    const response2 = await ReadJob(info, datetimeStart, datetimeEnd, site, line[1]);\n    filter(response2, BufferName[1]);\n    console.log();\n    ReportList['All'] = [];\n    ReportList[BufferName[0]].forEach(element => {\n      ReportList['All'].push(element);\n    });\n    ReportList[BufferName[1]].forEach(element => {\n      ReportList['All'].push(element);\n    });\n    console.log(ReportList['All']);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const filter = (response, BufferName) => {\n    console.log(response);\n    let data = ReportSort(response);\n    console.log(data);\n    let OngoingJob = FilterOutEndedJob(data);\n    console.log(OngoingJob);\n    ReportList[BufferName] = OngoingJob;\n  };\n\n  const time = (line, BufferName) => {\n    const timetange = GetDateTime(2, 20);\n    RequestJob([], timetange[0], timetange[1], 'Polymerlink', ['G2', 'C3'], [\"G2ReportList\", \"C3ReportList\"]);\n  };\n\n  const ColumbJob = TableColumbJobHome(JobModel, 'G2', BlankPage, 'Log');\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 70,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '50 KG',\n    width: 70,\n    dataIndex: 'Line50',\n    key: 'Line50',\n    align: 'center',\n    sorter: (a, b) => a.Line50 - b.Line50,\n    sortOrder: sortedInfo.columnKey === 'Line50' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 70,\n    dataIndex: 'Line1',\n    key: 'Line1',\n    align: 'center',\n    sorter: (a, b) => a.Line1 - b.Line1,\n    sortOrder: sortedInfo.columnKey === 'Line1' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 70,\n    dataIndex: 'Line2',\n    key: 'Line2',\n    align: 'center',\n    sorter: (a, b) => a.Line2 - b.Line2,\n    sortOrder: sortedInfo.columnKey === 'Line2' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 70,\n    dataIndex: 'Line1T',\n    key: 'Line1T',\n    align: 'center',\n    sorter: (a, b) => a.Line1T - b.Line1T,\n    sortOrder: sortedInfo.columnKey === 'Line1T' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  const LogColumbPerTime = [{\n    title: 'DateTime',\n    width: 70,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Id Unit',\n    width: 70,\n    dataIndex: 'Id',\n    key: 'Id',\n    align: 'center',\n    sorter: (a, b) => a.Id - b.Id,\n    sortOrder: sortedInfo.columnKey === 'Id' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Weight',\n    width: 70,\n    dataIndex: 'Weight',\n    key: 'Weight',\n    align: 'center',\n    sorter: (a, b) => a.Weight - b.Weight,\n    sortOrder: sortedInfo.columnKey === 'Weight' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Location',\n    width: 70,\n    dataIndex: 'Location',\n    key: 'Location',\n    align: 'center',\n    sorter: (a, b) => a.Location - b.Location,\n    sortOrder: sortedInfo.columnKey === 'Location' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Label',\n    width: 70,\n    dataIndex: 'Label',\n    key: 'Label',\n    align: 'center',\n    sorter: (a, b) => a.Label - b.Label,\n    sortOrder: sortedInfo.columnKey === 'Label' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n\n  const comparedate = () => {\n    const ii = new Date();\n    const NowTime = moment(ii).format('DD-MM-yyyy HH:mm:ss');\n    let dat1 = '11-12-2021 01:00:00';\n    let dat2 = '01-12-2021 23:00:00';\n    var date1 = new Date(dat1);\n    var date2 = new Date(dat2);\n    console.log(NowTime);\n    date2 > date1 ? console.log('yes') : console.log('no');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Production Capacity Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: '3',\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 50 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 2 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 TON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              height: '540px',\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              children: [\" Total Capacity (\", DateDisplay(), \")  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"50 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"2 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Ton\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              height: '740px',\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              children: \" Couter Log  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: LogColumbPerTime,\n              dataSource: data,\n              bordered: true,\n              scroll: {\n                x: 1000,\n                y: 450\n              },\n              pagination: false,\n              size: \"small\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: LogColumb,\n        dataSource: data,\n        bordered: true,\n        scroll: {\n          x: 1000,\n          y: 500\n        },\n        pagination: false,\n        size: \"small\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"z05QRx00DfD+9D+XdMF9jJb/bKE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/Home/Home.jsx"],"names":["React","useEffect","useState","ReadJob","RealtimeData_Request","FilterOutEndedJob","GetDateTime","ReportSort","TableColumbJob","TableColumbJobHome","DateDisplay","moment","C3Model","G2Model","JobModel","Button","Col","Row","Table","Typography","Statistic","Card","Descriptions","PageHeader","RealTimeTableWrapper","DataSortRT","ArrowUpOutlined","ArrowDownOutlined","DashboardOutlined","LogValue","ReportList","JobDetailRecord","datetimeStart","datetimeEnd","site","line","BufferName","ReportInfoG2","BlankPage","ClickTime","RealTimeValue","data","DateTime","Line50","Line1","Line2","Line1T","Home","Title","state","setState","count","sortedInfo","setSortedInfo","handleChange","pagination","filters","sorter","console","log","DataRequest","label","page","HMIName","TableName","response","RenderNewData","time","RequestJob","info","filter","response2","forEach","element","push","OngoingJob","timetange","ColumbJob","LogColumb","title","width","dataIndex","key","align","a","b","Date","format","sortOrder","columnKey","order","ellipsis","LogColumbPerTime","Id","Weight","Location","Label","comparedate","ii","NowTime","dat1","dat2","date1","date2","marginTop","backgroundColor","border","color","fontSize","fontWeight","height","fontFamily","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ReadJob, RealtimeData_Request } from '../../api'\r\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob, TableColumbJobHome, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\r\nimport moment from 'moment';\r\nimport { C3Model, G2Model, JobModel } from '../../DataRequest/DataModel';\r\nimport { Button, Col, Row, Table, Typography, Statistic, Card, Descriptions, PageHeader } from 'antd';\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\r\nimport './home.css'\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nlet ReportList = {\r\n    \"C3ReportList\": [],\r\n    \"G2ReportList\": [],\r\n    'All': []\r\n}\r\n\r\nlet JobDetailRecord = {\r\n    datetimeStart: '',\r\n    datetimeEnd: '',\r\n    site: '',\r\n    line: '',\r\n    BufferName: ''\r\n}\r\n\r\nlet ReportInfoG2 = {}\r\n\r\nlet BlankPage = 1, ClickTime\r\n\r\nlet RealTimeValue = {\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n}\r\n\r\nconst data = [\r\n    {\r\n        DateTime: '2022/5/20 00:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 00:00:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 00:00:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 00:00:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 00:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:00:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:00:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:00:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:30:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:50:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:10:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:20:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:40:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n];\r\n\r\nconst Home = () => {\r\n\r\n    const { Title } = Typography\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n\r\n        // var dateMomentObject = moment(\"23/03/2022\", \"DD/MM/YYYY\"); // 1st argument - string, 2nd argument - format\r\n        // var dateObject = dateMomentObject.toDate(); // convert moment.js object to Date object\r\n\r\n        // console.log(dateObject)\r\n\r\n\r\n        // console.log( new Date(moment(\"23/03/2022 00:00:00\", \"DD/MM/YYYY hh:mm:ss \").format(\"LLL\")))\r\n\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        // setFilteredInfo(filters);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const DataRequest = async (label, site, page, line, HMIName, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[TableName] = DataSortRT(response)\r\n        RealTimeValue[HMIName] = RealTimeValue[TableName]\r\n    }\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest([], 'Polymerlink', BlankPage, 'C3', 'C3HMI', \"C3Table\")\r\n        DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\")\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        RenderNewData()\r\n        time()\r\n\r\n        // const interval = setInterval(() => {\r\n        //     RenderNewData()\r\n        // }, 3000)\r\n\r\n        return () => {\r\n            // clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\r\n        const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line[0])\r\n        filter(response, BufferName[0])\r\n        const response2 = await ReadJob(info, datetimeStart, datetimeEnd, site, line[1])\r\n        filter(response2, BufferName[1])\r\n\r\n        console.log();\r\n\r\n        ReportList['All'] = []\r\n\r\n        ReportList[BufferName[0]].forEach(element => {\r\n            ReportList['All'].push(element)\r\n        });\r\n\r\n        ReportList[BufferName[1]].forEach(element => {\r\n            ReportList['All'].push(element)\r\n        });\r\n\r\n        console.log(ReportList['All']);\r\n\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const filter = (response, BufferName) => {\r\n        console.log(response)\r\n        let data = ReportSort(response)\r\n        console.log(data)\r\n        let OngoingJob = FilterOutEndedJob(data)\r\n        console.log(OngoingJob)\r\n        ReportList[BufferName] = OngoingJob\r\n    }\r\n\r\n\r\n\r\n    const time = (line, BufferName) => {\r\n        const timetange = GetDateTime(2, 20)\r\n        RequestJob([], timetange[0], timetange[1], 'Polymerlink', ['G2', 'C3'], [\"G2ReportList\", \"C3ReportList\"])\r\n    }\r\n\r\n\r\n    const ColumbJob = TableColumbJobHome(JobModel, 'G2', BlankPage, 'Log')\r\n\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 70,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '50 KG',\r\n            width: 70,\r\n            dataIndex: 'Line50',\r\n            key: 'Line50',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50 - b.Line50,\r\n            sortOrder: sortedInfo.columnKey === 'Line50' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 70,\r\n            dataIndex: 'Line1',\r\n            key: 'Line1',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1 - b.Line1,\r\n            sortOrder: sortedInfo.columnKey === 'Line1' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 70,\r\n            dataIndex: 'Line2',\r\n            key: 'Line2',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2 - b.Line2,\r\n            sortOrder: sortedInfo.columnKey === 'Line2' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 70,\r\n            dataIndex: 'Line1T',\r\n            key: 'Line1T',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1T - b.Line1T,\r\n            sortOrder: sortedInfo.columnKey === 'Line1T' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const LogColumbPerTime = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 70,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Id Unit',\r\n            width: 70,\r\n            dataIndex: 'Id',\r\n            key: 'Id',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Id - b.Id,\r\n            sortOrder: sortedInfo.columnKey === 'Id' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Weight',\r\n            width: 70,\r\n            dataIndex: 'Weight',\r\n            key: 'Weight',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Weight - b.Weight,\r\n            sortOrder: sortedInfo.columnKey === 'Weight' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Location',\r\n            width: 70,\r\n            dataIndex: 'Location',\r\n            key: 'Location',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Location - b.Location,\r\n            sortOrder: sortedInfo.columnKey === 'Location' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Label',\r\n            width: 70,\r\n            dataIndex: 'Label',\r\n            key: 'Label',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Label - b.Label,\r\n            sortOrder: sortedInfo.columnKey === 'Label' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n\r\n    const comparedate = () => {\r\n        const ii = new Date()\r\n        const NowTime = moment(ii).format('DD-MM-yyyy HH:mm:ss');\r\n\r\n        let dat1 = '11-12-2021 01:00:00'\r\n        let dat2 = '01-12-2021 23:00:00'\r\n\r\n        var date1 = new Date(dat1);\r\n        var date2 = new Date(dat2);\r\n\r\n        console.log(NowTime);\r\n\r\n        date2 > date1 ? console.log('yes') : console.log('no');\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* <div className=\"site-page-header-ghost-wrapper\" style={{ borderRadius: '15px' }}>\r\n                <PageHeader\r\n                    className=\"site-page-header-responsive\"\r\n                    title=\"PLM\"\r\n                    subTitle={window.location.pathname}\r\n                    ghost={true}\r\n                >\r\n                    <Row gutter={[16, 16]}>\r\n                        <Statistic\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                            title=\"Name\" value={'Tan'} />\r\n                        <Statistic\r\n                            title=\"Role\"\r\n                            value={'User'}\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                        />\r\n                        <Statistic\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                            title=\"Production Line\" value={'MSM'} />\r\n                    </Row>\r\n\r\n                </PageHeader>\r\n            </div> */}\r\n\r\n\r\n\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Card title={<h2>Total Production Capacity Counter</h2>}>\r\n                    <Row gutter={'3'} >\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 50 KG</h2>\r\n\r\n                                {/* <Title level={3}>Packaging Line 50 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 2 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 2 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 TON</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 TON</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* <div style={{ marginTop: '16px' }}>\r\n                <Card bordered={true}>\r\n                    <Descriptions column={4} title=\"Total Unit\" bordered layout='vertical'>\r\n                        <Descriptions.Item label=\"50 KG\">1234</Descriptions.Item>\r\n                        <Descriptions.Item label=\"1 KG\">4535</Descriptions.Item>\r\n                        <Descriptions.Item label=\"2 KG\">32456</Descriptions.Item>\r\n                        <Descriptions.Item label=\"1 TON\">23423</Descriptions.Item>\r\n                    </Descriptions>\r\n                </Card >\r\n            </div> */}\r\n\r\n\r\n\r\n            {/* \r\n\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 50 KG\">\r\n\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 1 KG\">\r\n\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 2 KG\">\r\n\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 1 TON\">\r\n\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>  */}\r\n\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n                            <Title level={1}> Total Capacity ({DateDisplay()})  </Title>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>50 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>2 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Ton</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n\r\n                        <Card style={{ height: '740px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                        <Title level={1}> Couter Log  </Title>\r\n\r\n                            <Table  columns={LogColumbPerTime} dataSource={data} bordered scroll={{ x: 1000, y: 450 }} pagination={false} size=\"small\" onChange={handleChange} />\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Table columns={LogColumb} dataSource={data} bordered scroll={{ x: 1000, y: 500 }} pagination={false} size=\"small\" onChange={handleChange} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n             */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}