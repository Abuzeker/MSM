{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReadJob, MSM_RealTime_request, MSM_logdata_request, MSM_EventLog_request } from '../../api';\nimport { DataSortTimeMSM, GetDateTime, LogDataMappingNameMSM, MSM_Realtime_GetDateTime, DateDisplay, EventSortTimeMSM, Find_initial_Time } from '../../DataRequest/LogDataRequestWrap';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport moment from 'moment';\nimport { MSMTable, MSMDailyTable, MSMShiftTable } from '../../DataRequest/DataModel';\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\nimport { DashboardOutlined } from '@ant-design/icons';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DTinitial = GetDateTime(0, 1); // get from yesterday 00:00 to today 00:00\n\nlet DTinitial2 = GetDateTime(7, 2);\nlet ContingRange = MSM_Realtime_GetDateTime(1, 0);\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton'];\nlet RequestDataOption_Daily = ['Line50kg_Daily', 'Line1kg_Daily', 'Line2kg_Daily', 'Line1Ton_Daily'];\nlet RequestDataOption_shift = ['Line50kg_Morning', 'Line1kg_Morning', 'Line2kg_Morning', 'Line1Ton_Morning', 'Line50kg_Night', 'Line1kg_Night', 'Line2kg_Night', 'Line1Ton_Night'];\nlet RequestDateRange = [DTinitial[0], DTinitial[1]];\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1], DTinitial2[2], DTinitial2[3]];\nlet DailyLogSorted = [];\nlet ShiftLogSorted = [];\nlet EventLogSorted = [];\nlet EventLogSortedMorning = [];\nlet EventLogSortedNight = [];\nlet TotalCountProduct = [];\nlet DailyRealTime = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\nlet DailyMorningRealTime = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\nlet DailyNightRealTime = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\nlet TotalCount = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [sortedInfo2, setSortedInfo2] = useState({});\n  useEffect(() => {\n    const interval = setInterval(() => {\n      RenderNewData();\n    }, 1000);\n\n    try {\n      DailyLogRequest('shift', MSMShiftTable);\n      DailyLogRequest('daily', MSMDailyTable);\n    } catch (error) {\n      console.log('server error');\n    } //EvenLogRequest()\n\n\n    return () => {\n      clearInterval(interval);\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n\n  const RenderNewData = () => {\n    RealTimeRequest();\n  };\n\n  const DailyLogRequest = async (type, Model) => {\n    //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n    console.log(DailyLogRequestRange);\n    let response = [];\n\n    switch (type) {\n      case 'shift':\n        response = await MSM_logdata_request(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1]);\n        ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type);\n        break;\n\n      case 'daily':\n        response = await MSM_logdata_request(RequestDataOption_Daily, DailyLogRequestRange[0], DailyLogRequestRange[1]);\n        DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type);\n        break;\n\n      default:\n        break;\n    }\n\n    console.log(DailyLogSorted);\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const EvenLogRequest = async () => {\n    let response = await MSM_EventLog_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1]); //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n\n    EventLogSorted = EventSortTimeMSM(response); // console.log(DailyLogRequestRange);\n    // console.log(EventLogSorted);\n\n    setState(_ref2 => {\n      let {\n        count\n      } = _ref2;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const RealTimeRequest = async () => {\n    let field_name = Object.keys(DailyRealTime);\n    let realtime = await MSM_RealTime_request(RequestDataOption); //console.log(realtime);\n\n    TotalCountProduct = DataSortRT(realtime); //console.log(TotalCountProduct);\n\n    ContingRange = MSM_Realtime_GetDateTime(0, 1);\n    Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0);\n    console.log(ContingRange);\n    let responseDaily = await MSM_EventLog_request(RequestDataOption, ContingRange[0], ContingRange[3]);\n    EventLogSorted = EventSortTimeMSM(responseDaily);\n    console.log(EventLogSorted);\n    field_name.forEach(element => {\n      DailyRealTime[`${element}`] = 0;\n      DailyMorningRealTime[`${element}`] = 0;\n      DailyNightRealTime[`${element}`] = 0;\n      EventLogSorted.forEach(element2 => {\n        if (element === element2['Label']) {\n          DailyRealTime[`${element}`]++;\n\n          if (element2['Shift'] === 'Morning') {\n            DailyMorningRealTime[`${element}`]++;\n          } else {\n            DailyNightRealTime[`${element}`]++;\n          }\n        }\n      });\n      TotalCountProduct.forEach(element3 => {\n        if (element === element3['Label']) {\n          TotalCount[`${element}`] = element3.value;\n        }\n      });\n    }); // Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0)\n\n    console.log(ContingRange);\n    setState(_ref3 => {\n      let {\n        count\n      } = _ref3;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const handleChangeOverall = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo(sorter);\n  };\n\n  const handleChangePertime = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo2(sorter);\n  }; // const ChangeDateRange = (value) => {\n  //     // console.log(RequestDateRange);\n  //     RequestDateRange = []\n  //     RequestDateRange = ConvertMonentToDateTime(value)\n  //     // console.log(RequestDateRange);\n  // }\n  // const ChangeOption = (value) => {\n  //     console.log(`selected ${value}`);\n  //     RequestDataOption = []\n  //     RequestDataOption.push(value)\n  //     // console.log(RequestDataOption);\n  // }\n\n\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '50 KG',\n    width: 35,\n    dataIndex: 'Line50kg',\n    key: 'Line50kg',\n    align: 'center',\n    sorter: (a, b) => a.Line50kg - b.Line50kg,\n    sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 35,\n    dataIndex: 'Line1kg',\n    key: 'Line1kg',\n    align: 'center',\n    sorter: (a, b) => a.Line1kg - b.Line1kg,\n    sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 35,\n    dataIndex: 'Line2kg',\n    key: 'Line2kg',\n    align: 'center',\n    sorter: (a, b) => a.Line2kg - b.Line2kg,\n    sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 35,\n    dataIndex: 'Line1Ton',\n    key: 'Line1Ton',\n    align: 'center',\n    sorter: (a, b) => a.Line1Ton - b.Line1Ton,\n    sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  const LogColumbPerTime = [{\n    title: 'DateTime',\n    width: 40,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Shift',\n    width: 20,\n    dataIndex: 'Shift',\n    key: 'Shift',\n    align: 'center',\n    filters: [{\n      text: 'Morning',\n      value: 'Morning'\n    }, {\n      text: 'Night',\n      value: 'Night'\n    }],\n    onFilter: (value, record) => record.Shift.indexOf(value) === 0\n  }, {\n    title: 'Tag',\n    width: 60,\n    dataIndex: 'Tag',\n    key: 'Tag',\n    align: 'center'\n  }, {\n    title: 'Id Unit',\n    width: 20,\n    dataIndex: 'IdUnit',\n    key: 'IdUnit',\n    align: 'center',\n    sorter: (a, b) => a.IdUnit - b.IdUnit,\n    sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Label',\n    width: 20,\n    dataIndex: 'Label',\n    key: 'Label',\n    align: 'center',\n    filters: [{\n      text: 'Line50kg',\n      value: 'Line50kg'\n    }, {\n      text: 'Line1kg',\n      value: 'Line1kg'\n    }, {\n      text: 'Line2kg',\n      value: 'Line2kg'\n    }, {\n      text: 'Line1Ton',\n      value: 'Line1Ton'\n    }],\n    onFilter: (value, record) => record.Label.indexOf(value) === 0\n  }, {\n    title: 'Weight',\n    width: 20,\n    dataIndex: 'Weight',\n    key: 'Weight',\n    align: 'center'\n  }, {\n    title: 'Location',\n    width: 20,\n    dataIndex: 'Location',\n    key: 'Location',\n    align: 'center'\n  }];\n  const LogColumbShift = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Shift',\n    width: 20,\n    dataIndex: 'Shift',\n    key: 'Shift',\n    align: 'center',\n    filters: [{\n      text: 'Morning',\n      value: 'Morning'\n    }, {\n      text: 'Night',\n      value: 'Night'\n    }],\n    onFilter: (value, record) => record.Shift.indexOf(value) === 0\n  }, {\n    title: '50 KG',\n    width: 35,\n    dataIndex: 'Line50kg',\n    key: 'Line50kg',\n    align: 'center',\n    sorter: (a, b) => a.Line50kg - b.Line50kg,\n    sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 35,\n    dataIndex: 'Line1kg',\n    key: 'Line1kg',\n    align: 'center',\n    sorter: (a, b) => a.Line1kg - b.Line1kg,\n    sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 35,\n    dataIndex: 'Line2kg',\n    key: 'Line2kg',\n    align: 'center',\n    sorter: (a, b) => a.Line2kg - b.Line2kg,\n    sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 35,\n    dataIndex: 'Line1Ton',\n    key: 'Line1Ton',\n    align: 'center',\n    sorter: (a, b) => a.Line1Ton - b.Line1Ton,\n    sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Daily Production Capacity Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `( ${moment(ContingRange[0]).utc(true).format('DD/MM/YYYY HH:mm:ss')} - ${moment(ContingRange[3]).utc(true).format('DD/MM/YYYY HH:mm:ss')} )`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: '3',\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 50 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: '1',\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Statistic, {\n                        title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"Morning:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 60\n                        }, this),\n                        value: DailyMorningRealTime['Line50kg'],\n                        precision: 0,\n                        valueStyle: {\n                          color: '#3f8600',\n                          fontSize: '30px',\n                          color: '#131212',\n                          fontWeight: 'bold'\n                        },\n                        suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px'\n                          },\n                          children: \"Unit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        span: 8,\n                        xs: 24,\n                        xl: 24,\n                        children: /*#__PURE__*/_jsxDEV(Statistic, {\n                          title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            children: \"Night:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 496,\n                            columnNumber: 64\n                          }, this),\n                          value: DailyNightRealTime['Line50kg'],\n                          precision: 0,\n                          valueStyle: {\n                            color: '#3f8600',\n                            fontSize: '30px',\n                            color: '#131212',\n                            fontWeight: 'bold'\n                          },\n                          suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            style: {\n                              fontSize: '15px'\n                            },\n                            children: \"Unit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 500,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 495,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 52\n                    }, this),\n                    value: DailyRealTime['Line50kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#3f8600',\n                      fontSize: '50px',\n                      color: '#131212',\n                      fontWeight: 'bold'\n                    },\n                    suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      style: {\n                        fontSize: '25px'\n                      },\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: '1',\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Statistic, {\n                        title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"Morning:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 532,\n                          columnNumber: 60\n                        }, this),\n                        value: DailyMorningRealTime['Line1kg'],\n                        precision: 0,\n                        valueStyle: {\n                          color: '#3f8600',\n                          fontSize: '30px',\n                          color: '#131212',\n                          fontWeight: 'bold'\n                        },\n                        suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px'\n                          },\n                          children: \"Unit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        span: 8,\n                        xs: 24,\n                        xl: 24,\n                        children: /*#__PURE__*/_jsxDEV(Statistic, {\n                          title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            children: \"Night:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 548,\n                            columnNumber: 64\n                          }, this),\n                          value: DailyNightRealTime['Line1kg'],\n                          precision: 0,\n                          valueStyle: {\n                            color: '#3f8600',\n                            fontSize: '30px',\n                            color: '#131212',\n                            fontWeight: 'bold'\n                          },\n                          suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            style: {\n                              fontSize: '15px'\n                            },\n                            children: \"Unit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 552,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 547,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 52\n                    }, this),\n                    value: DailyRealTime['Line1kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#3f8600',\n                      fontSize: '50px',\n                      color: '#131212',\n                      fontWeight: 'bold'\n                    },\n                    suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      style: {\n                        fontSize: '25px'\n                      },\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 2 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: '1',\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Statistic, {\n                        title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"Morning:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 585,\n                          columnNumber: 60\n                        }, this),\n                        value: DailyMorningRealTime['Line2kg'],\n                        precision: 0,\n                        valueStyle: {\n                          color: '#3f8600',\n                          fontSize: '30px',\n                          color: '#131212',\n                          fontWeight: 'bold'\n                        },\n                        suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px'\n                          },\n                          children: \"Unit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 589,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        span: 8,\n                        xs: 24,\n                        xl: 24,\n                        children: /*#__PURE__*/_jsxDEV(Statistic, {\n                          title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            children: \"Night:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 601,\n                            columnNumber: 64\n                          }, this),\n                          value: DailyNightRealTime['Line2kg'],\n                          precision: 0,\n                          valueStyle: {\n                            color: '#3f8600',\n                            fontSize: '30px',\n                            color: '#131212',\n                            fontWeight: 'bold'\n                          },\n                          suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            style: {\n                              fontSize: '15px'\n                            },\n                            children: \"Unit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 605,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 600,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 52\n                    }, this),\n                    value: DailyRealTime['Line2kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#3f8600',\n                      fontSize: '50px',\n                      color: '#131212',\n                      fontWeight: 'bold'\n                    },\n                    suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      style: {\n                        fontSize: '25px'\n                      },\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 TON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: '1',\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Statistic, {\n                        title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"Morning:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 636,\n                          columnNumber: 60\n                        }, this),\n                        value: DailyMorningRealTime['Line1Ton'],\n                        precision: 0,\n                        valueStyle: {\n                          color: '#3f8600',\n                          fontSize: '30px',\n                          color: '#131212',\n                          fontWeight: 'bold'\n                        },\n                        suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px'\n                          },\n                          children: \"Unit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 640,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 635,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    gutter: '1',\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      span: 8,\n                      xs: 24,\n                      xl: 24,\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        span: 8,\n                        xs: 24,\n                        xl: 24,\n                        children: /*#__PURE__*/_jsxDEV(Statistic, {\n                          title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            children: \"Night:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 652,\n                            columnNumber: 64\n                          }, this),\n                          value: DailyNightRealTime['Line1Ton'],\n                          precision: 0,\n                          valueStyle: {\n                            color: '#3f8600',\n                            fontSize: '30px',\n                            color: '#131212',\n                            fontWeight: 'bold'\n                          },\n                          suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                            style: {\n                              fontSize: '15px'\n                            },\n                            children: \"Unit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 656,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 651,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  xs: 12,\n                  xl: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 667,\n                      columnNumber: 52\n                    }, this),\n                    value: DailyRealTime['Line1Ton'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#3f8600',\n                      fontSize: '50px',\n                      color: '#131212',\n                      fontWeight: 'bold'\n                    },\n                    suffix: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      style: {\n                        fontSize: '25px'\n                      },\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '540px',\n          backgroundColor: 'AppWorkspace',\n          border: '3px outset'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 1,\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \" Shift Log  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: LogColumbShift,\n          dataSource: ShiftLogSorted,\n          bordered: true,\n          scroll: {\n            x: 500,\n            y: 385\n          },\n          pagination: false,\n          size: \"small\",\n          onChange: handleChangeOverall\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              height: '540px',\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset',\n              overflowY: 'scroll'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \" Total Capacity \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                xs: 24,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"50 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line50kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                xs: 24,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line1kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                xs: 24,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"2 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line2kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                xs: 24,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Ton\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line1Ton'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset',\n              minHeight: '540px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \" Daily Log  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: LogColumb,\n              dataSource: DailyLogSorted,\n              bordered: true,\n              scroll: {\n                x: 500,\n                y: 385\n              },\n              pagination: false,\n              size: \"small\",\n              onChange: handleChangeOverall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '540px',\n          backgroundColor: 'AppWorkspace',\n          border: '3px outset'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 1,\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \" Event Log  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          columns: LogColumbPerTime,\n          dataSource: EventLogSorted,\n          scroll: {\n            x: 600,\n            y: 350\n          },\n          pagination: false,\n          size: \"small\",\n          onChange: handleChangePertime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"p3yqr+unGhiTCWtf2vvByEhTh3Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/Home/Home.jsx"],"names":["React","useEffect","useState","ReadJob","MSM_RealTime_request","MSM_logdata_request","MSM_EventLog_request","DataSortTimeMSM","GetDateTime","LogDataMappingNameMSM","MSM_Realtime_GetDateTime","DateDisplay","EventSortTimeMSM","Find_initial_Time","DataSortRT","moment","MSMTable","MSMDailyTable","MSMShiftTable","Button","Col","Row","Table","Typography","Statistic","Card","DatePicker","Select","DashboardOutlined","DTinitial","DTinitial2","ContingRange","RequestDataOption","RequestDataOption_Daily","RequestDataOption_shift","RequestDateRange","DailyLogRequestRange","DailyLogSorted","ShiftLogSorted","EventLogSorted","EventLogSortedMorning","EventLogSortedNight","TotalCountProduct","DailyRealTime","DailyMorningRealTime","DailyNightRealTime","TotalCount","Home","Title","state","setState","count","sortedInfo","setSortedInfo","sortedInfo2","setSortedInfo2","interval","setInterval","RenderNewData","DailyLogRequest","error","console","log","clearInterval","RealTimeRequest","type","Model","response","EvenLogRequest","field_name","Object","keys","realtime","responseDaily","forEach","element","element2","element3","value","handleChangeOverall","pagination","filters","sorter","handleChangePertime","LogColumb","title","width","dataIndex","key","align","a","b","Date","DateTime","format","sortOrder","columnKey","order","ellipsis","Line50kg","Line1kg","Line2kg","Line1Ton","LogColumbPerTime","text","onFilter","record","Shift","indexOf","IdUnit","Label","LogColumbShift","marginTop","utc","backgroundColor","border","color","fontSize","fontWeight","height","x","y","overflowY","fontFamily","minHeight"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ReadJob, MSM_RealTime_request, MSM_logdata_request, MSM_EventLog_request } from '../../api'\r\nimport {\r\n    DataSortTimeMSM, GetDateTime,\r\n    LogDataMappingNameMSM, MSM_Realtime_GetDateTime, DateDisplay,\r\n    EventSortTimeMSM, Find_initial_Time\r\n} from '../../DataRequest/LogDataRequestWrap';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport moment from 'moment';\r\nimport { MSMTable, MSMDailyTable, MSMShiftTable } from '../../DataRequest/DataModel';\r\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\r\nimport { DashboardOutlined } from '@ant-design/icons';\r\nimport './home.css'\r\n\r\n\r\nlet DTinitial = GetDateTime(0, 1)  // get from yesterday 00:00 to today 00:00\r\nlet DTinitial2 = GetDateTime(7, 2)\r\nlet ContingRange = MSM_Realtime_GetDateTime(1, 0)\r\n\r\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton']\r\n\r\nlet RequestDataOption_Daily = ['Line50kg_Daily', 'Line1kg_Daily', 'Line2kg_Daily', 'Line1Ton_Daily']\r\n\r\nlet RequestDataOption_shift = [\r\n    'Line50kg_Morning', 'Line1kg_Morning', 'Line2kg_Morning', 'Line1Ton_Morning',\r\n    'Line50kg_Night', 'Line1kg_Night', 'Line2kg_Night', 'Line1Ton_Night']\r\n\r\nlet RequestDateRange = [DTinitial[0], DTinitial[1]]\r\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1], DTinitial2[2], DTinitial2[3]]\r\nlet DailyLogSorted = []\r\nlet ShiftLogSorted = []\r\nlet EventLogSorted = []\r\nlet EventLogSortedMorning = []\r\nlet EventLogSortedNight = []\r\nlet TotalCountProduct = []\r\n\r\nlet DailyRealTime = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nlet DailyMorningRealTime = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nlet DailyNightRealTime = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nlet TotalCount = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    const { Title } = Typography\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n    const [sortedInfo2, setSortedInfo2] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const interval = setInterval(() => {\r\n            RenderNewData()\r\n        }, 1000)\r\n\r\n        try {\r\n\r\n            DailyLogRequest('shift', MSMShiftTable)\r\n            DailyLogRequest('daily', MSMDailyTable)\r\n            \r\n        } catch (error) {\r\n            console.log('server error');\r\n        }\r\n\r\n\r\n\r\n        //EvenLogRequest()\r\n\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n    const RenderNewData = () => {\r\n        RealTimeRequest()\r\n    }\r\n\r\n    const DailyLogRequest = async (type, Model) => {\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        console.log(DailyLogRequestRange);\r\n        let response = []\r\n\r\n        switch (type) {\r\n            case 'shift':\r\n                response = await MSM_logdata_request(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n                ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                break;\r\n\r\n            case 'daily':\r\n                response = await MSM_logdata_request(RequestDataOption_Daily, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n                DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        console.log(DailyLogSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const EvenLogRequest = async () => {\r\n        let response = await MSM_EventLog_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        EventLogSorted = EventSortTimeMSM(response)\r\n        // console.log(DailyLogRequestRange);\r\n        // console.log(EventLogSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const RealTimeRequest = async () => {\r\n\r\n        let field_name = Object.keys(DailyRealTime)\r\n\r\n        let realtime = await MSM_RealTime_request(RequestDataOption)\r\n        //console.log(realtime);\r\n        TotalCountProduct = DataSortRT(realtime)\r\n\r\n        //console.log(TotalCountProduct);\r\n\r\n        ContingRange = MSM_Realtime_GetDateTime(0, 1)\r\n\r\n        Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0)\r\n\r\n        console.log(ContingRange);\r\n\r\n        let responseDaily = await MSM_EventLog_request(RequestDataOption, ContingRange[0], ContingRange[3])\r\n        EventLogSorted = EventSortTimeMSM(responseDaily)\r\n\r\n        console.log(EventLogSorted);\r\n\r\n\r\n        field_name.forEach(element => {\r\n            DailyRealTime[`${element}`] = 0\r\n            DailyMorningRealTime[`${element}`] = 0\r\n            DailyNightRealTime[`${element}`] = 0\r\n\r\n            EventLogSorted.forEach(element2 => {\r\n\r\n                if (element === element2['Label']) {\r\n                    DailyRealTime[`${element}`]++\r\n\r\n                    if (element2['Shift'] === 'Morning') {\r\n                        DailyMorningRealTime[`${element}`]++\r\n                    }\r\n\r\n                    else {\r\n                        DailyNightRealTime[`${element}`]++\r\n                    }\r\n                }\r\n            });\r\n\r\n            TotalCountProduct.forEach(element3 => {\r\n                if (element === element3['Label']) {\r\n                    TotalCount[`${element}`] = element3.value\r\n                }\r\n            });\r\n        });\r\n\r\n        // Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0)\r\n\r\n        console.log(ContingRange);\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const handleChangeOverall = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const handleChangePertime = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo2(sorter);\r\n    };\r\n\r\n    // const ChangeDateRange = (value) => {\r\n    //     // console.log(RequestDateRange);\r\n    //     RequestDateRange = []\r\n    //     RequestDateRange = ConvertMonentToDateTime(value)\r\n    //     // console.log(RequestDateRange);\r\n    // }\r\n\r\n    // const ChangeOption = (value) => {\r\n    //     console.log(`selected ${value}`);\r\n    //     RequestDataOption = []\r\n    //     RequestDataOption.push(value)\r\n    //     // console.log(RequestDataOption);\r\n    // }\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '50 KG',\r\n            width: 35,\r\n            dataIndex: 'Line50kg',\r\n            key: 'Line50kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50kg - b.Line50kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 35,\r\n            dataIndex: 'Line1kg',\r\n            key: 'Line1kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1kg - b.Line1kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 35,\r\n            dataIndex: 'Line2kg',\r\n            key: 'Line2kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2kg - b.Line2kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 35,\r\n            dataIndex: 'Line1Ton',\r\n            key: 'Line1Ton',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1Ton - b.Line1Ton,\r\n            sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const LogColumbPerTime = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 40,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n        {\r\n            title: 'Shift',\r\n            width: 20,\r\n            dataIndex: 'Shift',\r\n            key: 'Shift',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Morning',\r\n                    value: 'Morning',\r\n                },\r\n                {\r\n                    text: 'Night',\r\n                    value: 'Night',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Shift.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: 'Tag',\r\n            width: 60,\r\n            dataIndex: 'Tag',\r\n            key: 'Tag',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Id Unit',\r\n            width: 20,\r\n            dataIndex: 'IdUnit',\r\n            key: 'IdUnit',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.IdUnit - b.IdUnit,\r\n            sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Label',\r\n            width: 20,\r\n            dataIndex: 'Label',\r\n            key: 'Label',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Line50kg',\r\n                    value: 'Line50kg',\r\n                },\r\n                {\r\n                    text: 'Line1kg',\r\n                    value: 'Line1kg',\r\n                },\r\n                {\r\n                    text: 'Line2kg',\r\n                    value: 'Line2kg',\r\n                },\r\n                {\r\n                    text: 'Line1Ton',\r\n                    value: 'Line1Ton',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Label.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: 'Weight',\r\n            width: 20,\r\n            dataIndex: 'Weight',\r\n            key: 'Weight',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Location',\r\n            width: 20,\r\n            dataIndex: 'Location',\r\n            key: 'Location',\r\n            align: 'center',\r\n        },\r\n    ]\r\n\r\n    const LogColumbShift = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n        {\r\n            title: 'Shift',\r\n            width: 20,\r\n            dataIndex: 'Shift',\r\n            key: 'Shift',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Morning',\r\n                    value: 'Morning',\r\n                },\r\n                {\r\n                    text: 'Night',\r\n                    value: 'Night',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Shift.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: '50 KG',\r\n            width: 35,\r\n            dataIndex: 'Line50kg',\r\n            key: 'Line50kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50kg - b.Line50kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 35,\r\n            dataIndex: 'Line1kg',\r\n            key: 'Line1kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1kg - b.Line1kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 35,\r\n            dataIndex: 'Line2kg',\r\n            key: 'Line2kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2kg - b.Line2kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 35,\r\n            dataIndex: 'Line1Ton',\r\n            key: 'Line1Ton',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1Ton - b.Line1Ton,\r\n            sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Card >\r\n                    <h2>Daily Production Capacity Counter</h2>\r\n                    <h3>{`( ${moment(ContingRange[0]).utc(true).format('DD/MM/YYYY HH:mm:ss')} - ${moment(ContingRange[3]).utc(true).format('DD/MM/YYYY HH:mm:ss')} )`}</h3>\r\n\r\n                    <Row gutter={'3'} >\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 50 KG</h2>\r\n\r\n                                <Row gutter={'1'} >\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Row gutter={'1'} >\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Statistic\r\n                                                    title={<h1>Morning:</h1>}\r\n                                                    value={DailyMorningRealTime['Line50kg']}\r\n                                                    precision={0}\r\n                                                    valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                    suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row gutter={'1'} >\r\n\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Col span={8} xs={24} xl={24}>\r\n\r\n                                                    <Statistic\r\n                                                        title={<h1>Night:</h1>}\r\n                                                        value={DailyNightRealTime['Line50kg']}\r\n                                                        precision={0}\r\n                                                        valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                        suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Statistic\r\n                                            title={<h1>Total:</h1>}\r\n                                            value={DailyRealTime['Line50kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#3f8600', fontSize: '50px', color: '#131212', fontWeight: 'bold' }}\r\n                                            suffix={<h1 style={{ fontSize: '25px' }}>Unit</h1>}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 KG</h2>\r\n\r\n                                <Row gutter={'1'} >\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Row gutter={'1'} >\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Statistic\r\n                                                    title={<h1>Morning:</h1>}\r\n                                                    value={DailyMorningRealTime['Line1kg']}\r\n                                                    precision={0}\r\n                                                    valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                    suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row gutter={'1'} >\r\n\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Col span={8} xs={24} xl={24}>\r\n\r\n                                                    <Statistic\r\n                                                        title={<h1>Night:</h1>}\r\n                                                        value={DailyNightRealTime['Line1kg']}\r\n                                                        precision={0}\r\n                                                        valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                        suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Statistic\r\n                                            title={<h1>Total:</h1>}\r\n                                            value={DailyRealTime['Line1kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#3f8600', fontSize: '50px', color: '#131212', fontWeight: 'bold' }}\r\n                                            suffix={<h1 style={{ fontSize: '25px' }}>Unit</h1>}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 2 KG</h2>\r\n\r\n                                <Row gutter={'1'} >\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Row gutter={'1'} >\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Statistic\r\n                                                    title={<h1>Morning:</h1>}\r\n                                                    value={DailyMorningRealTime['Line2kg']}\r\n                                                    precision={0}\r\n                                                    valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                    suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row gutter={'1'} >\r\n\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Col span={8} xs={24} xl={24}>\r\n\r\n                                                    <Statistic\r\n                                                        title={<h1>Night:</h1>}\r\n                                                        value={DailyNightRealTime['Line2kg']}\r\n                                                        precision={0}\r\n                                                        valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                        suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Statistic\r\n                                            title={<h1>Total:</h1>}\r\n                                            value={DailyRealTime['Line2kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#3f8600', fontSize: '50px', color: '#131212', fontWeight: 'bold' }}\r\n                                            suffix={<h1 style={{ fontSize: '25px' }}>Unit</h1>}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 TON</h2>\r\n                                <Row gutter={'1'} >\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Row gutter={'1'} >\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Statistic\r\n                                                    title={<h1>Morning:</h1>}\r\n                                                    value={DailyMorningRealTime['Line1Ton']}\r\n                                                    precision={0}\r\n                                                    valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                    suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row gutter={'1'} >\r\n\r\n                                            <Col span={8} xs={24} xl={24}>\r\n\r\n                                                <Col span={8} xs={24} xl={24}>\r\n\r\n                                                    <Statistic\r\n                                                        title={<h1>Night:</h1>}\r\n                                                        value={DailyNightRealTime['Line1Ton']}\r\n                                                        precision={0}\r\n                                                        valueStyle={{ color: '#3f8600', fontSize: '30px', color: '#131212', fontWeight: 'bold' }}\r\n                                                        suffix={<h1 style={{ fontSize: '15px' }}>Unit</h1>}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col span={8} xs={12} xl={12}>\r\n                                        <Statistic\r\n                                            title={<h1>Total:</h1>}\r\n                                            value={DailyRealTime['Line1Ton']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#3f8600', fontSize: '50px', color: '#131212', fontWeight: 'bold' }}\r\n                                            suffix={<h1 style={{ fontSize: '25px' }}>Unit</h1>}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n\r\n\r\n                <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                    <Title level={1} style={{ fontWeight: 'bold' }}> Shift Log  </Title>\r\n                    <Table columns={LogColumbShift} dataSource={ShiftLogSorted} bordered scroll={{ x: 500, y: 385 }} pagination={false} size=\"small\" onChange={handleChangeOverall} />\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px'}}>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset', overflowY:'scroll' }} >\r\n                            <Title level={1} style={{ fontWeight: 'bold' }}> Total Capacity </Title>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col span={12} xs={24} xl={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>50 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line50kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12} xs={24} xl={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line1kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12} xs={24} xl={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>2 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line2kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12} xs={24} xl={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Ton</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line1Ton']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Card style={{ backgroundColor: 'AppWorkspace', border: '3px outset', minHeight: '540px' }} >\r\n\r\n                            <Title level={1} style={{ fontWeight: 'bold' }} > Daily Log  </Title>\r\n                            <Table columns={LogColumb} dataSource={DailyLogSorted} bordered scroll={{ x: 500, y: 385 }} pagination={false} size=\"small\" onChange={handleChangeOverall} />\r\n                        </Card>\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n\r\n\r\n\r\n                <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                    <Title level={1} style={{ fontWeight: 'bold' }}> Event Log  </Title>\r\n                    <Table bordered columns={LogColumbPerTime} dataSource={EventLogSorted} scroll={{ x: 600, y: 350 }} pagination={false} size=\"small\" onChange={handleChangePertime} />\r\n                </Card>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n             */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}