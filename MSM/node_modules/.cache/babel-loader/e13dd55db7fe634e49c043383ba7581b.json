{"ast":null,"code":"import React from 'react';\nimport { RealtimeData_Request } from '../api';\nimport moment from 'moment';\nimport axios from 'axios';\nexport const DataRequest = async (label, site, page, line) => {\n  axios.post('https://iotcs.app/read_realtime/', {\n    \"csrfmiddlewaretoken\": \"csrftoken\",\n    \"Site\": site,\n    \"Line\": line,\n    \"Page\": page,\n    \"Parameters\": label\n  }).then(function (response) {\n    return response.data; //console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  }); // const response = await RealtimeData_Request(label, site, page, line)\n  // if (response.success !== false) {\n  //     const data = response.Data\n  //     let DataReturn = data.map(obj => {\n  //         let cobj = []\n  //         let ar0 = moment(obj.fields.LastChange).utc(true).format('YYYY-MM-DD HH:mm:ss')\n  //         cobj = {\n  //             'time': ar0,\n  //             'Label': obj.fields.Label,\n  //             'Value': obj.fields.Value,\n  //             'Line': obj.fields.Line,\n  //             'key': obj.fields.Label,\n  //             'Page': obj.fields.Page,\n  //         }\n  //         return cobj\n  //     })\n  //     // console.log(DataReturn);\n  // }\n  // else{\n  //     console.log('Data Request Error');\n  // }\n};\n_c = DataRequest;\nexport const RealTimeRequestWrap = props => {};\n_c2 = RealTimeRequestWrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataRequest\");\n$RefreshReg$(_c2, \"RealTimeRequestWrap\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/DataRequest/RealTimeRequestWrap.js"],"names":["React","RealtimeData_Request","moment","axios","DataRequest","label","site","page","line","post","then","response","data","catch","error","console","log","RealTimeRequestWrap","props"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,KAAoC;AAE3DL,EAAAA,KAAK,CAACM,IAAN,CAAW,kCAAX,EAA+C;AAC3C,2BAAuB,WADoB;AAE3C,YAAQH,IAFmC;AAG3C,YAAQE,IAHmC;AAI3C,YAAQD,IAJmC;AAK3C,kBAAcF;AAL6B,GAA/C,EAOGK,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AACtB,WAAOA,QAAQ,CAACC,IAAhB,CADsB,CAExB;AACD,GAVH,EAWGC,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAbH,EAF2D,CAiB3D;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAzCM;KAAMV,W;AA2Cb,OAAO,MAAMa,mBAAmB,GAAIC,KAAD,IAAW,CAG7C,CAHM;MAAMD,mB","sourcesContent":["import React from 'react'\r\nimport { RealtimeData_Request } from '../api'\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const DataRequest = async (label, site, page, line ) => {\r\n\r\n    axios.post('https://iotcs.app/read_realtime/', {\r\n        \"csrfmiddlewaretoken\": \"csrftoken\",\r\n        \"Site\": site,\r\n        \"Line\": line,\r\n        \"Page\": page,\r\n        \"Parameters\": label\r\n      })\r\n      .then(function (response) {\r\n          return response.data\r\n        //console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    // const response = await RealtimeData_Request(label, site, page, line)\r\n\r\n    // if (response.success !== false) {\r\n    //     const data = response.Data\r\n\r\n    //     let DataReturn = data.map(obj => {\r\n    //         let cobj = []\r\n    //         let ar0 = moment(obj.fields.LastChange).utc(true).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n    //         cobj = {\r\n    //             'time': ar0,\r\n    //             'Label': obj.fields.Label,\r\n    //             'Value': obj.fields.Value,\r\n    //             'Line': obj.fields.Line,\r\n    //             'key': obj.fields.Label,\r\n    //             'Page': obj.fields.Page,\r\n    //         }\r\n    //         return cobj\r\n    //     })\r\n    //     // console.log(DataReturn);\r\n    // }\r\n    // else{\r\n    //     console.log('Data Request Error');\r\n    // }\r\n}\r\n\r\nexport const RealTimeRequestWrap = (props) => {\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}