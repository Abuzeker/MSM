{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Col,Divider,Row}from'antd';import React,{useState,useEffect}from'react';import{RealtimeData_Request}from'../../api';import{C3Model,G2Model}from'../../DataRequest/DataModel';import{DataSortRT}from'../../DataRequest/RealTimeRequestWrap';import HMIWrapper from'../Realtime/HMIWrapper';import RealTimeGraphWrapper from'../Realtime/RealTimeGraphWrapper';import RealTimeTableWrapper from'../Realtime/RealTimeTableWrapper';import PolymerC3 from'./HMI/PolymerC3';import PolymerG2 from'./HMI/PolymerG2';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var C3DataModel=C3Model;var G2DataModel=G2Model;var BlankPage;var RealTimeValue={\"C3HMI\":C3DataModel,\"G2HMI\":G2DataModel,\"C3Table\":[],\"G2Table\":[],\"C3Graph\":[],\"G2Graph\":[]};var Line1RT=function Line1RT(){var _useState=useState({count:0,count2:100}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var DataRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(label,site,page,line,HMIName,TableName){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return RealtimeData_Request(label,site,page,line);case 2:response=_context.sent;RealTimeValue[TableName]=DataSortRT(response);RealTimeValue[HMIName]=RealTimeValue[TableName];case 5:case\"end\":return _context.stop();}}},_callee);}));return function DataRequest(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();var RenderNewData=function RenderNewData(){DataRequest([],'Polymerlink','1','C3','C3HMI',\"C3Table\");DataRequest([],'Polymerlink',BlankPage,'G2','G2HMI',\"G2Table\");setState(function(_ref2){var count=_ref2.count;return{count:count+1};});};useEffect(function(){RenderNewData();var interval=setInterval(function(){RenderNewData();},3000);return function(){clearInterval(interval);console.log('Unmount Effect Line1RT');};},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(HMIWrapper,{Tab:['C3','G2'],children:[/*#__PURE__*/_jsx(PolymerC3,{Parameter:RealTimeValue['C3HMI']},'C3'),/*#__PURE__*/_jsx(PolymerG2,{Parameter:RealTimeValue['G2HMI']},'G2')]}),/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"Parameter List\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{span:12,xs:24,xl:12,children:/*#__PURE__*/_jsx(RealTimeTableWrapper,{TableTitle:'C3',TableData:RealTimeValue['C3Table']})}),/*#__PURE__*/_jsx(Col,{span:12,xs:24,xl:12,children:/*#__PURE__*/_jsx(RealTimeTableWrapper,{TableTitle:'G2',TableData:RealTimeValue['G2Table']})})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{span:12,xs:24,xl:12,children:/*#__PURE__*/_jsx(RealTimeGraphWrapper,{GarphTitle:'C3',DataModel:C3DataModel,RawDataReceive:RealTimeValue['C3Table'],Divname:'C3Graph'})}),/*#__PURE__*/_jsx(Col,{span:12,xs:24,xl:12,children:/*#__PURE__*/_jsx(RealTimeGraphWrapper,{GarphTitle:'G2',DataModel:G2DataModel,RawDataReceive:RealTimeValue['G2Table'],Divname:'G2Graph'})})]})})]});};export default Line1RT;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1RT.jsx"],"names":["Button","Col","Divider","Row","React","useState","useEffect","RealtimeData_Request","C3Model","G2Model","DataSortRT","HMIWrapper","RealTimeGraphWrapper","RealTimeTableWrapper","PolymerC3","PolymerG2","C3DataModel","G2DataModel","BlankPage","RealTimeValue","Line1RT","count","count2","state","setState","DataRequest","label","site","page","line","HMIName","TableName","response","RenderNewData","interval","setInterval","clearInterval","console","log"],"mappings":"ogBAAA,OAASA,MAAT,CAAiBC,GAAjB,CAAsBC,OAAtB,CAA+BC,GAA/B,KAA0C,MAA1C,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,oBAAT,KAAqC,WAArC,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,6BAAjC,CACA,OAASC,UAAT,KAA2B,uCAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,C,wFAEA,GAAIC,CAAAA,WAAW,CAAGR,OAAlB,CACA,GAAIS,CAAAA,WAAW,CAAGR,OAAlB,CACA,GAAIS,CAAAA,SAAJ,CAEA,GAAIC,CAAAA,aAAa,CAAG,CAChB,QAASH,WADO,CAEhB,QAASC,WAFO,CAGhB,UAAW,EAHK,CAIhB,UAAW,EAJK,CAKhB,UAAW,EALK,CAMhB,UAAW,EANK,CAApB,CAWA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAElB,cAA0Bf,QAAQ,CAAC,CAAEgB,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,GAApB,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,0FAAG,iBAAOC,KAAP,CAAcC,IAAd,CAAoBC,IAApB,CAA0BC,IAA1B,CAAgCC,OAAhC,CAAyCC,SAAzC,qJACOxB,CAAAA,oBAAoB,CAACmB,KAAD,CAAQC,IAAR,CAAcC,IAAd,CAAoBC,IAApB,CAD3B,QACVG,QADU,eAEhBb,aAAa,CAACY,SAAD,CAAb,CAA2BrB,UAAU,CAACsB,QAAD,CAArC,CACAb,aAAa,CAACW,OAAD,CAAb,CAAyBX,aAAa,CAACY,SAAD,CAAtC,CAHgB,sDAAH,kBAAXN,CAAAA,WAAW,gEAAjB,CAOA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAExBR,WAAW,CAAC,EAAD,CAAK,aAAL,CAAoB,GAApB,CAAyB,IAAzB,CAA+B,OAA/B,CAAwC,SAAxC,CAAX,CACAA,WAAW,CAAC,EAAD,CAAK,aAAL,CAAoBP,SAApB,CAA+B,IAA/B,CAAqC,OAArC,CAA8C,SAA9C,CAAX,CAEAM,QAAQ,CAAC,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CAAEA,KAAK,CAAEA,KAAK,CAAG,CAAjB,CAAhB,EAAD,CAAR,CACH,CAND,CASAf,SAAS,CAAC,UAAM,CACZ2B,aAAa,GAEb,GAAMC,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC/BF,aAAa,GAChB,CAF2B,CAEzB,IAFyB,CAA5B,CAIA,MAAO,WAAM,CACTG,aAAa,CAACF,QAAD,CAAb,CACAG,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACH,CAHD,CAKH,CAZQ,CAYN,EAZM,CAAT,CAeA,mBACI,oCACI,MAAC,UAAD,EAAY,GAAG,CAAE,CAAC,IAAD,CAAO,IAAP,CAAjB,wBACI,KAAC,SAAD,EAAsB,SAAS,CAAEnB,aAAa,CAAC,OAAD,CAA9C,EAAgB,IAAhB,CADJ,cAEI,KAAC,SAAD,EAAsB,SAAS,CAAEA,aAAa,CAAC,OAAD,CAA9C,EAAgB,IAAhB,CAFJ,GADJ,cAMI,KAAC,OAAD,EAAS,WAAW,CAAC,MAArB,4BANJ,cAQI,kCACI,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAAb,wBACI,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,EAAE,CAAE,EAAnB,CAAuB,EAAE,CAAE,EAA3B,uBACI,KAAC,oBAAD,EAAsB,UAAU,CAAE,IAAlC,CAAwC,SAAS,CAAEA,aAAa,CAAC,SAAD,CAAhE,EADJ,EADJ,cAII,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,EAAE,CAAE,EAAnB,CAAuB,EAAE,CAAE,EAA3B,uBACI,KAAC,oBAAD,EAAsB,UAAU,CAAE,IAAlC,CAAwC,SAAS,CAAEA,aAAa,CAAC,SAAD,CAAhE,EADJ,EAJJ,GADJ,EARJ,cAoBI,kCACI,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAAb,wBAEI,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,EAAE,CAAE,EAAnB,CAAuB,EAAE,CAAE,EAA3B,uBACI,KAAC,oBAAD,EAAsB,UAAU,CAAE,IAAlC,CACI,SAAS,CAAEH,WADf,CAEI,cAAc,CAAEG,aAAa,CAAC,SAAD,CAFjC,CAGI,OAAO,CAAE,SAHb,EADJ,EAFJ,cAUI,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,EAAE,CAAE,EAAnB,CAAuB,EAAE,CAAE,EAA3B,uBACI,KAAC,oBAAD,EAAsB,UAAU,CAAE,IAAlC,CACI,SAAS,CAAEF,WADf,CAEI,cAAc,CAAEE,aAAa,CAAC,SAAD,CAFjC,CAGI,OAAO,CAAE,SAHb,EADJ,EAVJ,GADJ,EApBJ,GADJ,CA8CH,CAjFD,CAmFA,cAAeC,CAAAA,OAAf","sourcesContent":["import { Button, Col, Divider, Row } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { RealtimeData_Request } from '../../api'\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel'\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport HMIWrapper from '../Realtime/HMIWrapper'\r\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper'\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper'\r\nimport PolymerC3 from './HMI/PolymerC3'\r\nimport PolymerG2 from './HMI/PolymerG2'\r\n\r\nlet C3DataModel = C3Model\r\nlet G2DataModel = G2Model\r\nlet BlankPage\r\n\r\nlet RealTimeValue = {\r\n    \"C3HMI\": C3DataModel,\r\n    \"G2HMI\": G2DataModel,\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n}\r\n\r\n\r\n\r\nconst Line1RT = () => {\r\n\r\n    const [state, setState] = useState({ count: 0, count2: 100 });\r\n\r\n    const DataRequest = async (label, site, page, line, HMIName, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[TableName] = DataSortRT(response)\r\n        RealTimeValue[HMIName] = RealTimeValue[TableName]\r\n    }\r\n\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest([], 'Polymerlink', '1', 'C3', 'C3HMI', \"C3Table\")\r\n        DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\")\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        RenderNewData()\r\n\r\n        const interval = setInterval(() => {\r\n            RenderNewData()\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HMIWrapper Tab={['C3', 'G2']}>\r\n                <PolymerC3 key={'C3'} Parameter={RealTimeValue['C3HMI']} />\r\n                <PolymerG2 key={'G2'} Parameter={RealTimeValue['G2HMI']} />\r\n            </HMIWrapper>\r\n\r\n            <Divider orientation=\"left\">Parameter List</Divider>\r\n\r\n            <div>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeTableWrapper TableTitle={'C3'} TableData={RealTimeValue['C3Table']} />\r\n                    </Col>\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeTableWrapper TableTitle={'G2'} TableData={RealTimeValue['G2Table']} />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div>\r\n                <Row gutter={[16, 16]}>\r\n\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeGraphWrapper GarphTitle={'C3'}\r\n                            DataModel={C3DataModel}\r\n                            RawDataReceive={RealTimeValue['C3Table']}\r\n                            Divname={'C3Graph'}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col span={12} xs={24} xl={12}>\r\n                        <RealTimeGraphWrapper GarphTitle={'G2'}\r\n                            DataModel={G2DataModel}\r\n                            RawDataReceive={RealTimeValue['G2Table']}\r\n                            Divname={'G2Graph'}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1RT\r\n"]},"metadata":{},"sourceType":"module"}