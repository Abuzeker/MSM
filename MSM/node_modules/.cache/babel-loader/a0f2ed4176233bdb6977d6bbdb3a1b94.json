{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\TestPage\\\\Testpage1.jsx\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\nimport { Button, Table, Tabs } from 'antd';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport Svgexporttest from './Svgexporttest';\nimport Excel from 'exceljs';\nimport { saveAs } from 'file-saver'; // const columns = [\n//     {\n//         title: 'Full Name',\n//         width: 100,\n//         dataIndex: 'name',\n//         key: 'name',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Age',\n//         width: 100,\n//         dataIndex: 'age',\n//         key: 'age',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Column 1',\n//         dataIndex: 'address',\n//         key: '1',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 2',\n//         dataIndex: 'address',\n//         key: '2',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 3',\n//         dataIndex: 'address',\n//         key: '3',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 4',\n//         dataIndex: 'address',\n//         key: '4',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 5',\n//         dataIndex: 'address',\n//         key: '5',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 6',\n//         dataIndex: 'address',\n//         key: '6',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 7',\n//         dataIndex: 'address',\n//         key: '7',\n//         width: 150,\n//     },\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\n//     {\n//         title: 'Action',\n//         key: 'operation',\n//         fixed: 'right',\n//         width: 100,\n//         render: () => <a>action</a>,\n//     },\n// ];\n// const data = [];\n// for (let i = 0; i < 100; i++) {\n//     data.push({\n//         key: i,\n//         name: `Edrward ${i}`,\n//         age: 32,\n//         address: `London Park no. ${i}`,\n//     });\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Testpage1 = () => {\n  // const WriteExcelCell = () => {\n  //     function s2ab(s) {\n  //         var buf = new ArrayBuffer(s.length);\n  //         var view = new Uint8Array(buf);\n  //         for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n  //         return buf;\n  //     }\n  //     let test = [\n  //         [\n  //             '11', '11', '11', '11', '11'\n  //         ],\n  //         [\n  //             '12', '12', '12', '12', '12'\n  //         ]\n  //     ]\n  //     fetch(\"ExtruderSheet.xlsx\")\n  //         .then(res => res.arrayBuffer())\n  //         .then(ab => {\n  //             const wb = XLSX.read(ab, { type: \"string\" });\n  //             const wsname = wb.SheetNames[0];\n  //             const ws = wb.Sheets[wsname];\n  //             XLSX.utils.sheet_add_aoa(ws, test, { origin: 'O6' });\n  //             let wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n  //             console.log('Done');\n  //             saveAs(new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }), 'test.xlsx');\n  //         })\n  // }\n  const TestEcelHandler = () => {\n    fetch(\"ExtruderSheet.xlsx\").then(res => res.arrayBuffer()).then(ab => {\n      var workbook = new Excel.Workbook();\n      workbook.xlsx.readFile(ab).then(function () {\n        var worksheet = workbook.getWorksheet(\"Sheet1\");\n        worksheet.eachRow({\n          includeEmpty: true\n        }, function (row, rowNumber) {\n          console.log(\"Row \" + rowNumber + \" = \" + JSON.stringify(row.values));\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: TestEcelHandler,\n      children: \"capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Testpage1;\nexport default Testpage1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage1\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/TestPage/Testpage1.jsx"],"names":["React","Page","Text","View","Document","StyleSheet","ReactPDF","PDFDownloadLink","Button","Table","Tabs","html2canvas","jsPDF","Svgexporttest","Excel","saveAs","Testpage1","TestEcelHandler","fetch","then","res","arrayBuffer","ab","workbook","Workbook","xlsx","readFile","worksheet","getWorksheet","eachRow","includeEmpty","row","rowNumber","console","log","JSON","stringify","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,eAA3D,QAAkF,qBAAlF;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA,QAAMC,eAAe,GAAG,MAAM;AAE1BC,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,WAAJ,EADZ,EAECF,IAFD,CAEOG,EAAE,IAAI;AACT,UAAIC,QAAQ,GAAG,IAAIT,KAAK,CAACU,QAAV,EAAf;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuBJ,EAAvB,EACKH,IADL,CACU,YAAY;AACd,YAAIQ,SAAS,GAAGJ,QAAQ,CAACK,YAAT,CAAsB,QAAtB,CAAhB;AACAD,QAAAA,SAAS,CAACE,OAAV,CAAkB;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAlB,EAA0C,UAAUC,GAAV,EAAeC,SAAf,EAA0B;AAChEC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAASF,SAAT,GAAqB,KAArB,GAA6BG,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACM,MAAnB,CAAzC;AACH,SAFD;AAGH,OANL;AAOH,KAXD;AAcH,GAhBD;;AAmBA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEpB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApED;;KAAMD,S;AAuEN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Button, Table, Tabs } from 'antd';\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\nimport Svgexporttest from './Svgexporttest';\r\nimport Excel from 'exceljs'\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Full Name',\r\n//         width: 100,\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Age',\r\n//         width: 100,\r\n//         dataIndex: 'age',\r\n//         key: 'age',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Column 1',\r\n//         dataIndex: 'address',\r\n//         key: '1',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 2',\r\n//         dataIndex: 'address',\r\n//         key: '2',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 3',\r\n//         dataIndex: 'address',\r\n//         key: '3',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 4',\r\n//         dataIndex: 'address',\r\n//         key: '4',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 5',\r\n//         dataIndex: 'address',\r\n//         key: '5',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 6',\r\n//         dataIndex: 'address',\r\n//         key: '6',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 7',\r\n//         dataIndex: 'address',\r\n//         key: '7',\r\n//         width: 150,\r\n//     },\r\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\r\n//     {\r\n//         title: 'Action',\r\n//         key: 'operation',\r\n//         fixed: 'right',\r\n//         width: 100,\r\n//         render: () => <a>action</a>,\r\n//     },\r\n// ];\r\n\r\n// const data = [];\r\n// for (let i = 0; i < 100; i++) {\r\n//     data.push({\r\n//         key: i,\r\n//         name: `Edrward ${i}`,\r\n//         age: 32,\r\n//         address: `London Park no. ${i}`,\r\n//     });\r\n// }\r\n\r\nconst Testpage1 = () => {\r\n\r\n    // const WriteExcelCell = () => {\r\n\r\n    //     function s2ab(s) {\r\n\r\n    //         var buf = new ArrayBuffer(s.length);\r\n    //         var view = new Uint8Array(buf);\r\n    //         for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\r\n    //         return buf;\r\n\r\n    //     }\r\n\r\n    //     let test = [\r\n    //         [\r\n    //             '11', '11', '11', '11', '11'\r\n    //         ],\r\n    //         [\r\n    //             '12', '12', '12', '12', '12'\r\n    //         ]\r\n    //     ]\r\n\r\n    //     fetch(\"ExtruderSheet.xlsx\")\r\n    //         .then(res => res.arrayBuffer())\r\n    //         .then(ab => {\r\n    //             const wb = XLSX.read(ab, { type: \"string\" });\r\n    //             const wsname = wb.SheetNames[0];\r\n    //             const ws = wb.Sheets[wsname];\r\n\r\n    //             XLSX.utils.sheet_add_aoa(ws, test, { origin: 'O6' });\r\n\r\n    //             let wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\r\n    //             console.log('Done');\r\n\r\n    //             saveAs(new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }), 'test.xlsx');\r\n\r\n    //         })\r\n    // }\r\n\r\n    const TestEcelHandler = () => {\r\n\r\n        fetch(\"ExtruderSheet.xlsx\")\r\n        .then(res=> res.arrayBuffer())\r\n        .then( ab => {\r\n            var workbook = new Excel.Workbook();\r\n            workbook.xlsx.readFile(ab)\r\n                .then(function () {\r\n                    var worksheet = workbook.getWorksheet(\"Sheet1\");\r\n                    worksheet.eachRow({ includeEmpty: true }, function (row, rowNumber) {\r\n                        console.log(\"Row \" + rowNumber + \" = \" + JSON.stringify(row.values));\r\n                    });\r\n                });\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={TestEcelHandler}>\r\n                capture\r\n            </Button>\r\n            {/* \r\n            <div id='capture' style={{ width: '100%', height: 600, borderRadius: 15, }}>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Testpage1\r\n"]},"metadata":{},"sourceType":"module"}