{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1DataLog.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request, RealtimeData_Request } from '../../api';\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\nimport { ConvertMonentToDateTime, DataSortTime } from '../../DataRequest/LogDataRequestWrap';\nimport LogGraphWrapper from './LogVisualize/LogGraphWrapper';\nimport { Line } from '@antv/g2plot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet C3DataModel = C3Model;\nlet G2DataModel = G2Model;\nlet BlankPage,\n    data_filter = [];\nlet C3DTRange = [],\n    G2DTRange = [];\nlet LogValue = {\n  \"C3Table\": [],\n  \"G2Table\": [],\n  \"C3Graph\": [],\n  \"G2Graph\": [],\n  \"C3Selected\": [],\n  \"G2Selected\": []\n};\nlet DateTimeRange;\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\nlet OptionC3 = Object.keys(C3Model);\n_c = OptionC3;\nlet OptionG2 = Object.keys(G2Model);\n_c2 = OptionG2;\nconst OptionSelectorC3 = [];\nconst OptionSelectorG2 = [];\nLogValue['C3Selected'] = [OptionC3[0], OptionC3[1]];\nLogValue['G2Selected'] = [OptionG2[0], OptionG2[1]];\nOptionC3.forEach(element => {\n  OptionSelectorC3.push( /*#__PURE__*/_jsxDEV(Option, {\n    children: element\n  }, element, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }, this));\n});\nOptionG2.forEach(element => {\n  OptionSelectorG2.push( /*#__PURE__*/_jsxDEV(Option, {\n    children: element\n  }, element, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 27\n  }, this));\n});\nlet data_filterC3 = OptionC3.map(obj => {\n  let cobj = [];\n  cobj = {\n    text: obj,\n    value: obj\n  };\n  return cobj;\n});\n\nconst parseDMYhmC3 = s => {\n  var b = s.split(/\\D/);\n  return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\n};\n\nconst columnsC3 = [{\n  title: 'Parameter',\n  dataIndex: 'Parameter',\n  filters: data_filterC3,\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.Parameter.includes(value),\n  width: '30%'\n}, {\n  title: 'Value',\n  dataIndex: 'Value',\n  sorter: (a, b) => a.Value - b.Value\n}, {\n  title: 'date',\n  dataIndex: 'date',\n  sorter: (a, b) => parseDMYhmC3(a.date) - parseDMYhmC3(b.date)\n}];\nlet data_filterG2 = OptionG2.map(obj => {\n  let cobj = [];\n  cobj = {\n    text: obj,\n    value: obj\n  };\n  return cobj;\n});\n\nconst parseDMYhmG2 = s => {\n  var b = s.split(/\\D/);\n  return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\n};\n\nconst columnsG2 = [{\n  title: 'Parameter',\n  dataIndex: 'Parameter',\n  filters: data_filterG2,\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.Parameter.includes(value),\n  width: '30%'\n}, {\n  title: 'Value',\n  dataIndex: 'Value',\n  sorter: (a, b) => a.Value - b.Value\n}, {\n  title: 'date',\n  dataIndex: 'date',\n  sorter: (a, b) => parseDMYhmG2(a.date) - parseDMYhmG2(b.date)\n}];\nlet line, line2;\n\nconst Line1DataLog = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n  useEffect(() => {\n    console.log('Reffect');\n    line = new Line('C3Graph', {\n      data: LogValue['C3Table'],\n      xField: 'date',\n      yField: 'Value',\n      seriesField: 'Parameter'\n    });\n\n    try {\n      line.render();\n    } catch {}\n\n    line2 = new Line('G2Graph', {\n      data: LogValue['G2Table'],\n      xField: 'date',\n      yField: 'Value',\n      seriesField: 'Parameter'\n    });\n\n    try {\n      line2.render();\n    } catch {}\n\n    return () => {\n      line.destroy();\n      line2.destroy();\n    };\n  }, []);\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = DataSortTime(response);\n    LogValue[BufferName] = data; // console.log(response);\n\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const C3LogRequest = async DT => {\n    C3DTRange = ConvertMonentToDateTime(DT);\n    await UpdateTableData(LogValue['C3Selected'], C3DTRange[0], C3DTRange[1], 'Polymerlink', 'C3', '1', \"C3Table\", C3Model);\n    console.log(LogValue[\"C3Table\"]);\n    line.changeData(LogValue[\"C3Table\"]);\n  };\n\n  const G2LogRequest = async DT => {\n    G2DTRange = ConvertMonentToDateTime(DT);\n    await UpdateTableData(LogValue['G2Selected'], G2DTRange[0], G2DTRange[1], 'Polymerlink', 'G2', BlankPage, \"G2Table\", G2Model);\n    line2.changeData(LogValue[\"G2Table\"]);\n  };\n\n  const ChangeC3Select = value => {\n    LogValue['C3Selected'] = value;\n  };\n\n  const ChangeG2Select = value => {\n    LogValue['G2Selected'] = value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        showTime: true,\n        onOk: C3LogRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: {\n          C3LogRequest\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      size: \"middle\",\n      placeholder: \"Please select\",\n      defaultValue: [OptionC3[0], OptionC3[1]],\n      style: {\n        width: '100%',\n        paddingBottom: '20px'\n      },\n      onChange: ChangeC3Select,\n      children: OptionSelectorC3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Log Value C3\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsC3,\n        dataSource: LogValue['C3Table'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: 'Log Value C3',\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        backgroundColor: '#f0f9fa'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"C3Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n      showTime: true,\n      onOk: G2LogRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      size: \"middle\",\n      placeholder: \"Please select\",\n      defaultValue: [OptionG2[0], OptionG2[1]],\n      style: {\n        width: '100%'\n      },\n      onChange: ChangeG2Select,\n      children: OptionSelectorG2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Log Value G2\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsG2,\n        dataSource: LogValue['G2Table'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: 'Log Value G2',\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        backgroundColor: '#f0f9fa'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"G2Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1DataLog, \"kcd+c1a7RyKAa2KvtJN963wq2Sk=\");\n\n_c3 = Line1DataLog;\nexport default Line1DataLog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OptionC3\");\n$RefreshReg$(_c2, \"OptionG2\");\n$RefreshReg$(_c3, \"Line1DataLog\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1DataLog.jsx"],"names":["Button","Col","Divider","Row","DatePicker","Card","Table","Select","React","useState","useEffect","logdata_request","RealtimeData_Request","C3Model","G2Model","ConvertMonentToDateTime","DataSortTime","LogGraphWrapper","Line","C3DataModel","G2DataModel","BlankPage","data_filter","C3DTRange","G2DTRange","LogValue","DateTimeRange","RangePicker","Option","OptionC3","Object","keys","OptionG2","OptionSelectorC3","OptionSelectorG2","forEach","element","push","data_filterC3","map","obj","cobj","text","value","parseDMYhmC3","s","b","split","Date","columnsC3","title","dataIndex","filters","filterMode","filterSearch","onFilter","record","Parameter","includes","width","sorter","a","Value","date","data_filterG2","parseDMYhmG2","columnsG2","line","line2","Line1DataLog","state","setState","count","console","log","data","xField","yField","seriesField","render","destroy","UpdateTableData","StartTime","EndTime","Site","Page","BufferName","Model","response","C3LogRequest","DT","changeData","G2LogRequest","ChangeC3Select","ChangeG2Select","paddingBottom","marginLeft","borderRadius","y","backgroundColor"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { logdata_request, RealtimeData_Request } from '../../api'\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel'\r\nimport { ConvertMonentToDateTime, DataSortTime } from '../../DataRequest/LogDataRequestWrap'\r\nimport LogGraphWrapper from './LogVisualize/LogGraphWrapper'\r\nimport { Line } from '@antv/g2plot';\r\n\r\n\r\n\r\nlet C3DataModel = C3Model\r\nlet G2DataModel = G2Model\r\nlet BlankPage, data_filter = []\r\nlet C3DTRange = [], G2DTRange = []\r\n\r\nlet LogValue = {\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n    \"C3Selected\": [],\r\n    \"G2Selected\": [],\r\n}\r\nlet DateTimeRange\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nlet OptionC3 = Object.keys(C3Model)\r\nlet OptionG2 = Object.keys(G2Model)\r\n\r\nconst OptionSelectorC3 = [];\r\nconst OptionSelectorG2 = [];\r\n\r\nLogValue['C3Selected'] = [OptionC3[0], OptionC3[1]];\r\nLogValue['G2Selected'] = [OptionG2[0], OptionG2[1]];\r\n\r\nOptionC3.forEach(element => {\r\n    OptionSelectorC3.push(<Option key={element}>{element}</Option>)\r\n});\r\nOptionG2.forEach(element => {\r\n    OptionSelectorG2.push(<Option key={element}>{element}</Option>)\r\n});\r\n\r\nlet data_filterC3 = OptionC3.map(obj => {\r\n    let cobj = []\r\n\r\n    cobj = {\r\n        text: obj,\r\n        value: obj,\r\n    }\r\n    return cobj\r\n})\r\n\r\nconst parseDMYhmC3 = (s) => {\r\n    var b = s.split(/\\D/);\r\n    return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\r\n}\r\n\r\nconst columnsC3 = [\r\n    {\r\n        title: 'Parameter',\r\n        dataIndex: 'Parameter',\r\n        filters: data_filterC3,\r\n        filterMode: 'tree',\r\n        filterSearch: true,\r\n        onFilter: (value, record) => record.Parameter.includes(value),\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        sorter: (a, b) => a.Value - b.Value,\r\n    },\r\n    {\r\n        title: 'date',\r\n        dataIndex: 'date',\r\n        sorter: (a, b) => parseDMYhmC3(a.date) - parseDMYhmC3(b.date),\r\n    },\r\n];\r\n\r\n\r\n\r\nlet data_filterG2 = OptionG2.map(obj => {\r\n    let cobj = []\r\n\r\n    cobj = {\r\n        text: obj,\r\n        value: obj,\r\n    }\r\n    return cobj\r\n})\r\n\r\nconst parseDMYhmG2 = (s) => {\r\n    var b = s.split(/\\D/);\r\n    return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\r\n}\r\n\r\nconst columnsG2 = [\r\n    {\r\n        title: 'Parameter',\r\n        dataIndex: 'Parameter',\r\n        filters: data_filterG2,\r\n        filterMode: 'tree',\r\n        filterSearch: true,\r\n        onFilter: (value, record) => record.Parameter.includes(value),\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        sorter: (a, b) => a.Value - b.Value,\r\n    },\r\n    {\r\n        title: 'date',\r\n        dataIndex: 'date',\r\n        sorter: (a, b) => parseDMYhmG2(a.date) - parseDMYhmG2(b.date),\r\n    },\r\n];\r\n\r\nlet line, line2\r\n\r\nconst Line1DataLog = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n    useEffect(() => {\r\n        console.log('Reffect');\r\n\r\n        line = new Line('C3Graph', {\r\n            data: LogValue['C3Table'],\r\n            xField: 'date',\r\n            yField: 'Value',\r\n            seriesField: 'Parameter',\r\n        })\r\n\r\n        try { line.render() }\r\n        catch { }\r\n\r\n        line2 = new Line('G2Graph', {\r\n            data: LogValue['G2Table'],\r\n            xField: 'date',\r\n            yField: 'Value',\r\n            seriesField: 'Parameter',\r\n        })\r\n\r\n        try { line2.render() }\r\n        catch { }\r\n\r\n        return () => {\r\n            line.destroy();\r\n            line2.destroy();\r\n\r\n        }\r\n    }, [])\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n        LogValue[BufferName] = data\r\n        // console.log(response);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const C3LogRequest = async (DT) => {\r\n        C3DTRange = ConvertMonentToDateTime(DT)\r\n        await UpdateTableData(LogValue['C3Selected'], C3DTRange[0], C3DTRange[1], 'Polymerlink', 'C3', '1', \"C3Table\", C3Model)\r\n        console.log(LogValue[\"C3Table\"]);\r\n        line.changeData(LogValue[\"C3Table\"])\r\n    }\r\n\r\n    const G2LogRequest = async (DT) => {\r\n        G2DTRange = ConvertMonentToDateTime(DT)\r\n        await UpdateTableData(LogValue['G2Selected'], G2DTRange[0], G2DTRange[1], 'Polymerlink', 'G2', BlankPage, \"G2Table\", G2Model)\r\n        line2.changeData(LogValue[\"G2Table\"])\r\n    }\r\n\r\n    const ChangeC3Select = (value) => {\r\n        LogValue['C3Selected'] = value\r\n    }\r\n\r\n    const ChangeG2Select = (value) => {\r\n        LogValue['G2Selected'] = value\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={C3LogRequest}> test </Button> */}\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <RangePicker showTime onOk={C3LogRequest} />\r\n                <Button type='primary' style={{marginLeft:'10px'}} onClick={{C3LogRequest}}>Update</Button>\r\n            </div>\r\n            <Select\r\n                mode=\"multiple\"\r\n                size=\"middle\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={[OptionC3[0], OptionC3[1]]}\r\n                style={{ width: '100%', paddingBottom: '20px' }}\r\n                onChange={ChangeC3Select}\r\n            >\r\n                {OptionSelectorC3}\r\n            </Select>\r\n\r\n            <Card title='Log Value C3' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                <Table bordered columns={columnsC3} dataSource={LogValue['C3Table']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n            <Card title={'Log Value C3'} bordered={true} style={{ width: '100%', borderRadius: 15, backgroundColor: '#f0f9fa' }} hoverable={true}>\r\n                <div id='C3Graph'></div>\r\n            </Card>\r\n\r\n\r\n\r\n\r\n            <RangePicker showTime onOk={G2LogRequest} />\r\n            <Select\r\n                mode=\"multiple\"\r\n                size=\"middle\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={[OptionG2[0], OptionG2[1]]}\r\n                style={{ width: '100%' }}\r\n                onChange={ChangeG2Select}\r\n\r\n            >\r\n                {OptionSelectorG2}\r\n            </Select>\r\n\r\n            <Card title='Log Value G2' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                <Table bordered columns={columnsG2} dataSource={LogValue['G2Table']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n            <Card title={'Log Value G2'} bordered={true} style={{ width: '100%', borderRadius: 15, backgroundColor: '#f0f9fa' }} hoverable={true}>\r\n                <div id='G2Graph'></div>\r\n            </Card>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1DataLog\r\n"]},"metadata":{},"sourceType":"module"}