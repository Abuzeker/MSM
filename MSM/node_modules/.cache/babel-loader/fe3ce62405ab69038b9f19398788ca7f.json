{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1McG.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select, Typography } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request, RealtimeData_Request } from '../../api';\nimport { McGuire } from '../../DataRequest/DataModel';\nimport { ConvertMonentToDateTime, DataSortTime, DataSortTimeMcG, GetDateTime, LogDataMappingName, LogDataMappingTimeMcG } from '../../DataRequest/LogDataRequestWrap';\nimport { Line } from '@antv/g2plot';\nimport moment from 'moment';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst property = ['PROPERTY_1', 'PROPERTY_2', 'PROPERTY_3', 'PROPERTY_4', 'PROPERTY_5'];\nlet DTinitial = GetDateTime(1, 1);\nlet DTc3 = [],\n    DTg2 = [];\nlet MCGDTRange = [];\nDTc3.push(moment(DTinitial[2]));\nDTc3.push(moment(DTinitial[3]));\nDTg2 = DTc3;\nlet LogValue = {\n  \"MCGTable\": []\n};\nlet RealTimeValue = {\n  \"MCGTable\": []\n};\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Title\n} = Typography;\nconst columnsMcG = [{\n  title: 'Date',\n  dataIndex: 'Time'\n}, {\n  title: 'PROPERTY 1',\n  dataIndex: 'PROPERTY_1'\n}, {\n  title: 'PROPERTY 2',\n  dataIndex: 'PROPERTY_2'\n}, {\n  title: 'PROPERTY 3',\n  dataIndex: 'PROPERTY_3'\n}, {\n  title: 'PROPERTY 4',\n  dataIndex: 'PROPERTY_4'\n}, {\n  title: 'PROPERTY 5',\n  dataIndex: 'PROPERTY_5'\n}];\n\nconst Line1McG = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n  useEffect(() => {\n    RenderNewData();\n    const interval = setInterval(() => {\n      RenderNewData();\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n\n  const RenderNewData = () => {\n    DataRequest(property, 'Polymerlink', '1', 'Maguire C3', \"MCGTable\");\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const DataRequest = async (label, site, page, line, TableName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[TableName] = LogDataMappingName(McGuire, DataSortRT(response));\n    console.log(DataSortRT(response));\n    console.log(RealTimeValue[TableName]);\n  };\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = LogDataMappingName(McGuire, DataSortTimeMcG(response));\n    LogValue[BufferName] = data;\n    console.log(LogValue[BufferName]);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const MCGLogRequest = async DT => {\n    DTg2 = DT;\n    MCGDTRange = ConvertMonentToDateTime(DT);\n    await UpdateTableData(property, MCGDTRange[0], MCGDTRange[1], 'Polymerlink', 'Maguire C3', '1', \"MCGTable\", McGuire);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px',\n        paddingTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"McGuire C3 Log Visualize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        showTime: true,\n        onOk: MCGLogRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: () => {\n          MCGLogRequest(DTg2);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Log Value McGuire C3\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        marginBottom: '10px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsMcG,\n        dataSource: LogValue['MCGTable'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px',\n        paddingTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"McGuire C3 Log Visualize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        underline: true,\n        children: 'McGuire C3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"RealTime\",\n        bordered: true,\n        style: {\n          width: '100%',\n          borderRadius: 15\n        },\n        hoverable: true,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          columns: columnsMcG,\n          dataSource: RealTimeValue['MCGTable'],\n          size: \"small\",\n          scroll: {\n            y: 500\n          },\n          pagination: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1McG, \"kcd+c1a7RyKAa2KvtJN963wq2Sk=\");\n\n_c = Line1McG;\nexport default Line1McG;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1McG\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1McG.jsx"],"names":["Button","Col","Divider","Row","DatePicker","Card","Table","Select","Typography","React","useState","useEffect","logdata_request","RealtimeData_Request","McGuire","ConvertMonentToDateTime","DataSortTime","DataSortTimeMcG","GetDateTime","LogDataMappingName","LogDataMappingTimeMcG","Line","moment","DataSortRT","property","DTinitial","DTc3","DTg2","MCGDTRange","push","LogValue","RealTimeValue","RangePicker","Title","columnsMcG","title","dataIndex","Line1McG","state","setState","count","RenderNewData","interval","setInterval","clearInterval","console","log","DataRequest","label","site","page","line","TableName","response","UpdateTableData","Parameter","StartTime","EndTime","Site","Page","BufferName","Model","data","MCGLogRequest","DT","paddingBottom","paddingTop","marginLeft","width","borderRadius","marginBottom","y"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Row, DatePicker, Card, Table, Select, Typography } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { logdata_request, RealtimeData_Request } from '../../api'\r\nimport { McGuire } from '../../DataRequest/DataModel'\r\nimport { ConvertMonentToDateTime, DataSortTime, DataSortTimeMcG, GetDateTime, LogDataMappingName, LogDataMappingTimeMcG } from '../../DataRequest/LogDataRequestWrap'\r\nimport { Line } from '@antv/g2plot';\r\nimport moment from 'moment';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\n\r\nconst property = [\r\n    'PROPERTY_1', 'PROPERTY_2', 'PROPERTY_3', 'PROPERTY_4', 'PROPERTY_5'\r\n]\r\n\r\nlet DTinitial = GetDateTime(1, 1)\r\nlet DTc3 = [], DTg2 = []\r\nlet MCGDTRange = []\r\n\r\nDTc3.push(moment(DTinitial[2]))\r\nDTc3.push(moment(DTinitial[3]))\r\nDTg2 = DTc3\r\n\r\n\r\nlet LogValue = {\r\n    \"MCGTable\": [],\r\n}\r\n\r\nlet RealTimeValue = {\r\n    \"MCGTable\": [],\r\n}\r\nconst { RangePicker } = DatePicker;\r\nconst { Title } = Typography;\r\n\r\nconst columnsMcG = [\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'Time',\r\n    },\r\n    {\r\n        title: 'PROPERTY 1',\r\n        dataIndex: 'PROPERTY_1',\r\n    },\r\n    {\r\n        title: 'PROPERTY 2',\r\n        dataIndex: 'PROPERTY_2',\r\n    },\r\n    {\r\n        title: 'PROPERTY 3',\r\n        dataIndex: 'PROPERTY_3',\r\n    },\r\n    {\r\n        title: 'PROPERTY 4',\r\n        dataIndex: 'PROPERTY_4',\r\n    },\r\n    {\r\n        title: 'PROPERTY 5',\r\n        dataIndex: 'PROPERTY_5',\r\n    },\r\n];\r\n\r\n\r\nconst Line1McG = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n    useEffect(() => {\r\n        RenderNewData()\r\n\r\n        const interval = setInterval(() => {\r\n            RenderNewData()\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest(property, 'Polymerlink', '1', 'Maguire C3', \"MCGTable\")\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const DataRequest = async (label, site, page, line, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[TableName] = LogDataMappingName(McGuire, DataSortRT(response))\r\n        console.log(DataSortRT(response));\r\n\r\n        console.log(RealTimeValue[TableName]);\r\n    }\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = LogDataMappingName(McGuire, DataSortTimeMcG(response))\r\n\r\n        LogValue[BufferName] = data\r\n        console.log(LogValue[BufferName]);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const MCGLogRequest = async (DT) => {\r\n        DTg2 = DT\r\n        MCGDTRange = ConvertMonentToDateTime(DT)\r\n        await UpdateTableData(property, MCGDTRange[0], MCGDTRange[1], 'Polymerlink', 'Maguire C3', '1', \"MCGTable\", McGuire)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ paddingBottom: '10px', paddingTop: '20px' }}>\r\n                <Divider orientation=\"left\">McGuire C3 Log Visualize</Divider>\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <RangePicker showTime onOk={MCGLogRequest} />\r\n                <Button type='primary' style={{ marginLeft: '10px' }} onClick={() => { MCGLogRequest(DTg2) }}>Update</Button>\r\n            </div>\r\n\r\n            <Card title='Log Value McGuire C3' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                <Table bordered columns={columnsMcG} dataSource={LogValue['MCGTable']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n            <div style={{ paddingBottom: '10px', paddingTop: '20px' }}>\r\n                <Divider orientation=\"left\">McGuire C3 Log Visualize</Divider>\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <Title level={2} underline>\r\n                    {'McGuire C3'}\r\n                </Title>\r\n                <Card title='RealTime' bordered={true}\r\n                    style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                    <Table bordered columns={columnsMcG} dataSource={RealTimeValue['MCGTable']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n                </Card>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1McG\r\n"]},"metadata":{},"sourceType":"module"}