{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\TestPage\\\\Testpage1.jsx\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\nimport { Button, Table, Tabs } from 'antd';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport Svgexporttest from './Svgexporttest';\nimport ExcelJS from 'exceljs';\nimport { saveAs } from 'file-saver'; // const columns = [\n//     {\n//         title: 'Full Name',\n//         width: 100,\n//         dataIndex: 'name',\n//         key: 'name',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Age',\n//         width: 100,\n//         dataIndex: 'age',\n//         key: 'age',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Column 1',\n//         dataIndex: 'address',\n//         key: '1',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 2',\n//         dataIndex: 'address',\n//         key: '2',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 3',\n//         dataIndex: 'address',\n//         key: '3',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 4',\n//         dataIndex: 'address',\n//         key: '4',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 5',\n//         dataIndex: 'address',\n//         key: '5',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 6',\n//         dataIndex: 'address',\n//         key: '6',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 7',\n//         dataIndex: 'address',\n//         key: '7',\n//         width: 150,\n//     },\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\n//     {\n//         title: 'Action',\n//         key: 'operation',\n//         fixed: 'right',\n//         width: 100,\n//         render: () => <a>action</a>,\n//     },\n// ];\n// const data = [];\n// for (let i = 0; i < 100; i++) {\n//     data.push({\n//         key: i,\n//         name: `Edrward ${i}`,\n//         age: 32,\n//         address: `London Park no. ${i}`,\n//     });\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Testpage1 = () => {\n  const TestEcelHandler = () => {\n    const ExcelJS = require('exceljs');\n\n    const workbook = new ExcelJS.Workbook();\n    workbook.creator = 'Me';\n    workbook.lastModifiedBy = 'Her';\n    workbook.created = new Date(1985, 8, 30);\n    workbook.modified = new Date();\n    workbook.lastPrinted = new Date(2016, 9, 27);\n    const sheet = workbook.addWorksheet('My Sheet');\n  };\n\n  async function generateExcel() {\n    let data = [['11', '11', '11', '11', '11'], ['12', '12', '12', '12', '12']];\n    const workbook = new ExcelJS.Workbook();\n    workbook.creator = 'Tomato';\n    workbook.lastModifiedBy = 'Tomato';\n    workbook.created = new Date();\n    workbook.modified = new Date();\n    const worksheet = workbook.addWorksheet('Tomato page 1', {\n      properties: {\n        tabColor: {\n          argb: '#FF0000'\n        }\n      },\n      pageSetup: {\n        paperSize: 9,\n        orientation: 'landscape'\n      }\n    });\n    worksheet.addTable({\n      name: 'Tomatoes',\n      ref: 'A1',\n      headerRow: true,\n      totalsRow: true,\n      style: {\n        theme: 'TableStyleLight1',\n        showRowStripes: true\n      },\n      columns: [{\n        name: 'Label',\n        filterButton: true,\n        totalsRowLabel: ''\n      }, {\n        name: 'Count',\n        totalsRowFunction: 'sum'\n      }],\n      rows: data\n    }); // TODO Prepare the data table\n\n    const buf = await workbook.xlsx.writeBuffer();\n    saveAs(new Blob([buf], {\n      type: \"application/octet-stream\"\n    }), 'test.xlsx'); // return new Blob([buf], {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateExcel,\n      children: \"capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Testpage1;\nexport default Testpage1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage1\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/TestPage/Testpage1.jsx"],"names":["React","Page","Text","View","Document","StyleSheet","ReactPDF","PDFDownloadLink","Button","Table","Tabs","html2canvas","jsPDF","Svgexporttest","ExcelJS","saveAs","Testpage1","TestEcelHandler","require","workbook","Workbook","creator","lastModifiedBy","created","Date","modified","lastPrinted","sheet","addWorksheet","generateExcel","data","worksheet","properties","tabColor","argb","pageSetup","paperSize","orientation","addTable","name","ref","headerRow","totalsRow","style","theme","showRowStripes","columns","filterButton","totalsRowLabel","totalsRowFunction","rows","buf","xlsx","writeBuffer","Blob","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,eAA3D,QAAkF,qBAAlF;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMH,OAAO,GAAGI,OAAO,CAAC,SAAD,CAAvB;;AACA,UAAMC,QAAQ,GAAG,IAAIL,OAAO,CAACM,QAAZ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,OAAT,GAAmB,IAAnB;AACAF,IAAAA,QAAQ,CAACG,cAAT,GAA0B,KAA1B;AACAH,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAnB;AACAL,IAAAA,QAAQ,CAACM,QAAT,GAAoB,IAAID,IAAJ,EAApB;AACAL,IAAAA,QAAQ,CAACO,WAAT,GAAuB,IAAIF,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAvB;AAEA,UAAMG,KAAK,GAAGR,QAAQ,CAACS,YAAT,CAAsB,UAAtB,CAAd;AACH,GAXD;;AAaA,iBAAeC,aAAf,GAA+B;AAE3B,QAAIC,IAAI,GAAG,CACP,CACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,CADO,EAIP,CACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,CAJO,CAAX;AAUA,UAAMX,QAAQ,GAAG,IAAIL,OAAO,CAACM,QAAZ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,OAAT,GAAmB,QAAnB;AACAF,IAAAA,QAAQ,CAACG,cAAT,GAA0B,QAA1B;AACAH,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAACM,QAAT,GAAoB,IAAID,IAAJ,EAApB;AAEA,UAAMO,SAAS,GAAGZ,QAAQ,CAACS,YAAT,CAAsB,eAAtB,EAAuC;AACvDI,MAAAA,UAAU,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAAX,OAD2C;AAEvDC,MAAAA,SAAS,EAAE;AAACC,QAAAA,SAAS,EAAE,CAAZ;AAAeC,QAAAA,WAAW,EAAE;AAA5B;AAF4C,KAAvC,CAAlB;AAKAN,IAAAA,SAAS,CAACO,QAAV,CAAmB;AACfC,MAAAA,IAAI,EAAE,UADS;AAEfC,MAAAA,GAAG,EAAE,IAFU;AAGfC,MAAAA,SAAS,EAAE,IAHI;AAIfC,MAAAA,SAAS,EAAE,IAJI;AAKfC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,kBADJ;AAEHC,QAAAA,cAAc,EAAE;AAFb,OALQ;AASfC,MAAAA,OAAO,EAAE,CACL;AAACP,QAAAA,IAAI,EAAE,OAAP;AAAgBQ,QAAAA,YAAY,EAAE,IAA9B;AAAoCC,QAAAA,cAAc,EAAE;AAApD,OADK,EAEL;AAACT,QAAAA,IAAI,EAAE,OAAP;AAAgBU,QAAAA,iBAAiB,EAAE;AAAnC,OAFK,CATM;AAafC,MAAAA,IAAI,EAAEpB;AAbS,KAAnB,EAxB2B,CAyC3B;;AACA,UAAMqB,GAAG,GAAG,MAAMhC,QAAQ,CAACiC,IAAT,CAAcC,WAAd,EAAlB;AAEAtC,IAAAA,MAAM,CAAC,IAAIuC,IAAJ,CAAS,CAACH,GAAD,CAAT,EAAgB;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAD,EAAwD,WAAxD,CAAN,CA5C2B,CA+C3B;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE1B,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3ED;;KAAMb,S;AA8EN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Button, Table, Tabs } from 'antd';\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\nimport Svgexporttest from './Svgexporttest';\r\nimport ExcelJS from 'exceljs'\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Full Name',\r\n//         width: 100,\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Age',\r\n//         width: 100,\r\n//         dataIndex: 'age',\r\n//         key: 'age',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Column 1',\r\n//         dataIndex: 'address',\r\n//         key: '1',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 2',\r\n//         dataIndex: 'address',\r\n//         key: '2',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 3',\r\n//         dataIndex: 'address',\r\n//         key: '3',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 4',\r\n//         dataIndex: 'address',\r\n//         key: '4',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 5',\r\n//         dataIndex: 'address',\r\n//         key: '5',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 6',\r\n//         dataIndex: 'address',\r\n//         key: '6',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 7',\r\n//         dataIndex: 'address',\r\n//         key: '7',\r\n//         width: 150,\r\n//     },\r\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\r\n//     {\r\n//         title: 'Action',\r\n//         key: 'operation',\r\n//         fixed: 'right',\r\n//         width: 100,\r\n//         render: () => <a>action</a>,\r\n//     },\r\n// ];\r\n\r\n// const data = [];\r\n// for (let i = 0; i < 100; i++) {\r\n//     data.push({\r\n//         key: i,\r\n//         name: `Edrward ${i}`,\r\n//         age: 32,\r\n//         address: `London Park no. ${i}`,\r\n//     });\r\n// }\r\n\r\nconst Testpage1 = () => {\r\n\r\n    const TestEcelHandler = () => {\r\n        const ExcelJS = require('exceljs');\r\n        const workbook = new ExcelJS.Workbook();\r\n\r\n        workbook.creator = 'Me';\r\n        workbook.lastModifiedBy = 'Her';\r\n        workbook.created = new Date(1985, 8, 30);\r\n        workbook.modified = new Date();\r\n        workbook.lastPrinted = new Date(2016, 9, 27);\r\n\r\n        const sheet = workbook.addWorksheet('My Sheet');\r\n    }\r\n\r\n    async function generateExcel() {\r\n\r\n        let data = [\r\n            [\r\n                '11', '11', '11', '11', '11'\r\n            ],\r\n            [\r\n                '12', '12', '12', '12', '12'\r\n            ]\r\n        ]\r\n\r\n\r\n        const workbook = new ExcelJS.Workbook();\r\n    \r\n        workbook.creator = 'Tomato';\r\n        workbook.lastModifiedBy = 'Tomato';\r\n        workbook.created = new Date();\r\n        workbook.modified = new Date();\r\n\r\n        const worksheet = workbook.addWorksheet('Tomato page 1', {\r\n          properties: {tabColor: {argb: '#FF0000'}},\r\n          pageSetup: {paperSize: 9, orientation: 'landscape'}\r\n        });\r\n\r\n        worksheet.addTable({\r\n            name: 'Tomatoes',\r\n            ref: 'A1',\r\n            headerRow: true,\r\n            totalsRow: true,\r\n            style: {\r\n                theme: 'TableStyleLight1',\r\n                showRowStripes: true\r\n            },\r\n            columns: [\r\n                {name: 'Label', filterButton: true, totalsRowLabel: ''},\r\n                {name: 'Count', totalsRowFunction: 'sum'}\r\n            ],\r\n            rows: data,\r\n        });\r\n\r\n\r\n        // TODO Prepare the data table\r\n        const buf = await workbook.xlsx.writeBuffer();\r\n\r\n        saveAs(new Blob([buf], { type: \"application/octet-stream\" }), 'test.xlsx');\r\n\r\n    \r\n        // return new Blob([buf], {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={generateExcel}>\r\n                capture\r\n            </Button>\r\n            {/* \r\n            <div id='capture' style={{ width: '100%', height: 600, borderRadius: 15, }}>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Testpage1\r\n"]},"metadata":{},"sourceType":"module"}