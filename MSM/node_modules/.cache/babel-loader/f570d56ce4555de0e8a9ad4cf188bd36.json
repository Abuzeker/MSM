{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReadJob, RealtimeData_Request, MSM_logdata_request } from '../../api';\nimport { DataSortTimeMSM, GetDateTime, ReportSort, LogDataMappingNameMSM, ConvertMonentToDateTime, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\nimport moment from 'moment';\nimport { MSMTable } from '../../DataRequest/DataModel';\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\nimport './home.css';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DTinitial = GetDateTime(0, 1); // get from yesterday 00:00 to today 00:00\n\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton'];\nlet RequestDateRange = [DTinitial[0], DTinitial[1]];\nlet responseSorted = [];\nconst headers = [{\n  label: \"DateTime\",\n  key: \"DateTime\"\n}, {\n  label: \"Line50kg\",\n  key: \"Line50kg\"\n}, {\n  label: \"Line1kg\",\n  key: \"Line1kg\"\n}, {\n  label: \"Line2kg\",\n  key: \"Line2kg\"\n}, {\n  label: \"Line1Ton\",\n  key: \"Line1Ton\"\n}];\nconst data = [{\n  DateTime: '2022/5/20 00:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 00:00:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 00:00:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 00:00:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 00:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/20 01:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 01:00:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 01:00:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 01:00:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 01:00:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/20 01:30:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}, {\n  DateTime: '2022/5/22 01:50:00',\n  Line50: 65,\n  Line1: 43,\n  Line2: 65,\n  Line1T: 87\n}, {\n  DateTime: '2022/5/21 01:10:00',\n  Line50: 453,\n  Line1: 65,\n  Line2: 90,\n  Line1T: 46\n}, {\n  DateTime: '2022/5/24 01:20:00',\n  Line50: 543,\n  Line1: 87,\n  Line2: 765,\n  Line1T: 0\n}, {\n  DateTime: '2022/5/23 01:40:00',\n  Line50: 32,\n  Line1: 45,\n  Line2: 64,\n  Line1T: 34\n}];\nconst data2 = [{\n  DateTime: '2022/5/20 00:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '50 Kg'\n}, {\n  DateTime: '2022/5/22 00:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '50 Kg'\n}, {\n  DateTime: '2022/5/21 00:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '2 Kg'\n}, {\n  DateTime: '2022/5/24 00:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Kg'\n}, {\n  DateTime: '2022/5/23 00:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Ton'\n}, {\n  DateTime: '2022/5/20 01:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '50 Kg'\n}, {\n  DateTime: '2022/5/22 01:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '2 Kg'\n}, {\n  DateTime: '2022/5/21 01:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Ton'\n}, {\n  DateTime: '2022/5/24 01:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Kg'\n}, {\n  DateTime: '2022/5/23 01:00:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Kg'\n}, {\n  DateTime: '2022/5/20 01:30:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '50 Kg'\n}, {\n  DateTime: '2022/5/22 01:50:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Ton'\n}, {\n  DateTime: '2022/5/21 01:10:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '50 Kg'\n}, {\n  DateTime: '2022/5/24 01:20:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '2 Kg'\n}, {\n  DateTime: '2022/5/23 01:40:00',\n  Id: 2,\n  Weight: 'TBA',\n  Location: 'MSMSGBULOH',\n  Label: '1 Kg'\n}];\n\nconst Home = () => {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const {\n    RangePicker\n  } = DatePicker;\n  const {\n    Option\n  } = Select;\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [sortedInfo2, setSortedInfo2] = useState({});\n\n  const DailyLogRequest = async () => {\n    let response = await MSM_logdata_request(RequestDataOption, RequestDateRange[0], RequestDateRange[1]); //  let responseSorted = LogDataMappingTimeMSM(MSMTable,response)   \n\n    responseSorted = LogDataMappingNameMSM(MSMTable, DataSortTimeMSM(response));\n    console.log(responseSorted);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const handleChangeOverall = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo(sorter);\n  };\n\n  const handleChangePertime = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo2(sorter);\n  };\n\n  const ChangeDateRange = value => {\n    // console.log(RequestDateRange);\n    RequestDateRange = [];\n    RequestDateRange = ConvertMonentToDateTime(value); // console.log(RequestDateRange);\n  };\n\n  const ChangeOption = value => {\n    console.log(`selected ${value}`);\n    RequestDataOption = [];\n    RequestDataOption.push(value); // console.log(RequestDataOption);\n  };\n\n  useEffect(() => {\n    // const interval = setInterval(() => {\n    //     RenderNewData()\n    // }, 3000)\n    return () => {\n      // clearInterval(interval)\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '50 KG',\n    width: 40,\n    dataIndex: 'Line50',\n    key: 'Line50',\n    align: 'center',\n    sorter: (a, b) => a.Line50 - b.Line50,\n    sortOrder: sortedInfo.columnKey === 'Line50' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 40,\n    dataIndex: 'Line1',\n    key: 'Line1',\n    align: 'center',\n    sorter: (a, b) => a.Line1 - b.Line1,\n    sortOrder: sortedInfo.columnKey === 'Line1' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 40,\n    dataIndex: 'Line2',\n    key: 'Line2',\n    align: 'center',\n    sorter: (a, b) => a.Line2 - b.Line2,\n    sortOrder: sortedInfo.columnKey === 'Line2' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 40,\n    dataIndex: 'Line1T',\n    key: 'Line1T',\n    align: 'center',\n    sorter: (a, b) => a.Line1T - b.Line1T,\n    sortOrder: sortedInfo.columnKey === 'Line1T' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  const LogColumbPerTime = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Id Unit',\n    width: 40,\n    dataIndex: 'Id',\n    key: 'Id',\n    align: 'center',\n    sorter: (a, b) => a.Id - b.Id,\n    sortOrder: sortedInfo2.columnKey === 'Id' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Label',\n    width: 40,\n    dataIndex: 'Label',\n    key: 'Label',\n    align: 'center',\n    filters: [{\n      text: '50 Kg',\n      value: '50 Kg'\n    }, {\n      text: '1 Kg',\n      value: '1 Kg'\n    }, {\n      text: '2 Kg',\n      value: '2 Kg'\n    }, {\n      text: '1 Ton',\n      value: '1 Ton'\n    }],\n    onFilter: (value, record) => record.Label.indexOf(value) === 0\n  }, {\n    title: 'Weight',\n    width: 40,\n    dataIndex: 'Weight',\n    key: 'Weight',\n    align: 'center',\n    sorter: (a, b) => a.Weight - b.Weight,\n    sortOrder: sortedInfo2.columnKey === 'Weight' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Location',\n    width: 40,\n    dataIndex: 'Location',\n    key: 'Location',\n    align: 'center',\n    sorter: (a, b) => a.Location - b.Location,\n    sortOrder: sortedInfo2.columnKey === 'Location' ? sortedInfo2.order : null,\n    ellipsis: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Production Capacity Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: '3',\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 50 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 2 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 TON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: 1128,\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              height: '540px',\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [\" Total Capacity (\", DateDisplay(), \")  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"50 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"2 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Ton\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: 1128,\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 53\n                    }, this),\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \" Daily Log  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: LogColumb,\n              dataSource: data,\n              bordered: true,\n              scroll: {\n                x: 600,\n                y: 385\n              },\n              pagination: false,\n              size: \"small\",\n              onChange: handleChangeOverall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '540px',\n          backgroundColor: 'AppWorkspace',\n          border: '3px outset'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 1,\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \" Counter Log  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n            onChange: ChangeDateRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"Line50kg\",\n            style: {\n              width: 100,\n              marginLeft: '10px'\n            },\n            onChange: ChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Line50kg\",\n              children: \"Line50kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Line1kg\",\n              children: \"Line1kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Line2kg\",\n              children: \"Line2kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Line1Ton\",\n              children: \"Line1Ton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              marginLeft: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CSVLink, {\n              data: responseSorted,\n              target: \"_blank\",\n              filename: \"DataLog.csv\",\n              headers: headers,\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              marginLeft: '10px'\n            },\n            onClick: () => {\n              DailyLogRequest();\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          columns: LogColumbPerTime,\n          dataSource: responseSorted,\n          scroll: {\n            x: 600,\n            y: 350\n          },\n          pagination: false,\n          size: \"small\",\n          onChange: handleChangePertime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"p3yqr+unGhiTCWtf2vvByEhTh3Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/Home/Home.jsx"],"names":["React","useEffect","useState","ReadJob","RealtimeData_Request","MSM_logdata_request","DataSortTimeMSM","GetDateTime","ReportSort","LogDataMappingNameMSM","ConvertMonentToDateTime","DateDisplay","moment","MSMTable","Button","Col","Row","Table","Typography","Statistic","Card","DatePicker","Select","RealTimeTableWrapper","DataSortRT","ArrowUpOutlined","ArrowDownOutlined","DashboardOutlined","CSVLink","CSVDownload","DTinitial","RequestDataOption","RequestDateRange","responseSorted","headers","label","key","data","DateTime","Line50","Line1","Line2","Line1T","data2","Id","Weight","Location","Label","Home","Title","RangePicker","Option","state","setState","count","sortedInfo","setSortedInfo","sortedInfo2","setSortedInfo2","DailyLogRequest","response","console","log","handleChangeOverall","pagination","filters","sorter","handleChangePertime","ChangeDateRange","value","ChangeOption","push","LogColumb","title","width","dataIndex","align","a","b","Date","format","sortOrder","columnKey","order","ellipsis","LogColumbPerTime","text","onFilter","record","indexOf","marginTop","backgroundColor","border","color","fontSize","fontWeight","height","fontFamily","x","y","paddingBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ReadJob, RealtimeData_Request, MSM_logdata_request } from '../../api'\r\nimport { DataSortTimeMSM, GetDateTime, ReportSort, LogDataMappingNameMSM, ConvertMonentToDateTime, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\r\nimport moment from 'moment';\r\nimport { MSMTable } from '../../DataRequest/DataModel';\r\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\r\nimport './home.css'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\n\r\nlet DTinitial = GetDateTime(0, 1)  // get from yesterday 00:00 to today 00:00\r\n\r\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton']\r\nlet RequestDateRange = [DTinitial[0], DTinitial[1]]\r\nlet responseSorted = []\r\n\r\nconst headers = [\r\n    { label: \"DateTime\", key: \"DateTime\" },\r\n    { label: \"Line50kg\", key: \"Line50kg\" },\r\n    { label: \"Line1kg\", key: \"Line1kg\" },\r\n    { label: \"Line2kg\", key: \"Line2kg\" },\r\n    { label: \"Line1Ton\", key: \"Line1Ton\" },\r\n\r\n];\r\n\r\n\r\nconst data = [\r\n    {\r\n        DateTime: '2022/5/20 00:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 00:00:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 00:00:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 00:00:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 00:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:00:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:00:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:00:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:00:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:30:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:50:00',\r\n        Line50: 65,\r\n        Line1: 43,\r\n        Line2: 65,\r\n        Line1T: 87,\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:10:00',\r\n        Line50: 453,\r\n        Line1: 65,\r\n        Line2: 90,\r\n        Line1T: 46,\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:20:00',\r\n        Line50: 543,\r\n        Line1: 87,\r\n        Line2: 765,\r\n        Line1T: 0,\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:40:00',\r\n        Line50: 32,\r\n        Line1: 45,\r\n        Line2: 64,\r\n        Line1T: 34,\r\n    },\r\n];\r\n\r\nconst data2 = [\r\n    {\r\n        DateTime: '2022/5/20 00:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '50 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 00:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '50 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 00:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '2 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 00:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 00:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Ton'\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '50 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '2 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Ton'\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:00:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/20 01:30:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '50 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/22 01:50:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Ton'\r\n    },\r\n    {\r\n        DateTime: '2022/5/21 01:10:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '50 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/24 01:20:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '2 Kg'\r\n    },\r\n    {\r\n        DateTime: '2022/5/23 01:40:00',\r\n        Id: 2,\r\n        Weight: 'TBA',\r\n        Location: 'MSMSGBULOH',\r\n        Label: '1 Kg'\r\n    },\r\n];\r\n\r\nconst Home = () => {\r\n\r\n    const { Title } = Typography\r\n    const { RangePicker } = DatePicker;\r\n    const { Option } = Select;\r\n\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n    const [sortedInfo2, setSortedInfo2] = useState({});\r\n\r\n    const DailyLogRequest = async () => {\r\n        let response = await MSM_logdata_request(RequestDataOption, RequestDateRange[0], RequestDateRange[1])\r\n        //  let responseSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        responseSorted = LogDataMappingNameMSM(MSMTable, DataSortTimeMSM(response))\r\n        console.log(responseSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n\r\n    }\r\n\r\n\r\n    const handleChangeOverall = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const handleChangePertime = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo2(sorter);\r\n    };\r\n\r\n    const ChangeDateRange = (value) => {\r\n        // console.log(RequestDateRange);\r\n        RequestDateRange = []\r\n        RequestDateRange = ConvertMonentToDateTime(value)\r\n        // console.log(RequestDateRange);\r\n    }\r\n\r\n    const ChangeOption = (value) => {\r\n        console.log(`selected ${value}`);\r\n        RequestDataOption = []\r\n        RequestDataOption.push(value)\r\n        // console.log(RequestDataOption);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // const interval = setInterval(() => {\r\n        //     RenderNewData()\r\n        // }, 3000)\r\n\r\n        return () => {\r\n            // clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '50 KG',\r\n            width: 40,\r\n            dataIndex: 'Line50',\r\n            key: 'Line50',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50 - b.Line50,\r\n            sortOrder: sortedInfo.columnKey === 'Line50' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 40,\r\n            dataIndex: 'Line1',\r\n            key: 'Line1',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1 - b.Line1,\r\n            sortOrder: sortedInfo.columnKey === 'Line1' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 40,\r\n            dataIndex: 'Line2',\r\n            key: 'Line2',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2 - b.Line2,\r\n            sortOrder: sortedInfo.columnKey === 'Line2' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 40,\r\n            dataIndex: 'Line1T',\r\n            key: 'Line1T',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1T - b.Line1T,\r\n            sortOrder: sortedInfo.columnKey === 'Line1T' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const LogColumbPerTime = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Id Unit',\r\n            width: 40,\r\n            dataIndex: 'Id',\r\n            key: 'Id',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Id - b.Id,\r\n            sortOrder: sortedInfo2.columnKey === 'Id' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Label',\r\n            width: 40,\r\n            dataIndex: 'Label',\r\n            key: 'Label',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: '50 Kg',\r\n                    value: '50 Kg',\r\n                },\r\n                {\r\n                    text: '1 Kg',\r\n                    value: '1 Kg',\r\n                },\r\n                {\r\n                    text: '2 Kg',\r\n                    value: '2 Kg',\r\n                },\r\n                {\r\n                    text: '1 Ton',\r\n                    value: '1 Ton',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Label.indexOf(value) === 0,\r\n        },\r\n        {\r\n            title: 'Weight',\r\n            width: 40,\r\n            dataIndex: 'Weight',\r\n            key: 'Weight',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Weight - b.Weight,\r\n            sortOrder: sortedInfo2.columnKey === 'Weight' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Location',\r\n            width: 40,\r\n            dataIndex: 'Location',\r\n            key: 'Location',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Location - b.Location,\r\n            sortOrder: sortedInfo2.columnKey === 'Location' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div >\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Card title={<h2>Total Production Capacity Counter</h2>}>\r\n                    <Row gutter={'3'} >\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 50 KG</h2>\r\n\r\n                                {/* <Title level={3}>Packaging Line 50 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 2 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 2 KG</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 TON</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 TON</Title> */}\r\n                                <Statistic\r\n                                    value={1128}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n                            <Title level={1} style={{ fontWeight: 'bold' }}> Total Capacity ({DateDisplay()})  </Title>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>50 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>2 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Ton</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={1128}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            prefix={<DashboardOutlined />}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Card style={{ backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                            <Title level={1} style={{ fontWeight: 'bold' }} > Daily Log  </Title>\r\n                            <Table columns={LogColumb} dataSource={data} bordered scroll={{ x: 600, y: 385 }} pagination={false} size=\"small\" onChange={handleChangeOverall} />\r\n                        </Card>\r\n\r\n\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n\r\n\r\n\r\n                <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                    <Title level={1} style={{ fontWeight: 'bold' }}> Counter Log  </Title>\r\n\r\n                    <div style={{ paddingBottom: '10px' }}>\r\n                        <RangePicker onChange={ChangeDateRange} />\r\n\r\n                        <Select defaultValue=\"Line50kg\" style={{ width: 100, marginLeft: '10px' }} onChange={ChangeOption}>\r\n                            <Option value=\"Line50kg\">Line50kg</Option>\r\n                            <Option value=\"Line1kg\">Line1kg</Option>\r\n                            <Option value=\"Line2kg\">Line2kg</Option>\r\n                            <Option value=\"Line1Ton\">Line1Ton</Option>\r\n                        </Select>\r\n\r\n                        <Button type='primary' style={{ marginLeft: '10px' }} >\r\n                            <CSVLink data={responseSorted} target=\"_blank\" filename={\"DataLog.csv\"} headers={headers}>\r\n                                Export\r\n                            </CSVLink>\r\n                        </Button>\r\n\r\n\r\n\r\n                        <Button type='primary' style={{ marginLeft: '10px' }} onClick={() => { DailyLogRequest() }}>Update</Button>\r\n                    </div>\r\n\r\n                    <Table bordered columns={LogColumbPerTime} dataSource={responseSorted} scroll={{ x: 600, y: 350 }} pagination={false} size=\"small\" onChange={handleChangePertime} />\r\n                </Card>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n             */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}