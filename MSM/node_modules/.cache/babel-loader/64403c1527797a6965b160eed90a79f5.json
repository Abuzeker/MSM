{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM Backup\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\PageLayout\\\\Sidebar\\\\Sidebar.jsx\";\nimport React, { Component } from 'react';\nimport { Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport menuList from '../../../config/menuConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubMenu = Menu.SubMenu;\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.Menucontents = menuList => {\n      const path = this.props.location.pathname;\n      return menuList.map(item => {\n        if (!item.children) {\n          return /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: item.icon,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item.key,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this);\n        } else {\n          if (item.children.find(citem => path.indexOf(citem.key) === 0)) {\n            this.openKey = item.key;\n          }\n\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            title: item.title,\n            icon: item.icon,\n            children: this.Menucontents(item.children)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this);\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    //run once when the component render at the first time\n    this.menucontent = this.Menucontents(menuList);\n  }\n\n  render() {\n    let path = this.props.location.pathname;\n    console.log(path);\n    const openKey = this.openKey;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-nav\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        mode: \"inline\",\n        defaultSelectedKeys: [path],\n        defaultOpenKeys: [openKey],\n        theme: \"dark\",\n        children: this.menucontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(LeftNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM Backup/MSM-Front/MSM/src/pages/PageLayout/Sidebar/Sidebar.jsx"],"names":["React","Component","Menu","Link","withRouter","menuList","SubMenu","LeftNav","Menucontents","path","props","location","pathname","map","item","children","icon","key","title","find","citem","indexOf","openKey","componentWillMount","menucontent","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;;AAGA,MAAMC,OAAO,GAAGJ,IAAI,CAACI,OAArB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAG9BO,YAH8B,GAGdH,QAAD,IAAc;AAE3B,YAAMI,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC;AAEA,aAAOP,QAAQ,CAACQ,GAAT,CAAaC,IAAI,IAAI;AAC1B,YAAI,CAACA,IAAI,CAACC,QAAV,EAAoB;AAClB,8BACE,QAAC,IAAD,CAAM,IAAN;AAA0B,YAAA,IAAI,EAAED,IAAI,CAACE,IAArC;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEF,IAAI,CAACG,GAAf;AAAA,wBACGH,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA;AADF,aAAgBJ,IAAI,CAACG,GAArB;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD,MAUK;AACH,cAAIH,IAAI,CAACC,QAAL,CAAcI,IAAd,CAAmBC,KAAK,IAAIX,IAAI,CAACY,OAAL,CAAaD,KAAK,CAACH,GAAnB,MAA4B,CAAxD,CAAJ,EAAgE;AAAE,iBAAKK,OAAL,GAAeR,IAAI,CAACG,GAApB;AAAyB;;AAC3F,8BACE,QAAC,OAAD;AAEE,YAAA,KAAK,EAAEH,IAAI,CAACI,KAFd;AAGE,YAAA,IAAI,EAAEJ,IAAI,CAACE,IAHb;AAAA,sBAKG,KAAKR,YAAL,CAAkBM,IAAI,CAACC,QAAvB;AALH,aACOD,IAAI,CAACG,GADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD;AACF,OAvBM,CAAP;AAwBD,KA/B6B;AAAA;;AAiC9BM,EAAAA,kBAAkB,GAAG;AAAE;AACrB,SAAKC,WAAL,GAAmB,KAAKhB,YAAL,CAAkBH,QAAlB,CAAnB;AACD;;AAIDoB,EAAAA,MAAM,GAAG;AACP,QAAIhB,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAA/B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA,UAAMa,OAAO,GAAG,KAAKA,OAArB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,mBAAmB,EAAE,CAACb,IAAD,CAFvB;AAGE,QAAA,eAAe,EAAE,CAACa,OAAD,CAHnB;AAIE,QAAA,KAAK,EAAC,MAJR;AAAA,kBAMG,KAAKE;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA3D6B;;AA8DhC,oBAAepB,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport { Menu } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport menuList from '../../../config/menuConfig'\r\n\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n  //read menuconfig file to render the menu html\r\n  Menucontents = (menuList) => {\r\n\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key} icon={item.icon}>\r\n            <Link to={item.key}>\r\n              {item.title}\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      }\r\n\r\n      else {\r\n        if (item.children.find(citem => path.indexOf(citem.key) === 0)) { this.openKey = item.key }\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={item.title}\r\n            icon={item.icon}\r\n          >\r\n            {this.Menucontents(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillMount() { //run once when the component render at the first time\r\n    this.menucontent = this.Menucontents(menuList)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let path = this.props.location.pathname\r\n    console.log(path)\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className='left-nav'>\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          theme='dark'\r\n        >\r\n          {this.menucontent}\r\n\r\n        </Menu>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(LeftNav)\r\n"]},"metadata":{},"sourceType":"module"}