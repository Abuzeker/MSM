{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _ = require(\"lodash\");\n/**\n * A formula error (e.g. #DIV/0!).\n */\n\n\nvar FormulaError = /*#__PURE__*/function () {\n  // /**\n  //  * Creates a new instance of Formula Error.\n  //  * @param {string} error - The error code.\n  //  */\n  function FormulaError(error) {\n    _classCallCheck(this, FormulaError);\n\n    this._error = error;\n  }\n  /**\n   * Get the error code.\n   * @returns {string} The error code.\n   */\n\n\n  _createClass(FormulaError, [{\n    key: \"error\",\n    value: function error() {\n      return this._error;\n    }\n  }]);\n\n  return FormulaError;\n}();\n/**\n * \\#DIV/0! error.\n * @type {FormulaError}\n */\n\n\nFormulaError.DIV0 = new FormulaError(\"#DIV/0!\");\n/**\n * \\#N/A error.\n * @type {FormulaError}\n */\n\nFormulaError.NA = new FormulaError(\"#N/A\");\n/**\n * \\#NAME? error.\n * @type {FormulaError}\n */\n\nFormulaError.NAME = new FormulaError(\"#NAME?\");\n/**\n * \\#NULL! error.\n * @type {FormulaError}\n */\n\nFormulaError.NULL = new FormulaError(\"#NULL!\");\n/**\n * \\#NUM! error.\n * @type {FormulaError}\n */\n\nFormulaError.NUM = new FormulaError(\"#NUM!\");\n/**\n * \\#REF! error.\n * @type {FormulaError}\n */\n\nFormulaError.REF = new FormulaError(\"#REF!\");\n/**\n * \\#VALUE! error.\n * @type {FormulaError}\n */\n\nFormulaError.VALUE = new FormulaError(\"#VALUE!\");\n/**\n * Get the matching FormulaError object.\n * @param {string} error - The error code.\n * @returns {FormulaError} The matching FormulaError or a new object if no match.\n * @ignore\n */\n\nFormulaError.getError = function (error) {\n  return _.find(FormulaError, function (value) {\n    return value instanceof FormulaError && value.error() === error;\n  }) || new FormulaError(error);\n};\n\nmodule.exports = FormulaError;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/xlsx-populate/lib/FormulaError.js"],"names":["_","require","FormulaError","error","_error","DIV0","NA","NAME","NULL","NUM","REF","VALUE","getError","find","value","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;AACA;AACA;;;IACMC,Y;AACF;AACA;AACA;AACA;AACA,wBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKC,MAAL,GAAcD,KAAd;AACH;AAED;AACJ;AACA;AACA;;;;;WACI,iBAAQ;AACJ,aAAO,KAAKC,MAAZ;AACH;;;;;AAGL;AACA;AACA;AACA;;;AACAF,YAAY,CAACG,IAAb,GAAoB,IAAIH,YAAJ,CAAiB,SAAjB,CAApB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACI,EAAb,GAAkB,IAAIJ,YAAJ,CAAiB,MAAjB,CAAlB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACK,IAAb,GAAoB,IAAIL,YAAJ,CAAiB,QAAjB,CAApB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACM,IAAb,GAAoB,IAAIN,YAAJ,CAAiB,QAAjB,CAApB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACO,GAAb,GAAmB,IAAIP,YAAJ,CAAiB,OAAjB,CAAnB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACQ,GAAb,GAAmB,IAAIR,YAAJ,CAAiB,OAAjB,CAAnB;AAEA;AACA;AACA;AACA;;AACAA,YAAY,CAACS,KAAb,GAAqB,IAAIT,YAAJ,CAAiB,SAAjB,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,YAAY,CAACU,QAAb,GAAwB,UAAAT,KAAK,EAAI;AAC7B,SAAOH,CAAC,CAACa,IAAF,CAAOX,YAAP,EAAqB,UAAAY,KAAK,EAAI;AACjC,WAAOA,KAAK,YAAYZ,YAAjB,IAAiCY,KAAK,CAACX,KAAN,OAAkBA,KAA1D;AACH,GAFM,KAED,IAAID,YAAJ,CAAiBC,KAAjB,CAFN;AAGH,CAJD;;AAMAY,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * A formula error (e.g. #DIV/0!).\n */\nclass FormulaError {\n    // /**\n    //  * Creates a new instance of Formula Error.\n    //  * @param {string} error - The error code.\n    //  */\n    constructor(error) {\n        this._error = error;\n    }\n\n    /**\n     * Get the error code.\n     * @returns {string} The error code.\n     */\n    error() {\n        return this._error;\n    }\n}\n\n/**\n * \\#DIV/0! error.\n * @type {FormulaError}\n */\nFormulaError.DIV0 = new FormulaError(\"#DIV/0!\");\n\n/**\n * \\#N/A error.\n * @type {FormulaError}\n */\nFormulaError.NA = new FormulaError(\"#N/A\");\n\n/**\n * \\#NAME? error.\n * @type {FormulaError}\n */\nFormulaError.NAME = new FormulaError(\"#NAME?\");\n\n/**\n * \\#NULL! error.\n * @type {FormulaError}\n */\nFormulaError.NULL = new FormulaError(\"#NULL!\");\n\n/**\n * \\#NUM! error.\n * @type {FormulaError}\n */\nFormulaError.NUM = new FormulaError(\"#NUM!\");\n\n/**\n * \\#REF! error.\n * @type {FormulaError}\n */\nFormulaError.REF = new FormulaError(\"#REF!\");\n\n/**\n * \\#VALUE! error.\n * @type {FormulaError}\n */\nFormulaError.VALUE = new FormulaError(\"#VALUE!\");\n\n/**\n * Get the matching FormulaError object.\n * @param {string} error - The error code.\n * @returns {FormulaError} The matching FormulaError or a new object if no match.\n * @ignore\n */\nFormulaError.getError = error => {\n    return _.find(FormulaError, value => {\n        return value instanceof FormulaError && value.error() === error;\n    }) || new FormulaError(error);\n};\n\nmodule.exports = FormulaError;\n"]},"metadata":{},"sourceType":"script"}