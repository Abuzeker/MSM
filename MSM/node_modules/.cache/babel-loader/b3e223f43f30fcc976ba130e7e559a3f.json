{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar allowedProperties = {\n  title: \"dc:title\",\n  subject: \"dc:subject\",\n  author: \"dc:creator\",\n  creator: \"dc:creator\",\n  description: \"dc:description\",\n  keywords: \"cp:keywords\",\n  category: \"cp:category\"\n};\n/**\n * Core properties\n * @ignore\n */\n\nvar CoreProperties = /*#__PURE__*/function () {\n  function CoreProperties(node) {\n    _classCallCheck(this, CoreProperties);\n\n    this._node = node;\n    this._properties = {};\n  }\n  /**\n   * Sets a specific property.\n   * @param {string} name - The name of the property.\n   * @param {*} value - The value of the property.\n   * @returns {CoreProperties} CoreProperties.\n   */\n\n\n  _createClass(CoreProperties, [{\n    key: \"set\",\n    value: function set(name, value) {\n      var key = name.toLowerCase();\n\n      if (typeof allowedProperties[key] === \"undefined\") {\n        throw new Error(\"Unknown property name: \\\"\".concat(name, \"\\\"\"));\n      }\n\n      this._properties[key] = value;\n      return this;\n    }\n    /**\n     * Get a specific property.\n     * @param {string} name - The name of the property.\n     * @returns {*} The property value.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var key = name.toLowerCase();\n\n      if (typeof allowedProperties[key] === \"undefined\") {\n        throw new Error(\"Unknown property name: \\\"\".concat(name, \"\\\"\"));\n      }\n\n      return this._properties[key];\n    }\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML.\n     */\n\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      for (var key in this._properties) {\n        if (!this._properties.hasOwnProperty(key)) continue;\n\n        this._node.children.push({\n          name: allowedProperties[key],\n          children: [this._properties[key]]\n        });\n      }\n\n      return this._node;\n    }\n  }]);\n\n  return CoreProperties;\n}();\n\nmodule.exports = CoreProperties;\n/*\ndocProps/core.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<dc:title>Title</dc:title>\n<dc:subject>Subject</dc:subject>\n<dc:creator>Creator</dc:creator>\n<cp:keywords>Keywords</cp:keywords>\n<dc:description>Description</dc:description>\n<cp:category>Category</cp:category>\n</cp:coreProperties>\n */","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/xlsx-populate/lib/CoreProperties.js"],"names":["allowedProperties","title","subject","author","creator","description","keywords","category","CoreProperties","node","_node","_properties","name","value","key","toLowerCase","Error","hasOwnProperty","children","push","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,UADe;AAEtBC,EAAAA,OAAO,EAAE,YAFa;AAGtBC,EAAAA,MAAM,EAAE,YAHc;AAItBC,EAAAA,OAAO,EAAE,YAJa;AAKtBC,EAAAA,WAAW,EAAE,gBALS;AAMtBC,EAAAA,QAAQ,EAAE,aANY;AAOtBC,EAAAA,QAAQ,EAAE;AAPY,CAA1B;AAUA;AACA;AACA;AACA;;IACMC,c;AACF,0BAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,WAAL,GAAmB,EAAnB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,aAAIC,IAAJ,EAAUC,KAAV,EAAiB;AACb,UAAMC,GAAG,GAAGF,IAAI,CAACG,WAAL,EAAZ;;AAEA,UAAI,OAAOf,iBAAiB,CAACc,GAAD,CAAxB,KAAkC,WAAtC,EAAmD;AAC/C,cAAM,IAAIE,KAAJ,oCAAqCJ,IAArC,QAAN;AACH;;AAED,WAAKD,WAAL,CAAiBG,GAAjB,IAAwBD,KAAxB;AAEA,aAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,aAAID,IAAJ,EAAU;AACN,UAAME,GAAG,GAAGF,IAAI,CAACG,WAAL,EAAZ;;AAEA,UAAI,OAAOf,iBAAiB,CAACc,GAAD,CAAxB,KAAkC,WAAtC,EAAmD;AAC/C,cAAM,IAAIE,KAAJ,oCAAqCJ,IAArC,QAAN;AACH;;AAED,aAAO,KAAKD,WAAL,CAAiBG,GAAjB,CAAP;AACH;AAED;AACJ;AACA;AACA;;;;WACI,iBAAQ;AACJ,WAAK,IAAMA,GAAX,IAAkB,KAAKH,WAAvB,EAAoC;AAChC,YAAI,CAAC,KAAKA,WAAL,CAAiBM,cAAjB,CAAgCH,GAAhC,CAAL,EAA2C;;AAC3C,aAAKJ,KAAL,CAAWQ,QAAX,CAAoBC,IAApB,CAAyB;AACrBP,UAAAA,IAAI,EAAEZ,iBAAiB,CAACc,GAAD,CADF;AAErBI,UAAAA,QAAQ,EAAE,CAAC,KAAKP,WAAL,CAAiBG,GAAjB,CAAD;AAFW,SAAzB;AAIH;;AAED,aAAO,KAAKJ,KAAZ;AACH;;;;;;AAGLU,MAAM,CAACC,OAAP,GAAiBb,cAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\"use strict\";\n\nconst allowedProperties = {\n    title: \"dc:title\",\n    subject: \"dc:subject\",\n    author: \"dc:creator\",\n    creator: \"dc:creator\",\n    description: \"dc:description\",\n    keywords: \"cp:keywords\",\n    category: \"cp:category\"\n};\n\n/**\n * Core properties\n * @ignore\n */\nclass CoreProperties {\n    constructor(node) {\n        this._node = node;\n        this._properties = {};\n    }\n\n    /**\n     * Sets a specific property.\n     * @param {string} name - The name of the property.\n     * @param {*} value - The value of the property.\n     * @returns {CoreProperties} CoreProperties.\n     */\n    set(name, value) {\n        const key = name.toLowerCase();\n\n        if (typeof allowedProperties[key] === \"undefined\") {\n            throw new Error(`Unknown property name: \"${name}\"`);\n        }\n\n        this._properties[key] = value;\n\n        return this;\n    }\n\n    /**\n     * Get a specific property.\n     * @param {string} name - The name of the property.\n     * @returns {*} The property value.\n     */\n    get(name) {\n        const key = name.toLowerCase();\n\n        if (typeof allowedProperties[key] === \"undefined\") {\n            throw new Error(`Unknown property name: \"${name}\"`);\n        }\n\n        return this._properties[key];\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML.\n     */\n    toXml() {\n        for (const key in this._properties) {\n            if (!this._properties.hasOwnProperty(key)) continue;\n            this._node.children.push({\n                name: allowedProperties[key],\n                children: [this._properties[key]]\n            });\n        }\n\n        return this._node;\n    }\n}\n\nmodule.exports = CoreProperties;\n\n/*\ndocProps/core.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<dc:title>Title</dc:title>\n<dc:subject>Subject</dc:subject>\n<dc:creator>Creator</dc:creator>\n<cp:keywords>Keywords</cp:keywords>\n<dc:description>Description</dc:description>\n<cp:category>Category</cp:category>\n</cp:coreProperties>\n */\n"]},"metadata":{},"sourceType":"script"}