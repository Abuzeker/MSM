{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\TestPage\\\\Testpage1.jsx\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\nimport { Button, Table } from 'antd';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataSource = [{\n  key: '1',\n  name: '胡彦斌',\n  age: 32,\n  address: '西湖区湖底公园1号'\n}, {\n  key: '2',\n  name: '胡彦祖',\n  age: 42,\n  address: '西湖区湖底公园1号'\n}];\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: '住址',\n  dataIndex: 'address',\n  key: 'address'\n}];\n\nconst Testpage1 = () => {\n  const convertCanvas = () => {\n    const input = document.getElementById(\"capture\");\n    html2canvas(input, {\n      scale: 0.5\n    }).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/jpeg\");\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        type: 'a4'\n      }); //const imgProps = pdf.getImageProperties(imgData);\n\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = pdf.internal.pageSize.getHeight();\n      pdf.addImage(imgData, 'JPEG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save('download.pdf');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: convertCanvas,\n      children: \"capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"capture\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: dataSource,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Testpage1;\nexport default Testpage1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage1\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/TestPage/Testpage1.jsx"],"names":["React","Page","Text","View","Document","StyleSheet","ReactPDF","PDFDownloadLink","Button","Table","html2canvas","jsPDF","dataSource","key","name","age","address","columns","title","dataIndex","Testpage1","convertCanvas","input","document","getElementById","scale","then","canvas","imgData","toDataURL","pdf","orientation","type","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","addImage","save"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,eAA3D,QAAkF,qBAAlF;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADe,EAOf;AACIH,EAAAA,GAAG,EAAE,GADT;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,GAAG,EAAE,EAHT;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPe,CAAnB;AAeA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIN,EAAAA,GAAG,EAAE;AAHT,CADY,EAMZ;AACIK,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,SAAS,EAAE,KAFf;AAGIN,EAAAA,GAAG,EAAE;AAHT,CANY,EAWZ;AACIK,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,SAAS,EAAE,SAFf;AAGIN,EAAAA,GAAG,EAAE;AAHT,CAXY,CAAhB;;AAkBA,MAAMO,SAAS,GAAG,MAAM;AAEpB,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AAEAd,IAAAA,WAAW,CAACY,KAAD,EAAQ;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAR,CAAX,CACKC,IADL,CACWC,MAAD,IAAY;AACd,YAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,YAAjB,CAAhB;AACA,YAAMC,GAAG,GAAG,IAAInB,KAAJ,CAAU;AAClBoB,QAAAA,WAAW,EAAE,WADK;AAElBC,QAAAA,IAAI,EAAE;AAFY,OAAV,CAAZ,CAFc,CAMd;;AACA,YAAMC,QAAQ,GAAGH,GAAG,CAACI,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAjB;AACA,YAAMC,SAAS,GAAGP,GAAG,CAACI,QAAJ,CAAaC,QAAb,CAAsBG,SAAtB,EAAlB;AACAR,MAAAA,GAAG,CAACS,QAAJ,CAAaX,OAAb,EAAsB,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCK,QAApC,EAA8CI,SAA9C;AACAP,MAAAA,GAAG,CAACU,IAAJ,CAAS,cAAT;AACH,KAZL;AAaH,GAhBD;;AAmBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEnB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,UAAU,EAAET,UAAnB;AAA+B,QAAA,OAAO,EAAEK;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjCD;;KAAMG,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Button, Table } from 'antd';\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\n\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: '胡彦斌',\r\n        age: 32,\r\n        address: '西湖区湖底公园1号',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: '胡彦祖',\r\n        age: 42,\r\n        address: '西湖区湖底公园1号',\r\n    },\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '年龄',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: '住址',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n];\r\n\r\nconst Testpage1 = () => {\r\n\r\n    const convertCanvas = () => {\r\n        const input = document.getElementById(\"capture\");\r\n\r\n        html2canvas(input, { scale: 0.5 })\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL(\"image/jpeg\");\r\n                const pdf = new jsPDF({\r\n                    orientation: 'landscape',\r\n                    type: 'a4'\r\n                });\r\n                //const imgProps = pdf.getImageProperties(imgData);\r\n                const pdfWidth = pdf.internal.pageSize.getWidth();\r\n                const pdfHeight = pdf.internal.pageSize.getHeight();\r\n                pdf.addImage(imgData, 'JPEG', 0, 0, pdfWidth, pdfHeight);\r\n                pdf.save('download.pdf');\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={convertCanvas}>\r\n                capture\r\n            </Button>\r\n\r\n            <div id='capture'>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testpage1\r\n"]},"metadata":{},"sourceType":"module"}