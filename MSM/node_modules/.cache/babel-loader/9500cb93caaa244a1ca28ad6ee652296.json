{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Report\\\\ReportGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport { Line } from '@antv/g2plot';\nimport { Button, Col, DatePicker, PageHeader, Row, Statistic, Table, Descriptions, Badge, Card } from 'antd';\nimport React, { useEffect } from 'react';\nimport { ExportExcelWorkBook, SetDateRange } from '../../DataRequest/LogDataRequestWrap';\nimport { GeneratePDFG2, NameColumbPDF } from '../../utils/PdfGenerate';\nimport './NameTableWrapper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet line;\n\nconst ReportGraph = props => {\n  _s();\n\n  // const SetTimeRange = (value) => {\n  //     const DateRange = SetDateRange(value)\n  //     props.SetTimeRangeCallBack([], DateRange[0], DateRange[1], 'Polymerlink', props.site, props.page, props.BufferName, props.Model)\n  // }\n  // const generatePDF = () => {\n  //     let headers = NameColumbPDF(props.Model)\n  //     GeneratePDFG2(headers, props.LogValue, props.JobInfo)\n  // }\n  useEffect(() => {\n    line = new Line('ReportAnalysis', {\n      data: props.RunningStep,\n      xField: 'Time',\n      yField: 'Feeder Speed',\n      seriesField: 'Parameter',\n      xAxis: {\n        range: [0, 1]\n      }\n    });\n    line.render();\n    return () => {\n      line.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Descriptions, {\n      bordered: true,\n      size: \"big\",\n      column: 3,\n      style: {\n        background: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Job Period\",\n        children: props.ReportAnalysis.TotalPeriod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Expected Production Rate (Kg/Hour)\",\n        children: props.ReportAnalysis.ExpectedRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Estimate Product (Kg)\",\n        children: props.ReportAnalysis.ExpectedProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Running Period\",\n        children: props.ReportAnalysis.RunPeriod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Actual Production Rate (Kg/Hour)\",\n        children: props.ReportAnalysis.ActualRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: \"Actual Product (Kg)\",\n        children: props.ReportAnalysis.ActualProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: 'Timing Graph C3',\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        backgroundColor: '#ffffff',\n        marginTop: '15px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ReportAnalysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReportGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ReportGraph;\nexport default ReportGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportGraph\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Report/ReportGraph.jsx"],"names":["Line","Button","Col","DatePicker","PageHeader","Row","Statistic","Table","Descriptions","Badge","Card","React","useEffect","ExportExcelWorkBook","SetDateRange","GeneratePDFG2","NameColumbPDF","line","ReportGraph","props","data","RunningStep","xField","yField","seriesField","xAxis","range","render","destroy","paddingTop","background","ReportAnalysis","TotalPeriod","ExpectedRate","ExpectedProduct","RunPeriod","ActualRate","ActualProduct","width","borderRadius","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import { Line } from '@antv/g2plot';\r\nimport { Button, Col, DatePicker, PageHeader, Row, Statistic, Table, Descriptions, Badge, Card } from 'antd';\r\nimport React, { useEffect } from 'react'\r\nimport { ExportExcelWorkBook, SetDateRange } from '../../DataRequest/LogDataRequestWrap';\r\nimport { GeneratePDFG2, NameColumbPDF } from '../../utils/PdfGenerate';\r\nimport './NameTableWrapper.css';\r\n\r\nlet line\r\n\r\n\r\nconst ReportGraph = (props) => {\r\n\r\n\r\n    // const SetTimeRange = (value) => {\r\n    //     const DateRange = SetDateRange(value)\r\n    //     props.SetTimeRangeCallBack([], DateRange[0], DateRange[1], 'Polymerlink', props.site, props.page, props.BufferName, props.Model)\r\n    // }\r\n\r\n    // const generatePDF = () => {\r\n    //     let headers = NameColumbPDF(props.Model)\r\n    //     GeneratePDFG2(headers, props.LogValue, props.JobInfo)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        line = new Line('ReportAnalysis', {\r\n            data: props.RunningStep,\r\n            xField: 'Time',\r\n            yField: 'Feeder Speed',\r\n            seriesField: 'Parameter',\r\n            xAxis: {\r\n                range: [0, 1],\r\n            },\r\n        })\r\n        line.render()\r\n        return () => {\r\n            line.destroy();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ paddingTop: '20px' }}>\r\n            <Descriptions\r\n                bordered\r\n                size='big'\r\n                column={3}\r\n                style={{ background: 'white' }}\r\n            >\r\n                {/* <Descriptions.Item label=\"Job No.\">Cloud Database</Descriptions.Item> */}\r\n                <Descriptions.Item label=\"Job Period\">{props.ReportAnalysis.TotalPeriod}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Expected Production Rate (Kg/Hour)\" >{props.ReportAnalysis.ExpectedRate}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Estimate Product (Kg)\">{props.ReportAnalysis.ExpectedProduct}</Descriptions.Item>\r\n\r\n                <Descriptions.Item label=\"Running Period\">{props.ReportAnalysis.RunPeriod}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Actual Production Rate (Kg/Hour)\" >{props.ReportAnalysis.ActualRate}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Actual Product (Kg)\">{props.ReportAnalysis.ActualProduct}</Descriptions.Item>\r\n\r\n            </Descriptions>\r\n\r\n\r\n            <Card title={'Timing Graph C3'} bordered={true} style={{\r\n                width: '100%', borderRadius: 15,\r\n                backgroundColor: '#ffffff', marginTop: '15px'\r\n            }} hoverable={true}>\r\n                <div id='ReportAnalysis'></div>\r\n            </Card>\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ReportGraph\r\n"]},"metadata":{},"sourceType":"module"}