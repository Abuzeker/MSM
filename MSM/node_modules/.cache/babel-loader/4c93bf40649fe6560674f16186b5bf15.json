{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{DeleteJob,logdata_request,ReadJob,WriteJob}from'../../api';import{DataSortTime,LogDataMappingTime,TableColumbTimeAsRow,TableColumbLabelAsRow,LogDataMappingName,ReportSort,TableColumbJob,SortToArrayExcel,ExportExcelWorkBook}from'../../DataRequest/LogDataRequestWrap';import{C3Model,G2Model,JobModel}from'../../DataRequest/DataModel';import TimeTableWrapper from'../Report/TimeTableWrapper';import NameTableWrapper from'../Report/NameTableWrapper';import ReportWrapper from'../Report/ReportWrapper';import{Button,message}from'antd';import ReportListWrapper from'../Report/ReportListWrapper';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LogValue={\"LogC3\":[],\"LogG2\":[]};var ReportList={\"C3ReportList\":[],\"G2ReportList\":[]};var JobDetailRecord={datetimeStart:'',datetimeEnd:'',site:'',line:'',BufferName:''};var Cell=[\"A2\",\"E2\",\"I2\",\"K2\",\"O2\"];var ReportInfoG2={};var ReportInfoC3={};var BlankPage;var ColumbC3=TableColumbLabelAsRow(C3Model);var Line1Report=function Line1Report(){var _useState=useState({count:0}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var JobDeleteHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(jobnumber,line,page){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return DeleteJob(jobnumber['Job No'],line,page);case 2:response=_context.sent;if(response.success===true){message.success(\"Job \".concat(jobnumber['Job No'],\" Deleted\"));RequestJob([],JobDetailRecord.datetimeStart,JobDetailRecord.datetimeEnd,JobDetailRecord.site,JobDetailRecord.line,JobDetailRecord.BufferName);}else{message.error(\"Unable to Delete Job \".concat(jobnumber['Job No']));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function JobDeleteHandler(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var DataRequestC3=function DataRequestC3(row){var TimeRange=[];TimeRange[0]=moment(row['Start Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";TimeRange[1]=moment(row['End Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";ReportInfoC3.Info1=row['Job No'];ReportInfoC3.Info2=row['Start Time'];ReportInfoC3.Info3=row['End Time'];ReportInfoC3.Info4=row['Color'];ReportInfoC3.Info5=row['Grade'];UpdateTableData([],TimeRange[0],TimeRange[1],'Polymerlink','C3','1','LogC3',C3Model);};var ColumbJobC3=TableColumbJob(JobModel,DataRequestC3,JobDeleteHandler,'C3','1','View','Delete');var DataRequestG2=function DataRequestG2(row){// console.log(row)\nvar TimeRange=[];TimeRange[0]=moment(row['Start Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";TimeRange[1]=moment(row['End Time'],\"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0]+\"Z\";ReportInfoG2.Info1=row['Job No'];ReportInfoG2.Info2=row['Start Time'];ReportInfoG2.Info3=row['End Time'];ReportInfoG2.Info4=row['Color'];ReportInfoG2.Info5=row['Grade'];console.log(ReportInfoG2);UpdateTableData([],TimeRange[0],TimeRange[1],'Polymerlink','G2',BlankPage,'LogG2',G2Model);};var ColumbJobG2=TableColumbJob(JobModel,DataRequestG2,JobDeleteHandler,'G2',BlankPage,'View','Delete');var UpdateTableData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Parameter,StartTime,EndTime,Site,Line,Page,BufferName,Model){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return logdata_request(Parameter,StartTime,EndTime,Site,Line,Page);case 2:response=_context2.sent;data=DataSortTime(response);// console.log(data);\nLogValue[BufferName]=LogDataMappingName(Model,data);setState(function(_ref3){var count=_ref3.count;return{count:count+1};});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function UpdateTableData(_x4,_x5,_x6,_x7,_x8,_x9,_x10,_x11){return _ref2.apply(this,arguments);};}();var CreateJob=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(info,datetimeStart,datetimeEnd,site,line){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return WriteJob(info,datetimeStart,datetimeEnd,site,line);case 2:response=_context3.sent;if(response.success===true){message.success('Create Success !');}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function CreateJob(_x12,_x13,_x14,_x15,_x16){return _ref4.apply(this,arguments);};}();var RequestJob=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(info,datetimeStart,datetimeEnd,site,line,BufferName){var response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:JobDetailRecord.datetimeStart=datetimeStart;JobDetailRecord.datetimeEnd=datetimeEnd;JobDetailRecord.site=site;JobDetailRecord.line=line;JobDetailRecord.BufferName=BufferName;_context4.next=7;return ReadJob(info,datetimeStart,datetimeEnd,site,line);case 7:response=_context4.sent;data=ReportSort(response);ReportList[BufferName]=data;//console.log(data);\nsetState(function(_ref6){var count=_ref6.count;return{count:count+1};});case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function RequestJob(_x17,_x18,_x19,_x20,_x21,_x22){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ReportWrapper,{CreateJobCallBack:CreateJob,site:'Polymerlink',line:'C3'}),/*#__PURE__*/_jsx(ReportListWrapper,{ReportListCallBack:RequestJob,site:'Polymerlink',line:'C3',ReportList:ReportList['C3ReportList'],Columb:ColumbJobC3,BufferName:\"C3ReportList\"}),/*#__PURE__*/_jsx(NameTableWrapper,{SetTimeRangeCallBack:UpdateTableData,LogValue:LogValue['LogC3'],Columb:ColumbC3,site:'C3',page:'1',BufferName:\"LogC3\",Model:C3Model,JobInfo:ReportInfoC3,FileName:'ExtruderSheet.xlsx',startingColumb:'A',startingRow:7,EndingColumb:'R',EndingRow:7,Cell:Cell})]});};export default Line1Report;","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1ReportC3.jsx"],"names":["React","useState","useEffect","DeleteJob","logdata_request","ReadJob","WriteJob","DataSortTime","LogDataMappingTime","TableColumbTimeAsRow","TableColumbLabelAsRow","LogDataMappingName","ReportSort","TableColumbJob","SortToArrayExcel","ExportExcelWorkBook","C3Model","G2Model","JobModel","TimeTableWrapper","NameTableWrapper","ReportWrapper","Button","message","ReportListWrapper","moment","LogValue","ReportList","JobDetailRecord","datetimeStart","datetimeEnd","site","line","BufferName","Cell","ReportInfoG2","ReportInfoC3","BlankPage","ColumbC3","Line1Report","count","state","setState","JobDeleteHandler","jobnumber","page","response","success","RequestJob","error","DataRequestC3","row","TimeRange","toISOString","split","Info1","Info2","Info3","Info4","Info5","UpdateTableData","ColumbJobC3","DataRequestG2","console","log","ColumbJobG2","Parameter","StartTime","EndTime","Site","Line","Page","Model","data","CreateJob","info"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,eAApB,CAAqCC,OAArC,CAA8CC,QAA9C,KAA8D,WAA9D,CACA,OAASC,YAAT,CAAuBC,kBAAvB,CAA2CC,oBAA3C,CAAiEC,qBAAjE,CAAwFC,kBAAxF,CAA4GC,UAA5G,CAAwHC,cAAxH,CAAwIC,gBAAxI,CAA0JC,mBAA1J,KAAqL,sCAArL,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,QAA3B,KAA2C,6BAA3C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,MAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,6BAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,wFAGA,GAAIC,CAAAA,QAAQ,CAAG,CACX,QAAS,EADE,CAEX,QAAS,EAFE,CAAf,CAKA,GAAIC,CAAAA,UAAU,CAAG,CACb,eAAgB,EADH,CAEb,eAAgB,EAFH,CAAjB,CAKA,GAAIC,CAAAA,eAAe,CAAG,CAClBC,aAAa,CAAE,EADG,CAElBC,WAAW,CAAE,EAFK,CAGlBC,IAAI,CAAE,EAHY,CAIlBC,IAAI,CAAE,EAJY,CAKlBC,UAAU,CAAE,EALM,CAAtB,CAQA,GAAIC,CAAAA,IAAI,CAAG,CAAC,IAAD,CAAM,IAAN,CAAW,IAAX,CAAgB,IAAhB,CAAqB,IAArB,CAAX,CAGA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAGA,GAAIC,CAAAA,SAAJ,CAEA,GAAMC,CAAAA,QAAQ,CAAG5B,qBAAqB,CAACM,OAAD,CAAtC,CAEA,GAAMuB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAEtB,cAA0BtC,QAAQ,CAAC,CAAEuC,KAAK,CAAE,CAAT,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAQC,SAAR,CAAmBZ,IAAnB,CAAyBa,IAAzB,qJACE1C,CAAAA,SAAS,CAAEyC,SAAS,CAAC,QAAD,CAAX,CAAuBZ,IAAvB,CAA6Ba,IAA7B,CADX,QACfC,QADe,eAGrB,GAAIA,QAAQ,CAACC,OAAT,GAAqB,IAAzB,CAA+B,CAC3BxB,OAAO,CAACwB,OAAR,eAAuBH,SAAS,CAAC,QAAD,CAAhC,cACAI,UAAU,CAAC,EAAD,CAAKpB,eAAe,CAACC,aAArB,CAAoCD,eAAe,CAACE,WAApD,CACNF,eAAe,CAACG,IADV,CACgBH,eAAe,CAACI,IADhC,CACsCJ,eAAe,CAACK,UADtD,CAAV,CAEH,CAJD,IAMK,CACDV,OAAO,CAAC0B,KAAR,gCAAsCL,SAAS,CAAC,QAAD,CAA/C,GACH,CAXoB,sDAAH,kBAAhBD,CAAAA,gBAAgB,oDAAtB,CAeA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAS,CAE3B,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEAA,SAAS,CAAC,CAAD,CAAT,CAAgB3B,MAAM,CAAC0B,GAAG,CAAC,YAAD,CAAJ,CAAoB,qBAApB,CAAN,CAAiDE,WAAjD,CAA6D,KAA7D,EAAoEC,KAApE,CAA0E,GAA1E,EAA+E,CAA/E,EAAoF,GAApG,CACAF,SAAS,CAAC,CAAD,CAAT,CAAgB3B,MAAM,CAAC0B,GAAG,CAAC,UAAD,CAAJ,CAAkB,qBAAlB,CAAP,CAAiDE,WAAjD,CAA6D,KAA7D,EAAoEC,KAApE,CAA0E,GAA1E,EAA+E,CAA/E,EAAoF,GAAnG,CAEAlB,YAAY,CAACmB,KAAb,CAAqBJ,GAAG,CAAC,QAAD,CAAxB,CACAf,YAAY,CAACoB,KAAb,CAAqBL,GAAG,CAAC,YAAD,CAAxB,CACAf,YAAY,CAACqB,KAAb,CAAqBN,GAAG,CAAC,UAAD,CAAxB,CACAf,YAAY,CAACsB,KAAb,CAAqBP,GAAG,CAAC,OAAD,CAAxB,CACAf,YAAY,CAACuB,KAAb,CAAqBR,GAAG,CAAC,OAAD,CAAxB,CACAS,eAAe,CAAC,EAAD,CAAKR,SAAS,CAAC,CAAD,CAAd,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAiC,aAAjC,CAAgD,IAAhD,CAAsD,GAAtD,CAA2D,OAA3D,CAAoEpC,OAApE,CAAf,CAEH,CAdD,CAeA,GAAM6C,CAAAA,WAAW,CAAGhD,cAAc,CAACK,QAAD,CAAWgC,aAAX,CAA0BP,gBAA1B,CAA4C,IAA5C,CAAkD,GAAlD,CAAsD,MAAtD,CAA8D,QAA9D,CAAlC,CAEA,GAAMmB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,GAAD,CAAS,CAE3B;AAEA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEAA,SAAS,CAAC,CAAD,CAAT,CAAgB3B,MAAM,CAAC0B,GAAG,CAAC,YAAD,CAAJ,CAAoB,qBAApB,CAAN,CAAiDE,WAAjD,CAA6D,KAA7D,EAAoEC,KAApE,CAA0E,GAA1E,EAA+E,CAA/E,EAAoF,GAApG,CACAF,SAAS,CAAC,CAAD,CAAT,CAAgB3B,MAAM,CAAC0B,GAAG,CAAC,UAAD,CAAJ,CAAkB,qBAAlB,CAAP,CAAiDE,WAAjD,CAA6D,KAA7D,EAAoEC,KAApE,CAA0E,GAA1E,EAA+E,CAA/E,EAAoF,GAAnG,CAEAnB,YAAY,CAACoB,KAAb,CAAqBJ,GAAG,CAAC,QAAD,CAAxB,CACAhB,YAAY,CAACqB,KAAb,CAAqBL,GAAG,CAAC,YAAD,CAAxB,CACAhB,YAAY,CAACsB,KAAb,CAAqBN,GAAG,CAAC,UAAD,CAAxB,CACAhB,YAAY,CAACuB,KAAb,CAAqBP,GAAG,CAAC,OAAD,CAAxB,CACAhB,YAAY,CAACwB,KAAb,CAAqBR,GAAG,CAAC,OAAD,CAAxB,CAEAY,OAAO,CAACC,GAAR,CAAY7B,YAAZ,EAGAyB,eAAe,CAAC,EAAD,CAAKR,SAAS,CAAC,CAAD,CAAd,CAAmBA,SAAS,CAAC,CAAD,CAA5B,CAAiC,aAAjC,CAAgD,IAAhD,CAAsDf,SAAtD,CAAiE,OAAjE,CAA0EpB,OAA1E,CAAf,CACH,CAnBD,CAoBA,GAAMgD,CAAAA,WAAW,CAAGpD,cAAc,CAACK,QAAD,CAAW4C,aAAX,CAA0BnB,gBAA1B,CAA4C,IAA5C,CAAkDN,SAAlD,CAA6D,MAA7D,CAAqE,QAArE,CAAlC,CAEA,GAAMuB,CAAAA,eAAe,2FAAG,kBAAOM,SAAP,CAAkBC,SAAlB,CAA6BC,OAA7B,CAAsCC,IAAtC,CAA4CC,IAA5C,CAAkDC,IAAlD,CAAwDtC,UAAxD,CAAoEuC,KAApE,+JACGpE,CAAAA,eAAe,CAAC8D,SAAD,CAAYC,SAAZ,CAAuBC,OAAvB,CAAgCC,IAAhC,CAAsCC,IAAtC,CAA4CC,IAA5C,CADlB,QACdzB,QADc,gBAEhB2B,IAFgB,CAETlE,YAAY,CAACuC,QAAD,CAFH,CAGpB;AAEApB,QAAQ,CAACO,UAAD,CAAR,CAAuBtB,kBAAkB,CAAC6D,KAAD,CAAQC,IAAR,CAAzC,CACA/B,QAAQ,CAAC,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CAAEA,KAAK,CAAEA,KAAK,CAAG,CAAjB,CAAhB,EAAD,CAAR,CANoB,wDAAH,kBAAfoB,CAAAA,eAAe,4EAArB,CASA,GAAMc,CAAAA,SAAS,2FAAG,kBAAOC,IAAP,CAAa9C,aAAb,CAA4BC,WAA5B,CAAyCC,IAAzC,CAA+CC,IAA/C,0JACS1B,CAAAA,QAAQ,CAACqE,IAAD,CAAO9C,aAAP,CAAsBC,WAAtB,CAAmCC,IAAnC,CAAyCC,IAAzC,CADjB,QACRc,QADQ,gBAEd,GAAIA,QAAQ,CAACC,OAAT,GAAqB,IAAzB,CAA+B,CAC3BxB,OAAO,CAACwB,OAAR,CAAgB,kBAAhB,EACH,CAJa,wDAAH,kBAAT2B,CAAAA,SAAS,mEAAf,CAOA,GAAM1B,CAAAA,UAAU,2FAAG,kBAAO2B,IAAP,CAAa9C,aAAb,CAA4BC,WAA5B,CAAyCC,IAAzC,CAA+CC,IAA/C,CAAqDC,UAArD,wIACfL,eAAe,CAACC,aAAhB,CAAgCA,aAAhC,CACAD,eAAe,CAACE,WAAhB,CAA8BA,WAA9B,CACAF,eAAe,CAACG,IAAhB,CAAuBA,IAAvB,CACAH,eAAe,CAACI,IAAhB,CAAuBA,IAAvB,CACAJ,eAAe,CAACK,UAAhB,CAA6BA,UAA7B,CALe,uBAOQ5B,CAAAA,OAAO,CAACsE,IAAD,CAAO9C,aAAP,CAAsBC,WAAtB,CAAmCC,IAAnC,CAAyCC,IAAzC,CAPf,QAOTc,QAPS,gBAQX2B,IARW,CAQJ7D,UAAU,CAACkC,QAAD,CARN,CASfnB,UAAU,CAACM,UAAD,CAAV,CAAyBwC,IAAzB,CACA;AACA/B,QAAQ,CAAC,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CAAEA,KAAK,CAAEA,KAAK,CAAG,CAAjB,CAAhB,EAAD,CAAR,CAXe,yDAAH,kBAAVQ,CAAAA,UAAU,wEAAhB,CAcA,mBACI,oCAEI,KAAC,aAAD,EAAe,iBAAiB,CAAE0B,SAAlC,CACI,IAAI,CAAE,aADV,CACyB,IAAI,CAAE,IAD/B,EAFJ,cAMI,KAAC,iBAAD,EAAmB,kBAAkB,CAAE1B,UAAvC,CACI,IAAI,CAAE,aADV,CACyB,IAAI,CAAE,IAD/B,CAEI,UAAU,CAAErB,UAAU,CAAC,cAAD,CAF1B,CAGI,MAAM,CAAEkC,WAHZ,CAII,UAAU,CAAE,cAJhB,EANJ,cAaI,KAAC,gBAAD,EAAkB,oBAAoB,CAAED,eAAxC,CACI,QAAQ,CAAElC,QAAQ,CAAC,OAAD,CADtB,CACiC,MAAM,CAAEY,QADzC,CAEI,IAAI,CAAE,IAFV,CAEgB,IAAI,CAAE,GAFtB,CAE2B,UAAU,CAAE,OAFvC,CAEgD,KAAK,CAAEtB,OAFvD,CAGI,OAAO,CAAEoB,YAHb,CAG2B,QAAQ,CAAG,oBAHtC,CAG4D,cAAc,CAAI,GAH9E,CAGmF,WAAW,CAAI,CAHlG,CAII,YAAY,CAAI,GAJpB,CAIyB,SAAS,CAAI,CAJtC,CAIyC,IAAI,CAAIF,IAJjD,EAbJ,GADJ,CAwBH,CAhHD,CAkHA,cAAeK,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DeleteJob, logdata_request, ReadJob, WriteJob } from '../../api';\r\nimport { DataSortTime, LogDataMappingTime, TableColumbTimeAsRow, TableColumbLabelAsRow, LogDataMappingName, ReportSort, TableColumbJob, SortToArrayExcel, ExportExcelWorkBook } from '../../DataRequest/LogDataRequestWrap';\r\nimport { C3Model, G2Model, JobModel } from '../../DataRequest/DataModel';\r\nimport TimeTableWrapper from '../Report/TimeTableWrapper';\r\nimport NameTableWrapper from '../Report/NameTableWrapper';\r\nimport ReportWrapper from '../Report/ReportWrapper';\r\nimport { Button, message } from 'antd';\r\nimport ReportListWrapper from '../Report/ReportListWrapper';\r\nimport moment from 'moment';\r\n\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nlet ReportList = {\r\n    \"C3ReportList\": [],\r\n    \"G2ReportList\": []\r\n}\r\n\r\nlet JobDetailRecord = {\r\n    datetimeStart :'', \r\n    datetimeEnd :'',\r\n    site :'',\r\n    line :'',\r\n    BufferName :''\r\n}\r\n\r\nlet Cell = [\"A2\",\"E2\",\"I2\",\"K2\",\"O2\"]\r\n\r\n\r\nlet ReportInfoG2 = {}\r\nlet ReportInfoC3 = {}\r\n\r\n\r\nlet BlankPage\r\n\r\nconst ColumbC3 = TableColumbLabelAsRow(C3Model)\r\n\r\nconst Line1Report = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n    const JobDeleteHandler = async ( jobnumber, line, page) => {\r\n        const response = await DeleteJob( jobnumber['Job No'], line, page)\r\n\r\n        if (response.success === true) {\r\n            message.success(`Job ${jobnumber['Job No']} Deleted`)\r\n            RequestJob([], JobDetailRecord.datetimeStart, JobDetailRecord.datetimeEnd, \r\n                JobDetailRecord.site, JobDetailRecord.line, JobDetailRecord.BufferName)\r\n        }\r\n\r\n        else {\r\n            message.error(`Unable to Delete Job ${jobnumber['Job No']}`)\r\n        }\r\n        \r\n    }\r\n\r\n    const DataRequestC3 = (row) => {\r\n\r\n        let TimeRange = []\r\n\r\n        TimeRange[0] = (moment(row['Start Time'], \"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0] + \"Z\")\r\n        TimeRange[1] = (moment(row['End Time'], \"DD-MM-YYYY HH:mm:ss\")).toISOString(false).split('.')[0] + \"Z\"\r\n\r\n        ReportInfoC3.Info1 = row['Job No']\r\n        ReportInfoC3.Info2 = row['Start Time']\r\n        ReportInfoC3.Info3 = row['End Time']\r\n        ReportInfoC3.Info4 = row['Color']\r\n        ReportInfoC3.Info5 = row['Grade']\r\n        UpdateTableData([], TimeRange[0], TimeRange[1], 'Polymerlink', 'C3', '1', 'LogC3', C3Model)\r\n\r\n    }\r\n    const ColumbJobC3 = TableColumbJob(JobModel, DataRequestC3, JobDeleteHandler, 'C3', '1','View', 'Delete')\r\n\r\n    const DataRequestG2 = (row) => {\r\n\r\n        // console.log(row)\r\n\r\n        let TimeRange = []\r\n\r\n        TimeRange[0] = (moment(row['Start Time'], \"DD-MM-YYYY HH:mm:ss\").toISOString(false).split('.')[0] + \"Z\")\r\n        TimeRange[1] = (moment(row['End Time'], \"DD-MM-YYYY HH:mm:ss\")).toISOString(false).split('.')[0] + \"Z\"\r\n\r\n        ReportInfoG2.Info1 = row['Job No']\r\n        ReportInfoG2.Info2 = row['Start Time']\r\n        ReportInfoG2.Info3 = row['End Time']\r\n        ReportInfoG2.Info4 = row['Color']\r\n        ReportInfoG2.Info5 = row['Grade']\r\n\r\n        console.log(ReportInfoG2);\r\n\r\n\r\n        UpdateTableData([], TimeRange[0], TimeRange[1], 'Polymerlink', 'G2', BlankPage, 'LogG2', G2Model)\r\n    }\r\n    const ColumbJobG2 = TableColumbJob(JobModel, DataRequestG2, JobDeleteHandler, 'G2', BlankPage, 'View', 'Delete')\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n        // console.log(data);\r\n\r\n        LogValue[BufferName] = LogDataMappingName(Model, data)\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const CreateJob = async (info, datetimeStart, datetimeEnd, site, line) => {\r\n        const response = await WriteJob(info, datetimeStart, datetimeEnd, site, line)\r\n        if (response.success === true) {\r\n            message.success('Create Success !')\r\n        }\r\n    }\r\n\r\n    const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\r\n        JobDetailRecord.datetimeStart = datetimeStart\r\n        JobDetailRecord.datetimeEnd = datetimeEnd\r\n        JobDetailRecord.site = site\r\n        JobDetailRecord.line = line\r\n        JobDetailRecord.BufferName = BufferName\r\n\r\n        const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line)\r\n        let data = ReportSort(response)\r\n        ReportList[BufferName] = data\r\n        //console.log(data);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* C3 part here */}\r\n            <ReportWrapper CreateJobCallBack={CreateJob}\r\n                site={'Polymerlink'} line={'C3'}\r\n            />\r\n\r\n            <ReportListWrapper ReportListCallBack={RequestJob}\r\n                site={'Polymerlink'} line={'C3'}\r\n                ReportList={ReportList['C3ReportList']}\r\n                Columb={ColumbJobC3}\r\n                BufferName={\"C3ReportList\"}\r\n            />\r\n\r\n            <NameTableWrapper SetTimeRangeCallBack={UpdateTableData}\r\n                LogValue={LogValue['LogC3']} Columb={ColumbC3}\r\n                site={'C3'} page={'1'} BufferName={\"LogC3\"} Model={C3Model}\r\n                JobInfo={ReportInfoC3} FileName= {'ExtruderSheet.xlsx'} startingColumb = {'A'} startingRow = {7}\r\n                EndingColumb = {'R'} EndingRow = {7} Cell = {Cell}\r\n            />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Line1Report\r\n"]},"metadata":{},"sourceType":"module"}