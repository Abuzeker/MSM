{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReadJob, MSM_RealTime_request, MSM_logdata_request, MSM_EventLog_request } from '../../api';\nimport { DataSortTimeMSM, GetDateTime, LogDataMappingNameMSM, MSM_Realtime_GetDateTime, DateDisplay, EventSortTimeMSM, Find_initial_Time } from '../../DataRequest/LogDataRequestWrap';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport moment from 'moment';\nimport { MSMTable } from '../../DataRequest/DataModel';\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\nimport { DashboardOutlined } from '@ant-design/icons';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DTinitial = GetDateTime(0, 1); // get from yesterday 00:00 to today 00:00\n\nlet DTinitial2 = GetDateTime(7, 1);\nlet ContingRange = MSM_Realtime_GetDateTime(1, 0);\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton'];\nlet RequestDateRange = [DTinitial[0], DTinitial[1]];\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1]];\nlet DailyLogSorted = [];\nlet EventLogSorted = [];\nlet TotalCountProduct = [];\nlet DailyRealTime = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\nlet TotalCount = {\n  'Line50kg': 0,\n  'Line1kg': 0,\n  'Line2kg': 0,\n  'Line1Ton': 0\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [sortedInfo2, setSortedInfo2] = useState({});\n  useEffect(() => {// const interval = setInterval(() => {\n    //     RenderNewData()\n    // }, 1000)\n    // DailyLogRequest()\n    // EvenLogRequest()\n    // return () => {\n    //     clearInterval(interval)\n    //     console.log('Unmount Effect Line1RT');\n    // }\n  }, []);\n\n  const RenderNewData = () => {\n    RealTimeRequest();\n  };\n\n  const DailyLogRequest = async () => {\n    let response = await MSM_logdata_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1]); //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n\n    DailyLogSorted = LogDataMappingNameMSM(MSMTable, DataSortTimeMSM(response));\n    console.log(DailyLogSorted);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const EvenLogRequest = async () => {\n    let response = await MSM_EventLog_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1]); //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n\n    EventLogSorted = EventSortTimeMSM(response);\n    console.log(EventLogSorted);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const RealTimeRequest = async () => {\n    let field_name = Object.keys(DailyRealTime);\n    let realtime = await MSM_RealTime_request(RequestDataOption);\n    console.log(realtime);\n    TotalCountProduct = DataSortRT(realtime);\n    console.log(TotalCountProduct);\n    Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0);\n    console.log(ContingRange);\n    let response = await MSM_EventLog_request(RequestDataOption, ContingRange[0], ContingRange[1]);\n    EventLogSorted = EventSortTimeMSM(response); // console.log(EventLogSorted);\n\n    field_name.forEach(element => {\n      DailyRealTime[`${element}`] = 0;\n      EventLogSorted.forEach(element2 => {\n        if (element === element2['Label']) {\n          DailyRealTime[`${element}`]++;\n        }\n      });\n      TotalCountProduct.forEach(element3 => {\n        if (element === element3['Label']) {\n          TotalCount[`${element}`] = element3.value;\n        }\n      });\n    });\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const handleChangeOverall = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo(sorter);\n  };\n\n  const handleChangePertime = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo2(sorter);\n  }; // const ChangeDateRange = (value) => {\n  //     // console.log(RequestDateRange);\n  //     RequestDateRange = []\n  //     RequestDateRange = ConvertMonentToDateTime(value)\n  //     // console.log(RequestDateRange);\n  // }\n  // const ChangeOption = (value) => {\n  //     console.log(`selected ${value}`);\n  //     RequestDataOption = []\n  //     RequestDataOption.push(value)\n  //     // console.log(RequestDataOption);\n  // }\n\n\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '50 KG',\n    width: 35,\n    dataIndex: 'Line50kg',\n    key: 'Line50kg',\n    align: 'center',\n    sorter: (a, b) => a.Line50kg - b.Line50kg,\n    sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 35,\n    dataIndex: 'Line1kg',\n    key: 'Line1kg',\n    align: 'center',\n    sorter: (a, b) => a.Line1kg - b.Line1kg,\n    sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 35,\n    dataIndex: 'Line2kg',\n    key: 'Line2kg',\n    align: 'center',\n    sorter: (a, b) => a.Line2kg - b.Line2kg,\n    sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 35,\n    dataIndex: 'Line1Ton',\n    key: 'Line1Ton',\n    align: 'center',\n    sorter: (a, b) => a.Line1Ton - b.Line1Ton,\n    sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  const LogColumbPerTime = [{\n    title: 'DateTime',\n    width: 40,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Tag',\n    width: 60,\n    dataIndex: 'Tag',\n    key: 'Tag',\n    align: 'center'\n  }, {\n    title: 'Id Unit',\n    width: 20,\n    dataIndex: 'IdUnit',\n    key: 'IdUnit',\n    align: 'center',\n    sorter: (a, b) => a.IdUnit - b.IdUnit,\n    sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Label',\n    width: 20,\n    dataIndex: 'Label',\n    key: 'Label',\n    align: 'center',\n    filters: [{\n      text: 'Line50kg',\n      value: 'Line50kg'\n    }, {\n      text: 'Line1kg',\n      value: 'Line1kg'\n    }, {\n      text: 'Line2kg',\n      value: 'Line2kg'\n    }, {\n      text: 'Line1Ton',\n      value: 'Line1Ton'\n    }],\n    onFilter: (value, record) => record.Label.indexOf(value) === 0\n  }, {\n    title: 'Weight',\n    width: 20,\n    dataIndex: 'Weight',\n    key: 'Weight',\n    align: 'center'\n  }, {\n    title: 'Location',\n    width: 20,\n    dataIndex: 'Location',\n    key: 'Location',\n    align: 'center'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Daily Production Capacity Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `( ${moment(ContingRange[0]).utc(true).format('DD/MM/YYYY HH:mm:ss')} - ${moment(ContingRange[1]).utc(true).format('DD/MM/YYYY HH:mm:ss')} )`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: '3',\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 50 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: DailyRealTime['Line50kg'],\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: DailyRealTime['Line1kg'],\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 2 KG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: DailyRealTime['Line2kg'],\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            xs: 24,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                backgroundColor: 'ButtonHighlight ',\n                border: '3px outset'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Packaging Line 1 TON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                value: DailyRealTime['Line1Ton'],\n                precision: 0,\n                valueStyle: {\n                  color: '#3f8600',\n                  fontSize: '40px',\n                  color: '#131212',\n                  fontWeight: 'bold'\n                },\n                suffix: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              height: '540px',\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \" Total Capacity \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"50 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line50kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line1kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"2 Kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line2kg'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: /*#__PURE__*/_jsxDEV(Title, {\n                    level: 4,\n                    style: {\n                      fontFamily: 'cursive'\n                    },\n                    children: \"1 Ton\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 50\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    value: TotalCount['Line1Ton'],\n                    precision: 0,\n                    valueStyle: {\n                      color: '#084085',\n                      fontFamily: 'monospace',\n                      fontSize: '34px'\n                    },\n                    suffix: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'AppWorkspace',\n              border: '3px outset',\n              minHeight: '540px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \" Daily Log  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: LogColumb,\n              dataSource: DailyLogSorted,\n              bordered: true,\n              scroll: {\n                x: 500,\n                y: 385\n              },\n              pagination: false,\n              size: \"small\",\n              onChange: handleChangeOverall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '540px',\n          backgroundColor: 'AppWorkspace',\n          border: '3px outset'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 1,\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \" Event Log  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          columns: LogColumbPerTime,\n          dataSource: EventLogSorted,\n          scroll: {\n            x: 600,\n            y: 350\n          },\n          pagination: false,\n          size: \"small\",\n          onChange: handleChangePertime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"p3yqr+unGhiTCWtf2vvByEhTh3Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/Home/Home.jsx"],"names":["React","useEffect","useState","ReadJob","MSM_RealTime_request","MSM_logdata_request","MSM_EventLog_request","DataSortTimeMSM","GetDateTime","LogDataMappingNameMSM","MSM_Realtime_GetDateTime","DateDisplay","EventSortTimeMSM","Find_initial_Time","DataSortRT","moment","MSMTable","Button","Col","Row","Table","Typography","Statistic","Card","DatePicker","Select","DashboardOutlined","DTinitial","DTinitial2","ContingRange","RequestDataOption","RequestDateRange","DailyLogRequestRange","DailyLogSorted","EventLogSorted","TotalCountProduct","DailyRealTime","TotalCount","Home","Title","state","setState","count","sortedInfo","setSortedInfo","sortedInfo2","setSortedInfo2","RenderNewData","RealTimeRequest","DailyLogRequest","response","console","log","EvenLogRequest","field_name","Object","keys","realtime","forEach","element","element2","element3","value","handleChangeOverall","pagination","filters","sorter","handleChangePertime","LogColumb","title","width","dataIndex","key","align","a","b","Date","DateTime","format","sortOrder","columnKey","order","ellipsis","Line50kg","Line1kg","Line2kg","Line1Ton","LogColumbPerTime","IdUnit","text","onFilter","record","Label","indexOf","marginTop","utc","backgroundColor","border","color","fontSize","fontWeight","height","fontFamily","minHeight","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ReadJob, MSM_RealTime_request, MSM_logdata_request, MSM_EventLog_request } from '../../api'\r\nimport {\r\n    DataSortTimeMSM, GetDateTime,\r\n    LogDataMappingNameMSM, MSM_Realtime_GetDateTime, DateDisplay,\r\n    EventSortTimeMSM, Find_initial_Time\r\n} from '../../DataRequest/LogDataRequestWrap';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport moment from 'moment';\r\nimport { MSMTable } from '../../DataRequest/DataModel';\r\nimport { Button, Col, Row, Table, Typography, Statistic, Card, DatePicker, Select } from 'antd';\r\nimport { DashboardOutlined } from '@ant-design/icons';\r\nimport './home.css'\r\n\r\n\r\nlet DTinitial = GetDateTime(0, 1)  // get from yesterday 00:00 to today 00:00\r\nlet DTinitial2 = GetDateTime(7, 1)\r\nlet ContingRange = MSM_Realtime_GetDateTime(1, 0)\r\n\r\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton']\r\nlet RequestDateRange = [DTinitial[0], DTinitial[1]]\r\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1]]\r\nlet DailyLogSorted = []\r\nlet EventLogSorted = []\r\nlet TotalCountProduct = []\r\n\r\nlet DailyRealTime = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nlet TotalCount = {\r\n    'Line50kg': 0,\r\n    'Line1kg': 0,\r\n    'Line2kg': 0,\r\n    'Line1Ton': 0\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    const { Title } = Typography\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n    const [sortedInfo2, setSortedInfo2] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // const interval = setInterval(() => {\r\n        //     RenderNewData()\r\n        // }, 1000)\r\n\r\n        // DailyLogRequest()\r\n        // EvenLogRequest()\r\n\r\n\r\n        // return () => {\r\n        //     clearInterval(interval)\r\n        //     console.log('Unmount Effect Line1RT');\r\n        // }\r\n\r\n    }, [])\r\n\r\n    const RenderNewData = () => {\r\n        RealTimeRequest()\r\n    }\r\n\r\n    const DailyLogRequest = async () => {\r\n        let response = await MSM_logdata_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        DailyLogSorted = LogDataMappingNameMSM(MSMTable, DataSortTimeMSM(response))\r\n        console.log(DailyLogSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const EvenLogRequest = async () => {\r\n        let response = await MSM_EventLog_request(RequestDataOption, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        EventLogSorted = EventSortTimeMSM(response)\r\n        console.log(EventLogSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const RealTimeRequest = async () => {\r\n\r\n        let field_name = Object.keys(DailyRealTime)\r\n\r\n        let realtime = await MSM_RealTime_request(RequestDataOption)\r\n        console.log(realtime);\r\n        TotalCountProduct = DataSortRT(realtime)\r\n\r\n        console.log(TotalCountProduct);\r\n\r\n        Find_initial_Time() ? ContingRange = MSM_Realtime_GetDateTime(0, 1) : ContingRange = MSM_Realtime_GetDateTime(1, 0)\r\n\r\n        console.log(ContingRange);\r\n\r\n        let response = await MSM_EventLog_request(RequestDataOption, ContingRange[0], ContingRange[1])\r\n        EventLogSorted = EventSortTimeMSM(response)\r\n\r\n        // console.log(EventLogSorted);\r\n\r\n\r\n        field_name.forEach(element => {\r\n            DailyRealTime[`${element}`] = 0\r\n            EventLogSorted.forEach(element2 => {\r\n                if (element === element2['Label']) {\r\n                    DailyRealTime[`${element}`]++\r\n                }\r\n            });\r\n\r\n            TotalCountProduct.forEach(element3 => {\r\n                if (element === element3['Label']) {\r\n                    TotalCount[`${element}`] = element3.value\r\n                }\r\n            });\r\n        });\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const handleChangeOverall = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const handleChangePertime = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo2(sorter);\r\n    };\r\n\r\n    // const ChangeDateRange = (value) => {\r\n    //     // console.log(RequestDateRange);\r\n    //     RequestDateRange = []\r\n    //     RequestDateRange = ConvertMonentToDateTime(value)\r\n    //     // console.log(RequestDateRange);\r\n    // }\r\n\r\n    // const ChangeOption = (value) => {\r\n    //     console.log(`selected ${value}`);\r\n    //     RequestDataOption = []\r\n    //     RequestDataOption.push(value)\r\n    //     // console.log(RequestDataOption);\r\n    // }\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '50 KG',\r\n            width: 35,\r\n            dataIndex: 'Line50kg',\r\n            key: 'Line50kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50kg - b.Line50kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 35,\r\n            dataIndex: 'Line1kg',\r\n            key: 'Line1kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1kg - b.Line1kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 35,\r\n            dataIndex: 'Line2kg',\r\n            key: 'Line2kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2kg - b.Line2kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 35,\r\n            dataIndex: 'Line1Ton',\r\n            key: 'Line1Ton',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1Ton - b.Line1Ton,\r\n            sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const LogColumbPerTime = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 40,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Tag',\r\n            width: 60,\r\n            dataIndex: 'Tag',\r\n            key: 'Tag',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Id Unit',\r\n            width: 20,\r\n            dataIndex: 'IdUnit',\r\n            key: 'IdUnit',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.IdUnit - b.IdUnit,\r\n            sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Label',\r\n            width: 20,\r\n            dataIndex: 'Label',\r\n            key: 'Label',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Line50kg',\r\n                    value: 'Line50kg',\r\n                },\r\n                {\r\n                    text: 'Line1kg',\r\n                    value: 'Line1kg',\r\n                },\r\n                {\r\n                    text: 'Line2kg',\r\n                    value: 'Line2kg',\r\n                },\r\n                {\r\n                    text: 'Line1Ton',\r\n                    value: 'Line1Ton',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Label.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: 'Weight',\r\n            width: 20,\r\n            dataIndex: 'Weight',\r\n            key: 'Weight',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Location',\r\n            width: 20,\r\n            dataIndex: 'Location',\r\n            key: 'Location',\r\n            align: 'center',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Card >\r\n                    <h2>Daily Production Capacity Counter</h2>\r\n                    <h3>{`( ${moment(ContingRange[0]).utc(true).format('DD/MM/YYYY HH:mm:ss')} - ${moment(ContingRange[1]).utc(true).format('DD/MM/YYYY HH:mm:ss')} )`}</h3>\r\n\r\n                    <Row gutter={'3'} >\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 50 KG</h2>\r\n\r\n                                {/* <Title level={3}>Packaging Line 50 KG</Title> */}\r\n                                <Statistic\r\n                                    value={DailyRealTime['Line50kg']}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 KG</Title> */}\r\n                                <Statistic\r\n                                    value={DailyRealTime['Line1kg']}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 2 KG</h2>\r\n                                {/* <Title level={3}>Packaging Line 2 KG</Title> */}\r\n                                <Statistic\r\n                                    value={DailyRealTime['Line2kg']}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6} xs={24} xl={6}>\r\n                            <Card bordered={true} style={{ backgroundColor: 'ButtonHighlight ', border: '3px outset' }}  >\r\n                                <h2>Packaging Line 1 TON</h2>\r\n                                {/* <Title level={3}>Packaging Line 1 TON</Title> */}\r\n                                <Statistic\r\n                                    value={DailyRealTime['Line1Ton']}\r\n                                    precision={0}\r\n                                    valueStyle={{ color: '#3f8600', fontSize: '40px', color: '#131212', fontWeight: 'bold' }}\r\n                                    suffix=\"Unit\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n                            <Title level={1} style={{ fontWeight: 'bold' }}> Total Capacity </Title>\r\n                            <Row gutter={[16, 16]}>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>50 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line50kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line1kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>2 Kg</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line2kg']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Card title={<Title level={4} style={{ fontFamily: 'cursive' }}>1 Ton</Title>}>\r\n\r\n                                        <Statistic\r\n                                            value={TotalCount['Line1Ton']}\r\n                                            precision={0}\r\n                                            valueStyle={{ color: '#084085', fontFamily: 'monospace', fontSize: '34px' }}\r\n                                            suffix=\"Unit\"\r\n                                        />\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <Card style={{ backgroundColor: 'AppWorkspace', border: '3px outset', minHeight: '540px' }} >\r\n\r\n                            <Title level={1} style={{ fontWeight: 'bold' }} > Daily Log  </Title>\r\n                            <Table columns={LogColumb} dataSource={DailyLogSorted} bordered scroll={{ x: 500, y: 385 }} pagination={false} size=\"small\" onChange={handleChangeOverall} />\r\n                        </Card>\r\n\r\n\r\n                    </Col>\r\n\r\n\r\n                </Row>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n\r\n\r\n\r\n                <Card style={{ height: '540px', backgroundColor: 'AppWorkspace', border: '3px outset' }} >\r\n\r\n                    <Title level={1} style={{ fontWeight: 'bold' }}> Event Log  </Title>\r\n                    <Table bordered columns={LogColumbPerTime} dataSource={EventLogSorted} scroll={{ x: 600, y: 350 }} pagination={false} size=\"small\" onChange={handleChangePertime} />\r\n                </Card>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n             */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}