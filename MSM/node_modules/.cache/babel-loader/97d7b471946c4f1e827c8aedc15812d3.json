{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\EnergyUsage\\\\EnergyUsage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select, Spin, Typography } from 'antd';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { logdata_request, MSM_EventLog_request, MSM_logdata_request, MSM_ReportRequest } from '../../api';\nimport { C3Model, C3ModelMap, G2Model, MSMTable, DummyData, MSMDailyTable, MSMShiftTable } from '../../DataRequest/DataModel';\nimport { ConvertMonentToDateTime, EventSortTimeMSM, GetDateTime, DataSortTimeMSM, LogDataMappingTime, LogDataMappingTimeMSM, LogDataMappingNameMSM } from '../../DataRequest/LogDataRequestWrap';\nimport { Line, Column } from '@antv/g2plot';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport FormData from 'form-data';\nimport LetterHead from '../../assets/MSMHeader.png';\nimport LetterFoot from '../../assets/MSMFooter.png';\nimport FileBase64 from 'react-file-base64';\nimport { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\nimport Invoice from '../../utils/Invoice.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DTinitial = GetDateTime(0, 1); // get from yesterday 00:00 to today 00:00\n\nlet DTinitial2 = GetDateTime(0, 1); // get from yesterday 00:00 to today 00:00\n\nlet DTinitial3 = GetDateTime(7, 1); // get from yesterday 00:00 to today 00:00\n\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton'];\nlet RequestDataOption_Daily = ['Line50kg_Daily', 'Line1kg_Daily', 'Line2kg_Daily', 'Line1Ton_Daily'];\nlet RequestDataOption_shift = ['Line50kg_Morning', 'Line1kg_Morning', 'Line2kg_Morning', 'Line1Ton_Morning', 'Line50kg_Night', 'Line1kg_Night', 'Line2kg_Night', 'Line1Ton_Night'];\nlet RequestDateRange = [DTinitial[0], DTinitial[1]];\nlet BarChartRange = [DTinitial3[0], DTinitial3[1]];\nlet responseSorted = [];\nconst annotations = [];\nlet EventLogRequestRange = [DTinitial2[0], DTinitial2[1]];\nlet EventLogSorted = [];\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1]];\nlet DailyLogSorted = [];\nlet ShiftLogSorted = [];\nlet LogPDF = {\n  items: []\n};\nconst headersDaily = [{\n  label: \"DateTime\",\n  key: \"DateTime\"\n}, {\n  label: \"Line50kg\",\n  key: \"Line50kg\"\n}, {\n  label: \"Line1kg\",\n  key: \"Line1kg\"\n}, {\n  label: \"Line2kg\",\n  key: \"Line2kg\"\n}, {\n  label: \"Line1Ton\",\n  key: \"Line1Ton\"\n}];\nconst headersshift = [{\n  label: \"DateTime\",\n  key: \"DateTime\"\n}, {\n  label: \"Shift\",\n  key: \"Shift\"\n}, {\n  label: \"Line50kg\",\n  key: \"Line50kg\"\n}, {\n  label: \"Line1kg\",\n  key: \"Line1kg\"\n}, {\n  label: \"Line2kg\",\n  key: \"Line2kg\"\n}, {\n  label: \"Line1Ton\",\n  key: \"Line1Ton\"\n}];\nconst headersEvent = [{\n  label: \"DateTime\",\n  key: \"DateTime\"\n}, {\n  label: \"Shift\",\n  key: \"Shift\"\n}, {\n  label: \"Tag\",\n  key: \"Tag\"\n}, {\n  label: \"IdUnit\",\n  key: \"IdUnit\"\n}, {\n  label: \"Label\",\n  key: \"Label\"\n}, {\n  label: \"Weight\",\n  key: \"Weight\"\n}, {\n  label: \"Location\",\n  key: \"Location\"\n}];\nconst testdata = {\n  items: [{\n    \"Line50kg\": 0,\n    \"Line1kg\": 28,\n    \"Line2kg\": 42,\n    \"Line1Ton\": 107,\n    \"DateTime\": \"15/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 19,\n    \"Line2kg\": 48,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"15/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 23,\n    \"Line2kg\": 25,\n    \"Line1Ton\": 123,\n    \"DateTime\": \"16/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 20,\n    \"Line2kg\": 51,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"16/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 2,\n    \"Line2kg\": 10,\n    \"Line1Ton\": 25,\n    \"DateTime\": \"17/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"17/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"23/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 28,\n    \"Line2kg\": 42,\n    \"Line1Ton\": 107,\n    \"DateTime\": \"15/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 19,\n    \"Line2kg\": 48,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"15/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 23,\n    \"Line2kg\": 25,\n    \"Line1Ton\": 123,\n    \"DateTime\": \"16/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 20,\n    \"Line2kg\": 51,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"16/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 2,\n    \"Line2kg\": 10,\n    \"Line1Ton\": 25,\n    \"DateTime\": \"17/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"17/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"23/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 28,\n    \"Line2kg\": 42,\n    \"Line1Ton\": 107,\n    \"DateTime\": \"15/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 19,\n    \"Line2kg\": 48,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"15/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 23,\n    \"Line2kg\": 25,\n    \"Line1Ton\": 123,\n    \"DateTime\": \"16/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 20,\n    \"Line2kg\": 51,\n    \"Line1Ton\": 120,\n    \"DateTime\": \"16/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 2,\n    \"Line2kg\": 10,\n    \"Line1Ton\": 25,\n    \"DateTime\": \"17/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"17/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"18/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"19/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"20/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"21/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"22/06/2022 19:00:00\",\n    \"Shift\": \"Night\"\n  }, {\n    \"Line50kg\": 0,\n    \"Line1kg\": 0,\n    \"Line2kg\": 0,\n    \"Line1Ton\": 0,\n    \"DateTime\": \"23/06/2022 07:00:00\",\n    \"Shift\": \"Morning\"\n  }]\n};\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\nconst {\n  Title\n} = Typography;\nlet line, stackedColumnPlot;\n\nconst EnergyUsage = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [Loading, setLoading] = useState(false);\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [sortedInfo2, setSortedInfo2] = useState({});\n  const LogColumbPerTime = [{\n    title: 'DateTime',\n    width: 40,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Shift',\n    width: 20,\n    dataIndex: 'Shift',\n    key: 'Shift',\n    align: 'center',\n    filters: [{\n      text: 'Morning',\n      value: 'Morning'\n    }, {\n      text: 'Night',\n      value: 'Night'\n    }],\n    onFilter: (value, record) => record.Shift.indexOf(value) === 0\n  }, {\n    title: 'Tag',\n    width: 60,\n    dataIndex: 'Tag',\n    key: 'Tag',\n    align: 'center'\n  }, {\n    title: 'Id Unit',\n    width: 20,\n    dataIndex: 'IdUnit',\n    key: 'IdUnit',\n    align: 'center',\n    sorter: (a, b) => a.IdUnit - b.IdUnit,\n    sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\n    ellipsis: true\n  }, {\n    title: 'Label',\n    width: 20,\n    dataIndex: 'Label',\n    key: 'Label',\n    align: 'center',\n    filters: [{\n      text: 'Line50kg',\n      value: 'Line50kg'\n    }, {\n      text: 'Line1kg',\n      value: 'Line1kg'\n    }, {\n      text: 'Line2kg',\n      value: 'Line2kg'\n    }, {\n      text: 'Line1Ton',\n      value: 'Line1Ton'\n    }],\n    onFilter: (value, record) => record.Label.indexOf(value) === 0\n  }, {\n    title: 'Weight',\n    width: 20,\n    dataIndex: 'Weight',\n    key: 'Weight',\n    align: 'center'\n  }, {\n    title: 'Location',\n    width: 20,\n    dataIndex: 'Location',\n    key: 'Location',\n    align: 'center'\n  }];\n\n  const handleChangeOverall = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo(sorter);\n  };\n\n  const handleChangePertime = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortedInfo2(sorter);\n  };\n\n  const EvenLogRequest = async () => {\n    let response = await MSM_EventLog_request(RequestDataOption, EventLogRequestRange[0], EventLogRequestRange[1]); //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n\n    EventLogSorted = EventSortTimeMSM(response); // console.log(EventLogSorted);\n\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  }; // const Form = () => {\n  //     // a local state to store the currently selected file.\n  //     // const [selectedFile, setSelectedFile] = React.useState(null);\n  //     // const handleSubmit = (event) => {\n  //     //   event.preventDefault()\n  //       const formData = new FormData();\n  //       formData.append(\"LetterHead\", LetterHead);\n  //       formData.append(\"LetterFoot\", LetterFoot);\n  //       formData.append(\"data\", LetterFoot);\n  //     }\n\n\n  useEffect(() => {\n    console.log('Reffect');\n    stackedColumnPlot = new Column('container', {\n      data: responseSorted,\n      isStack: true,\n      xField: 'date',\n      yField: 'Value',\n      seriesField: 'type',\n      label: {\n        position: 'middle',\n        layout: [{\n          type: 'interval-adjust-position'\n        }, {\n          type: 'interval-hide-overlap'\n        }, {\n          type: 'adjust-color'\n        }]\n      },\n      annotations\n    });\n\n    try {\n      BarChartInit();\n    } catch (error) {}\n\n    try {\n      stackedColumnPlot.render();\n    } catch {}\n\n    return () => {\n      stackedColumnPlot.destroy();\n    };\n  }, []);\n\n  const BarChartInit = async () => {\n    // setLoading(true)\n    // console.log(Parameter)\n    let response = await MSM_logdata_request(RequestDataOption_Daily, BarChartRange[0], BarChartRange[1]);\n    let BarChartData = DataSortTimeMSM(response);\n\n    try {\n      stackedColumnPlot.changeData(BarChartData);\n    } catch (error) {}\n\n    console.log(BarChartData); // setLoading(false)\n\n    setState(_ref2 => {\n      let {\n        count\n      } = _ref2;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 70,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '50 kG',\n    width: 70,\n    dataIndex: 'Line50kg',\n    key: 'Line50kg',\n    align: 'center',\n    sorter: (a, b) => a.Line50kg - b.Line50kg,\n    sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 kG',\n    width: 70,\n    dataIndex: 'Line1kg',\n    key: 'Line1kg',\n    align: 'center',\n    sorter: (a, b) => a.Line1kg - b.Line1kg,\n    sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 kG',\n    width: 70,\n    dataIndex: 'Line2kg',\n    key: 'Line2kg',\n    align: 'center',\n    sorter: (a, b) => a.Line2kg - b.Line2kg,\n    sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 Ton',\n    width: 70,\n    dataIndex: 'Line1Ton',\n    key: 'Line1Ton',\n    align: 'center',\n    sorter: (a, b) => a.Line1Ton - b.Line1Ton,\n    sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n  const LogColumbShift = [{\n    title: 'DateTime',\n    width: 50,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) - new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\n    sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: 'Shift',\n    width: 20,\n    dataIndex: 'Shift',\n    key: 'Shift',\n    align: 'center',\n    filters: [{\n      text: 'Morning',\n      value: 'Morning'\n    }, {\n      text: 'Night',\n      value: 'Night'\n    }],\n    onFilter: (value, record) => record.Shift.indexOf(value) === 0\n  }, {\n    title: '50 KG',\n    width: 35,\n    dataIndex: 'Line50kg',\n    key: 'Line50kg',\n    align: 'center',\n    sorter: (a, b) => a.Line50kg - b.Line50kg,\n    sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 35,\n    dataIndex: 'Line1kg',\n    key: 'Line1kg',\n    align: 'center',\n    sorter: (a, b) => a.Line1kg - b.Line1kg,\n    sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '2 KG',\n    width: 35,\n    dataIndex: 'Line2kg',\n    key: 'Line2kg',\n    align: 'center',\n    sorter: (a, b) => a.Line2kg - b.Line2kg,\n    sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 TON',\n    width: 35,\n    dataIndex: 'Line1Ton',\n    key: 'Line1Ton',\n    align: 'center',\n    sorter: (a, b) => a.Line1Ton - b.Line1Ton,\n    sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\n    ellipsis: true\n  }];\n\n  const DailyLogRequest = async (type, Model) => {\n    //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n    console.log(DailyLogRequestRange);\n    let response = [];\n\n    switch (type) {\n      case 'shift':\n        response = await MSM_logdata_request(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1]);\n        ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type);\n        LogPDF.items = ShiftLogSorted;\n        console.log(ShiftLogSorted);\n        break;\n\n      case 'daily':\n        response = await MSM_logdata_request(RequestDataOption_Daily, RequestDateRange[0], RequestDateRange[1]);\n        DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type);\n        console.log(DailyLogSorted);\n        break;\n\n      default:\n        break;\n    }\n\n    setState(_ref3 => {\n      let {\n        count\n      } = _ref3;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  const ExportPDF = async (type, Model) => {\n    //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \n    console.log(DailyLogRequestRange);\n    let response = [];\n\n    switch (type) {\n      case 'shift':\n        response = await MSM_ReportRequest(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1], LetterHead, LetterFoot); // ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\n        // console.log(ShiftLogSorted);\n\n        break;\n\n      case 'daily':\n        response = await MSM_ReportRequest(RequestDataOption_Daily, RequestDateRange[0], RequestDateRange[1], LetterHead, LetterFoot); // DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\n        // console.log(DailyLogSorted);\n\n        break;\n\n      default:\n        break;\n    } // setState(({ count }) => ({ count: count + 1 }));\n\n  };\n\n  const ChangeDateRange = (value, type) => {\n    switch (type) {\n      case 'Daily':\n        RequestDateRange = [];\n        RequestDateRange = ConvertMonentToDateTime(value);\n        break;\n\n      case 'Event':\n        EventLogRequestRange = [];\n        EventLogRequestRange = ConvertMonentToDateTime(value);\n        break;\n\n      case 'shift':\n        DailyLogRequestRange = [];\n        DailyLogRequestRange = ConvertMonentToDateTime(value);\n        break;\n\n      default:\n        break;\n    } // console.log(RequestDateRange);\n\n  };\n\n  const ChangeOption = value => {\n    if (value === 'All') {\n      RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton'];\n    } else {\n      console.log(`selected ${value}`);\n      RequestDataOption = [];\n      RequestDataOption.push(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Daily Count Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: 'Weekly Record',\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        backgroundColor: '#ffffff'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Daily Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        onChange: e => ChangeDateRange(e, 'Daily')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: DailyLogSorted,\n          target: \"_blank\",\n          filename: \"DataLog.csv\",\n          headers: headersDaily,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: e => {\n          DailyLogRequest('daily', MSMDailyTable);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Daily Log\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        marginBottom: '10px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: LogColumb,\n        dataSource: DailyLogSorted,\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        onChange: handleChangeOverall,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Shift Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        onChange: e => ChangeDateRange(e, 'shift')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: ShiftLogSorted,\n          target: \"_blank\",\n          filename: \"ShiftLog.csv\",\n          headers: headersshift,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n          width: \"1000\",\n          height: \"600\",\n          children: /*#__PURE__*/_jsxDEV(Invoice, {\n            invoice: LogPDF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: e => {\n          DailyLogRequest('shift', MSMShiftTable);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Shift Log\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        marginBottom: '10px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: LogColumbShift,\n        dataSource: ShiftLogSorted,\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        onChange: handleChangeOverall,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: '10px',\n          paddingTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          children: \"Event Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n          showTime: true,\n          onChange: e => ChangeDateRange(e, 'Event'),\n          onOk: e => ChangeDateRange(e, 'Event')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Line50kg\",\n          style: {\n            width: 100,\n            marginLeft: '10px'\n          },\n          onChange: ChangeOption,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Line50kg\",\n            children: \"Line50kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Line1kg\",\n            children: \"Line1kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Line2kg\",\n            children: \"Line2kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Line1Ton\",\n            children: \"Line1Ton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            marginLeft: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CSVLink, {\n            data: EventLogSorted,\n            target: \"_blank\",\n            filename: \"EventLog.csv\",\n            headers: headersEvent,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            marginLeft: '10px'\n          },\n          onClick: () => {\n            EvenLogRequest();\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Event Log\",\n        bordered: true,\n        style: {\n          width: '100%',\n          borderRadius: 15,\n          marginBottom: '10px'\n        },\n        hoverable: true,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          columns: LogColumbPerTime,\n          dataSource: EventLogSorted,\n          scroll: {\n            x: 600,\n            y: 750\n          },\n          pagination: true,\n          size: \"small\",\n          onChange: handleChangePertime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n        width: \"1000\",\n        height: \"600\",\n        children: /*#__PURE__*/_jsxDEV(Invoice, {\n          invoice: LogPDF\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 937,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnergyUsage, \"0vcqjnwsJW7OHEZqFrGAJQLatTA=\");\n\n_c = EnergyUsage;\nexport default EnergyUsage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnergyUsage\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/EnergyUsage/EnergyUsage.jsx"],"names":["Button","Col","Divider","Row","DatePicker","Card","Table","Select","Spin","Typography","React","useState","useEffect","Fragment","logdata_request","MSM_EventLog_request","MSM_logdata_request","MSM_ReportRequest","C3Model","C3ModelMap","G2Model","MSMTable","DummyData","MSMDailyTable","MSMShiftTable","ConvertMonentToDateTime","EventSortTimeMSM","GetDateTime","DataSortTimeMSM","LogDataMappingTime","LogDataMappingTimeMSM","LogDataMappingNameMSM","Line","Column","moment","CSVLink","CSVDownload","FormData","LetterHead","LetterFoot","FileBase64","PDFViewer","PDFDownloadLink","Invoice","DTinitial","DTinitial2","DTinitial3","RequestDataOption","RequestDataOption_Daily","RequestDataOption_shift","RequestDateRange","BarChartRange","responseSorted","annotations","EventLogRequestRange","EventLogSorted","DailyLogRequestRange","DailyLogSorted","ShiftLogSorted","LogPDF","items","headersDaily","label","key","headersshift","headersEvent","testdata","RangePicker","Option","Title","line","stackedColumnPlot","EnergyUsage","state","setState","count","Loading","setLoading","sortedInfo","setSortedInfo","sortedInfo2","setSortedInfo2","LogColumbPerTime","title","width","dataIndex","align","sorter","a","b","Date","DateTime","format","sortOrder","columnKey","order","ellipsis","filters","text","value","onFilter","record","Shift","indexOf","IdUnit","Label","handleChangeOverall","pagination","console","log","handleChangePertime","EvenLogRequest","response","data","isStack","xField","yField","seriesField","position","layout","type","BarChartInit","error","render","destroy","BarChartData","changeData","LogColumb","Line50kg","Line1kg","Line2kg","Line1Ton","LogColumbShift","DailyLogRequest","Model","ExportPDF","ChangeDateRange","ChangeOption","push","paddingBottom","borderRadius","backgroundColor","e","marginLeft","marginBottom","y","marginTop","paddingTop","x"],"mappings":"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","sourcesContent":["\r\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select, Spin, Typography } from 'antd'\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { logdata_request, MSM_EventLog_request, MSM_logdata_request, MSM_ReportRequest } from '../../api'\r\nimport { C3Model, C3ModelMap, G2Model, MSMTable, DummyData, MSMDailyTable, MSMShiftTable } from '../../DataRequest/DataModel'\r\nimport {\r\n    ConvertMonentToDateTime, EventSortTimeMSM, GetDateTime,\r\n    DataSortTimeMSM, LogDataMappingTime, LogDataMappingTimeMSM,\r\n    LogDataMappingNameMSM\r\n} from '../../DataRequest/LogDataRequestWrap'\r\nimport { Line, Column } from '@antv/g2plot';\r\nimport moment from 'moment';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport FormData from 'form-data'\r\nimport LetterHead from '../../assets/MSMHeader.png'\r\nimport LetterFoot from '../../assets/MSMFooter.png'\r\nimport FileBase64 from 'react-file-base64'\r\n\r\nimport { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer'\r\nimport Invoice from '../../utils/Invoice.jsx'\r\n\r\n\r\nlet DTinitial = GetDateTime(0, 1)  // get from yesterday 00:00 to today 00:00\r\nlet DTinitial2 = GetDateTime(0, 1)  // get from yesterday 00:00 to today 00:00\r\nlet DTinitial3 = GetDateTime(7, 1)  // get from yesterday 00:00 to today 00:00\r\n\r\n\r\nlet RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton']\r\nlet RequestDataOption_Daily = ['Line50kg_Daily', 'Line1kg_Daily', 'Line2kg_Daily', 'Line1Ton_Daily']\r\nlet RequestDataOption_shift = [\r\n    'Line50kg_Morning', 'Line1kg_Morning', 'Line2kg_Morning', 'Line1Ton_Morning',\r\n    'Line50kg_Night', 'Line1kg_Night', 'Line2kg_Night', 'Line1Ton_Night']\r\n\r\nlet RequestDateRange = [DTinitial[0], DTinitial[1]]\r\n\r\nlet BarChartRange = [DTinitial3[0], DTinitial3[1]]\r\n\r\nlet responseSorted = []\r\nconst annotations = [];\r\n\r\nlet EventLogRequestRange = [DTinitial2[0], DTinitial2[1]]\r\nlet EventLogSorted = []\r\n\r\nlet DailyLogRequestRange = [DTinitial2[0], DTinitial2[1]]\r\nlet DailyLogSorted = []\r\nlet ShiftLogSorted = []\r\nlet LogPDF = {\r\n    items: []\r\n}\r\n\r\nconst headersDaily = [\r\n    { label: \"DateTime\", key: \"DateTime\" },\r\n    { label: \"Line50kg\", key: \"Line50kg\" },\r\n    { label: \"Line1kg\", key: \"Line1kg\" },\r\n    { label: \"Line2kg\", key: \"Line2kg\" },\r\n    { label: \"Line1Ton\", key: \"Line1Ton\" },\r\n];\r\n\r\nconst headersshift = [\r\n    { label: \"DateTime\", key: \"DateTime\" },\r\n    { label: \"Shift\", key: \"Shift\" },\r\n    { label: \"Line50kg\", key: \"Line50kg\" },\r\n    { label: \"Line1kg\", key: \"Line1kg\" },\r\n    { label: \"Line2kg\", key: \"Line2kg\" },\r\n    { label: \"Line1Ton\", key: \"Line1Ton\" },\r\n];\r\n\r\nconst headersEvent = [\r\n    { label: \"DateTime\", key: \"DateTime\" },\r\n    { label: \"Shift\", key: \"Shift\" },\r\n    { label: \"Tag\", key: \"Tag\" },\r\n    { label: \"IdUnit\", key: \"IdUnit\" },\r\n    { label: \"Label\", key: \"Label\" },\r\n    { label: \"Weight\", key: \"Weight\" },\r\n    { label: \"Location\", key: \"Location\" },\r\n\r\n];\r\n\r\nconst testdata = {\r\n    items: [\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 28,\r\n            \"Line2kg\": 42,\r\n            \"Line1Ton\": 107,\r\n            \"DateTime\": \"15/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 19,\r\n            \"Line2kg\": 48,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"15/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 23,\r\n            \"Line2kg\": 25,\r\n            \"Line1Ton\": 123,\r\n            \"DateTime\": \"16/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 20,\r\n            \"Line2kg\": 51,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"16/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 2,\r\n            \"Line2kg\": 10,\r\n            \"Line1Ton\": 25,\r\n            \"DateTime\": \"17/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"17/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"23/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 28,\r\n            \"Line2kg\": 42,\r\n            \"Line1Ton\": 107,\r\n            \"DateTime\": \"15/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 19,\r\n            \"Line2kg\": 48,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"15/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 23,\r\n            \"Line2kg\": 25,\r\n            \"Line1Ton\": 123,\r\n            \"DateTime\": \"16/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 20,\r\n            \"Line2kg\": 51,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"16/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 2,\r\n            \"Line2kg\": 10,\r\n            \"Line1Ton\": 25,\r\n            \"DateTime\": \"17/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"17/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"23/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 28,\r\n            \"Line2kg\": 42,\r\n            \"Line1Ton\": 107,\r\n            \"DateTime\": \"15/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 19,\r\n            \"Line2kg\": 48,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"15/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 23,\r\n            \"Line2kg\": 25,\r\n            \"Line1Ton\": 123,\r\n            \"DateTime\": \"16/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 20,\r\n            \"Line2kg\": 51,\r\n            \"Line1Ton\": 120,\r\n            \"DateTime\": \"16/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 2,\r\n            \"Line2kg\": 10,\r\n            \"Line1Ton\": 25,\r\n            \"DateTime\": \"17/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"17/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"18/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"19/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"20/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"21/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"22/06/2022 19:00:00\",\r\n            \"Shift\": \"Night\"\r\n        },\r\n        {\r\n            \"Line50kg\": 0,\r\n            \"Line1kg\": 0,\r\n            \"Line2kg\": 0,\r\n            \"Line1Ton\": 0,\r\n            \"DateTime\": \"23/06/2022 07:00:00\",\r\n            \"Shift\": \"Morning\"\r\n        }\r\n\r\n    ]\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Title } = Typography\r\n\r\n\r\nlet line, stackedColumnPlot\r\n\r\nconst EnergyUsage = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [Loading, setLoading] = useState(false);\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n    const [sortedInfo2, setSortedInfo2] = useState({});\r\n\r\n\r\n    const LogColumbPerTime = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 40,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo2.columnKey === 'DateTime' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n        {\r\n            title: 'Shift',\r\n            width: 20,\r\n            dataIndex: 'Shift',\r\n            key: 'Shift',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Morning',\r\n                    value: 'Morning',\r\n                },\r\n                {\r\n                    text: 'Night',\r\n                    value: 'Night',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Shift.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: 'Tag',\r\n            width: 60,\r\n            dataIndex: 'Tag',\r\n            key: 'Tag',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Id Unit',\r\n            width: 20,\r\n            dataIndex: 'IdUnit',\r\n            key: 'IdUnit',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.IdUnit - b.IdUnit,\r\n            sortOrder: sortedInfo2.columnKey === 'IdUnit' ? sortedInfo2.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: 'Label',\r\n            width: 20,\r\n            dataIndex: 'Label',\r\n            key: 'Label',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Line50kg',\r\n                    value: 'Line50kg',\r\n                },\r\n                {\r\n                    text: 'Line1kg',\r\n                    value: 'Line1kg',\r\n                },\r\n                {\r\n                    text: 'Line2kg',\r\n                    value: 'Line2kg',\r\n                },\r\n                {\r\n                    text: 'Line1Ton',\r\n                    value: 'Line1Ton',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Label.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: 'Weight',\r\n            width: 20,\r\n            dataIndex: 'Weight',\r\n            key: 'Weight',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Location',\r\n            width: 20,\r\n            dataIndex: 'Location',\r\n            key: 'Location',\r\n            align: 'center',\r\n        },\r\n    ]\r\n\r\n    const handleChangeOverall = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const handleChangePertime = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setSortedInfo2(sorter);\r\n    };\r\n\r\n    const EvenLogRequest = async () => {\r\n        let response = await MSM_EventLog_request(RequestDataOption, EventLogRequestRange[0], EventLogRequestRange[1])\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        EventLogSorted = EventSortTimeMSM(response)\r\n        // console.log(EventLogSorted);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    // const Form = () => {\r\n    //     // a local state to store the currently selected file.\r\n    //     // const [selectedFile, setSelectedFile] = React.useState(null);\r\n\r\n    //     // const handleSubmit = (event) => {\r\n    //     //   event.preventDefault()\r\n    //       const formData = new FormData();\r\n    //       formData.append(\"LetterHead\", LetterHead);\r\n    //       formData.append(\"LetterFoot\", LetterFoot);\r\n    //       formData.append(\"data\", LetterFoot);\r\n\r\n    //     }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Reffect');\r\n\r\n        stackedColumnPlot = new Column('container', {\r\n            data: responseSorted,\r\n            isStack: true,\r\n            xField: 'date',\r\n            yField: 'Value',\r\n            seriesField: 'type',\r\n            label: {\r\n                position: 'middle',\r\n                layout: [\r\n                    { type: 'interval-adjust-position' },\r\n                    { type: 'interval-hide-overlap' },\r\n                    { type: 'adjust-color' },\r\n                ],\r\n            },\r\n            annotations,\r\n        });\r\n\r\n        try {\r\n            BarChartInit()\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        try { stackedColumnPlot.render(); }\r\n        catch { }\r\n\r\n        return () => {\r\n            stackedColumnPlot.destroy()\r\n        }\r\n    }, [])\r\n\r\n\r\n    const BarChartInit = async () => {\r\n        // setLoading(true)\r\n        // console.log(Parameter)\r\n        let response = await MSM_logdata_request(RequestDataOption_Daily, BarChartRange[0], BarChartRange[1])\r\n        let BarChartData = DataSortTimeMSM(response)\r\n\r\n        try {\r\n            stackedColumnPlot.changeData(BarChartData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        console.log(BarChartData);\r\n        // setLoading(false)\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 70,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '50 kG',\r\n            width: 70,\r\n            dataIndex: 'Line50kg',\r\n            key: 'Line50kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50kg - b.Line50kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 kG',\r\n            width: 70,\r\n            dataIndex: 'Line1kg',\r\n            key: 'Line1kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1kg - b.Line1kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 kG',\r\n            width: 70,\r\n            dataIndex: 'Line2kg',\r\n            key: 'Line2kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2kg - b.Line2kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 Ton',\r\n            width: 70,\r\n            dataIndex: 'Line1Ton',\r\n            key: 'Line1Ton',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1Ton - b.Line1Ton,\r\n            sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const LogColumbShift = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 50,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) =>\r\n                new Date(moment(a.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")) -\r\n                new Date(moment(b.DateTime, \"YYYY/MM/DD hh:mm:ss \").format(\"LLL\")),\r\n\r\n            sortOrder: sortedInfo.columnKey === 'DateTime' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n        {\r\n            title: 'Shift',\r\n            width: 20,\r\n            dataIndex: 'Shift',\r\n            key: 'Shift',\r\n            align: 'center',\r\n\r\n            filters: [\r\n                {\r\n                    text: 'Morning',\r\n                    value: 'Morning',\r\n                },\r\n                {\r\n                    text: 'Night',\r\n                    value: 'Night',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.Shift.indexOf(value) === 0,\r\n        },\r\n\r\n        {\r\n            title: '50 KG',\r\n            width: 35,\r\n            dataIndex: 'Line50kg',\r\n            key: 'Line50kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50kg - b.Line50kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line50kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 35,\r\n            dataIndex: 'Line1kg',\r\n            key: 'Line1kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1kg - b.Line1kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line1kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 35,\r\n            dataIndex: 'Line2kg',\r\n            key: 'Line2kg',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line2kg - b.Line2kg,\r\n            sortOrder: sortedInfo.columnKey === 'Line2kg' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 35,\r\n            dataIndex: 'Line1Ton',\r\n            key: 'Line1Ton',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line1Ton - b.Line1Ton,\r\n            sortOrder: sortedInfo.columnKey === 'Line1Ton' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n\r\n    ]\r\n\r\n    const DailyLogRequest = async (type, Model) => {\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        console.log(DailyLogRequestRange);\r\n        let response = []\r\n\r\n        switch (type) {\r\n            case 'shift':\r\n                response = await MSM_logdata_request(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1])\r\n                ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                LogPDF.items = ShiftLogSorted\r\n\r\n                console.log(ShiftLogSorted);\r\n                break;\r\n\r\n            case 'daily':\r\n                response = await MSM_logdata_request(RequestDataOption_Daily, RequestDateRange[0], RequestDateRange[1])\r\n                DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                console.log(DailyLogSorted);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const ExportPDF = async (type, Model) => {\r\n        //  let DailyLogSorted = LogDataMappingTimeMSM(MSMTable,response)   \r\n        console.log(DailyLogRequestRange);\r\n\r\n        let response = []\r\n\r\n        switch (type) {\r\n            case 'shift':\r\n                response = await MSM_ReportRequest(RequestDataOption_shift, DailyLogRequestRange[0], DailyLogRequestRange[1], LetterHead, LetterFoot)\r\n                // ShiftLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                // console.log(ShiftLogSorted);\r\n                break;\r\n\r\n            case 'daily':\r\n                response = await MSM_ReportRequest(RequestDataOption_Daily, RequestDateRange[0], RequestDateRange[1], LetterHead, LetterFoot)\r\n                // DailyLogSorted = LogDataMappingNameMSM(Model, DataSortTimeMSM(response), type)\r\n                // console.log(DailyLogSorted);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        // setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const ChangeDateRange = (value, type) => {\r\n\r\n        switch (type) {\r\n            case 'Daily':\r\n                RequestDateRange = []\r\n                RequestDateRange = ConvertMonentToDateTime(value)\r\n                break;\r\n\r\n            case 'Event':\r\n                EventLogRequestRange = []\r\n                EventLogRequestRange = ConvertMonentToDateTime(value)\r\n                break;\r\n\r\n            case 'shift':\r\n                DailyLogRequestRange = []\r\n                DailyLogRequestRange = ConvertMonentToDateTime(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n        // console.log(RequestDateRange);\r\n    }\r\n\r\n\r\n    const ChangeOption = (value) => {\r\n\r\n        if (value === 'All') {\r\n            RequestDataOption = ['Line50kg', 'Line1kg', 'Line2kg', 'Line1Ton']\r\n        }\r\n\r\n        else {\r\n            console.log(`selected ${value}`);\r\n            RequestDataOption = []\r\n            RequestDataOption.push(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <Divider orientation=\"left\">Daily Count Log</Divider>\r\n            </div>\r\n\r\n\r\n            {/* <Spin tip=\"Loading...\" spinning={Loading} size=\"large\"> */}\r\n            <Card title={'Weekly Record'} bordered={true} style={{ width: '100%', borderRadius: 15, backgroundColor: '#ffffff' }} hoverable={true}>\r\n                <div id='container'></div>\r\n            </Card>\r\n            {/* </Spin> */}\r\n\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <Divider orientation=\"left\">Daily Log</Divider>\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <RangePicker onChange={(e) => ChangeDateRange(e, 'Daily')} />\r\n\r\n                <Button type='primary' style={{ marginLeft: '10px' }} >\r\n                    <CSVLink data={DailyLogSorted} target=\"_blank\" filename={\"DataLog.csv\"} headers={headersDaily}>\r\n                        Export\r\n                    </CSVLink>\r\n                </Button>\r\n\r\n                <Button type='primary' style={{ marginLeft: '10px' }} onClick={(e) => { DailyLogRequest('daily', MSMDailyTable) }}>Update</Button>\r\n            </div>\r\n\r\n\r\n            <Card title='Daily Log' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                <Table bordered columns={LogColumb} dataSource={DailyLogSorted} size=\"small\" scroll={{ y: 500 }}\r\n                    onChange={handleChangeOverall} pagination={false} />\r\n            </Card>\r\n\r\n            {/* shift log */}\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <Divider orientation=\"left\">Shift Log</Divider>\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <RangePicker onChange={(e) => ChangeDateRange(e, 'shift')} />\r\n\r\n                <Button type='primary' style={{ marginLeft: '10px' }} >\r\n                    <CSVLink data={ShiftLogSorted} target=\"_blank\" filename={\"ShiftLog.csv\"} headers={headersshift}>\r\n                        Export\r\n                    </CSVLink>\r\n                </Button>\r\n\r\n                <Button type='primary' style={{ marginLeft: '10px' }}>\r\n                    <PDFDownloadLink width=\"1000\" height=\"600\">\r\n                        <Invoice invoice={LogPDF} />\r\n                    </PDFDownloadLink>\r\n                </Button>\r\n\r\n                <Button type='primary' style={{ marginLeft: '10px' }} onClick={(e) => { DailyLogRequest('shift', MSMShiftTable) }}>Update</Button>\r\n            </div>\r\n\r\n            <Card title='Shift Log' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                <Table bordered columns={LogColumbShift} dataSource={ShiftLogSorted} size=\"small\" scroll={{ y: 500 }}\r\n                    onChange={handleChangeOverall} pagination={false} />\r\n            </Card>\r\n\r\n            {/* shift log */}\r\n\r\n\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n\r\n                <div style={{ paddingBottom: '10px', paddingTop: '10px' }}>\r\n                    <Divider orientation=\"left\">Event Log</Divider>\r\n                </div>\r\n\r\n                <div style={{ paddingBottom: '10px' }}>\r\n                    <RangePicker showTime onChange={(e) => ChangeDateRange(e, 'Event')} onOk={(e) => ChangeDateRange(e, 'Event')} />\r\n\r\n                    <Select defaultValue=\"Line50kg\" style={{ width: 100, marginLeft: '10px' }} onChange={ChangeOption}>\r\n                        <Option value=\"All\">All</Option>\r\n                        <Option value=\"Line50kg\">Line50kg</Option>\r\n                        <Option value=\"Line1kg\">Line1kg</Option>\r\n                        <Option value=\"Line2kg\">Line2kg</Option>\r\n                        <Option value=\"Line1Ton\">Line1Ton</Option>\r\n                    </Select>\r\n\r\n                    <Button type='primary' style={{ marginLeft: '10px' }} >\r\n                        <CSVLink data={EventLogSorted} target=\"_blank\" filename={\"EventLog.csv\"} headers={headersEvent}>\r\n                            Export\r\n                        </CSVLink>\r\n                    </Button>\r\n\r\n                    <Button type='primary' style={{ marginLeft: '10px' }} onClick={() => { EvenLogRequest() }}>Update</Button>\r\n                </div>\r\n\r\n                <Card title='Event Log' bordered={true}\r\n                    style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                    <Table bordered columns={LogColumbPerTime} dataSource={EventLogSorted} scroll={{ x: 600, y: 750 }} pagination={true} size=\"small\" onChange={handleChangePertime} />\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            <Fragment>\r\n                <PDFDownloadLink width=\"1000\" height=\"600\">\r\n                    <Invoice invoice={LogPDF} />\r\n                </PDFDownloadLink>\r\n            </Fragment>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnergyUsage\r\n\r\n"]},"metadata":{},"sourceType":"module"}