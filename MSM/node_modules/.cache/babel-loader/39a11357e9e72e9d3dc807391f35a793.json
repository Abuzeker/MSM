{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1McG.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Col, Divider, Row, Table, Select, DatePicker } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request, RealtimeData_Request } from '../../api';\nimport { C3Model, C3ModelMap, G2Model } from '../../DataRequest/DataModel';\nimport { DataSortTime } from '../../DataRequest/LogDataRequestWrap';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport HMIWrapper from '../Realtime/HMIWrapper';\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport PolymerC3 from './HMI/PolymerC3';\nimport PolymerG2 from './HMI/PolymerG2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Para = ['PROPERTY_1', 'PROPERTY_2', 'PROPERTY_3', 'PROPERTY_4', 'PROPERTY_5'];\nlet RealTimeValue = {\n  \"MGTable\": []\n};\nlet LogValue = {\n  \"MCTable\": [],\n  \"McSelected\": []\n};\nconst columns = [{\n  title: 'Parameter',\n  dataIndex: 'Label'\n}, {\n  title: 'Value',\n  dataIndex: 'Value'\n}, {\n  title: 'Update Time',\n  dataIndex: 'time'\n}];\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\n\nconst Line1McG = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0,\n    count2: 100\n  });\n\n  const DataRequest = async (label, site, page, line, HMIName, TableName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[TableName] = DataSortRT(response);\n    RealTimeValue[HMIName] = RealTimeValue[TableName];\n    console.log(RealTimeValue[HMIName]);\n  };\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = DataSortTime(response);\n    LogValue[BufferName] = data; // console.log(response);\n\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const RenderNewData = () => {\n    DataRequest(Para, 'Polymerlink', '1', 'Maguire C3', 'C3HMI', \"MGTable\");\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  useEffect(() => {\n    RenderNewData();\n    const interval = setInterval(() => {\n      RenderNewData();\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: \"Parameter List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          xs: 24,\n          xl: 24,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            underline: true,\n            children: 'C3 Mcguire'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            title: \"RealTime\",\n            bordered: true,\n            style: {\n              width: '100%',\n              borderRadius: 15\n            },\n            hoverable: true,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              columns: columns,\n              dataSource: RealTimeValue['MGTable'],\n              size: \"small\",\n              scroll: {\n                y: 500\n              },\n              pagination: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      size: \"middle\",\n      placeholder: \"Please select\",\n      defaultValue: [OptionG2[0], OptionG2[1]],\n      style: {\n        width: '100%',\n        paddingBottom: '20px'\n      },\n      onChange: ChangeG2Select,\n      children: OptionSelectorG2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Log Value G2\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        marginBottom: '10px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsG2,\n        dataSource: LogValue['G2Table'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1McG, \"rXqzy+Iwwg8J4t1yOm428PBbTGQ=\");\n\n_c = Line1McG;\nexport default Line1McG;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1McG\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1McG.jsx"],"names":["Button","Card","Col","Divider","Row","Table","Select","DatePicker","Title","React","useState","useEffect","logdata_request","RealtimeData_Request","C3Model","C3ModelMap","G2Model","DataSortTime","DataSortRT","HMIWrapper","RealTimeGraphWrapper","RealTimeTableWrapper","PolymerC3","PolymerG2","Para","RealTimeValue","LogValue","columns","title","dataIndex","RangePicker","Option","Line1McG","state","setState","count","count2","DataRequest","label","site","page","line","HMIName","TableName","response","console","log","UpdateTableData","Parameter","StartTime","EndTime","Site","Line","Page","BufferName","Model","data","RenderNewData","interval","setInterval","clearInterval","width","borderRadius","y","OptionG2","paddingBottom","ChangeG2Select","OptionSelectorG2","marginBottom","columnsG2"],"mappings":"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","sourcesContent":["import { Button, Card, Col, Divider, Row, Table, Select, DatePicker } from 'antd'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { logdata_request, RealtimeData_Request } from '../../api'\r\nimport { C3Model, C3ModelMap, G2Model } from '../../DataRequest/DataModel'\r\nimport { DataSortTime } from '../../DataRequest/LogDataRequestWrap'\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport HMIWrapper from '../Realtime/HMIWrapper'\r\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper'\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper'\r\nimport PolymerC3 from './HMI/PolymerC3'\r\nimport PolymerG2 from './HMI/PolymerG2'\r\n\r\n\r\n\r\nconst Para = [\r\n    'PROPERTY_1','PROPERTY_2','PROPERTY_3','PROPERTY_4','PROPERTY_5'\r\n]\r\n\r\nlet RealTimeValue = {\r\n    \"MGTable\": [],\r\n}\r\n\r\nlet LogValue = {\r\n    \"MCTable\": [],\r\n    \"McSelected\": [],\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Parameter',\r\n        dataIndex: 'Label',\r\n    },\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n    },\r\n    {\r\n        title: 'Update Time',\r\n        dataIndex: 'time',\r\n    },\r\n];\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nconst Line1McG = () => {\r\n\r\n    const [state, setState] = useState({ count: 0, count2: 100 });\r\n\r\n    const DataRequest = async (label, site, page, line, HMIName, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[TableName] = DataSortRT(response)\r\n        RealTimeValue[HMIName] = RealTimeValue[TableName]\r\n        console.log(RealTimeValue[HMIName]);\r\n    }\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n        LogValue[BufferName] = data\r\n        // console.log(response);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest(Para, 'Polymerlink', '1', 'Maguire C3', 'C3HMI', \"MGTable\")\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        RenderNewData()\r\n\r\n        const interval = setInterval(() => {\r\n            RenderNewData()\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <HMIWrapper Tab={['C3', 'G2']}>\r\n                <PolymerC3 key={'C3'} Parameter={RealTimeValue['C3HMI']} />\r\n                <PolymerG2 key={'G2'} Parameter={RealTimeValue['G2HMI']} />\r\n            </HMIWrapper> */}\r\n\r\n            <Divider orientation=\"left\">Parameter List</Divider>\r\n\r\n            <div>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={12} xs={24} xl={24}>\r\n                        <Title level={2} underline>\r\n                            {'C3 Mcguire'}\r\n                        </Title>\r\n                        <Card title='RealTime' bordered={true}\r\n                            style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                            <Table bordered columns={columns} dataSource={RealTimeValue['MGTable']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Select\r\n                mode=\"multiple\"\r\n                size=\"middle\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={[OptionG2[0], OptionG2[1]]}\r\n                style={{ width: '100%', paddingBottom: '20px'   }}\r\n                onChange={ChangeG2Select}\r\n\r\n            >\r\n                {OptionSelectorG2}\r\n            </Select>\r\n\r\n            <Card title='Log Value G2' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                <Table bordered columns={columnsG2} dataSource={LogValue['G2Table']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1McG\r\n"]},"metadata":{},"sourceType":"module"}