{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Realtime\\\\RealTimeGraphWrapper.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst RealTimeGraphWrapper = props => {\n  const LabelOption = [];\n  const LabelList = Object.keys(props.DataModel);\n  LabelList.forEach(element => {\n    LabelOption.push( /*#__PURE__*/_jsxDEV(Option, {\n      children: element\n    }, element, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this));\n  });\n  console.log(LabelOption);\n\n  const handleChange = value => {\n    console.log(`Selected: ${value}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      placeholder: \"Please select\",\n      defaultValue: LabelOption[0],\n      onChange: handleChange,\n      style: {\n        width: '100%'\n      },\n      children: LabelOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: props.GarphTitle,\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        backgroundColor: '#f0f9fa'\n      },\n      hoverable: true,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RealTimeGraphWrapper;\nexport default RealTimeGraphWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"RealTimeGraphWrapper\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Realtime/RealTimeGraphWrapper.jsx"],"names":["React","useState","useEffect","Card","Select","Option","RealTimeGraphWrapper","props","LabelOption","LabelList","Object","keys","DataModel","forEach","element","push","console","log","handleChange","value","width","GarphTitle","borderRadius","backgroundColor","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;;AAGA,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,SAAlB,CAAlB;AAEAH,EAAAA,SAAS,CAACI,OAAV,CAAkBC,OAAO,IAAI;AACzBN,IAAAA,WAAW,CAACO,IAAZ,eAAiB,QAAC,MAAD;AAAA,gBAAuBD;AAAvB,OAAaA,OAAb;AAAA;AAAA;AAAA;AAAA,YAAjB;AACH,GAFD;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYE,KAAM,EAA/B;AACH,GAFD;;AAIA,sBACI;AAAA,4BAEI,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,eAFhB;AAGI,MAAA,YAAY,EAAEX,WAAW,CAAC,CAAD,CAH7B;AAII,MAAA,QAAQ,EAAEU,YAJd;AAKI,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OALX;AAAA,gBAOKZ;AAPL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAED,KAAK,CAACc,UAAnB;AAA+B,MAAA,QAAQ,EAAE,IAAzC;AAA+C,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBE,QAAAA,YAAY,EAAE,EAA/B;AAAmCC,QAAAA,eAAe,EAAE;AAApD,OAAtD;AAAuH,MAAA,SAAS,EAAE,IAAlI;AAAA,gBACKhB,KAAK,CAACiB;AADX;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArCD;;KAAMlB,oB;AAuCN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Card, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\n\r\nconst RealTimeGraphWrapper = (props) => {\r\n\r\n    const LabelOption = []\r\n    const LabelList = Object.keys(props.DataModel)\r\n\r\n    LabelList.forEach(element => {\r\n        LabelOption.push(<Option key={element}>{element}</Option>);\r\n    });\r\n\r\n\r\n    console.log(LabelOption);\r\n\r\n    const handleChange = (value) => {\r\n        console.log(`Selected: ${value}`);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={LabelOption[0]}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {LabelOption}\r\n            </Select>\r\n\r\n            \r\n\r\n            <Card title={props.GarphTitle} bordered={true} style={{ width: '100%', borderRadius: 15, backgroundColor: '#f0f9fa' }} hoverable={true}>\r\n                {props.children}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RealTimeGraphWrapper\r\n"]},"metadata":{},"sourceType":"module"}