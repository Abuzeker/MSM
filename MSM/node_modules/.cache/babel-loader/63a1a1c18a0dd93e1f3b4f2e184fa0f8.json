{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\TestPage\\\\Testpage1.jsx\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\nimport { Button, Table, Tabs } from 'antd';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport Svgexporttest from './Svgexporttest'; // const columns = [\n//     {\n//         title: 'Full Name',\n//         width: 100,\n//         dataIndex: 'name',\n//         key: 'name',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Age',\n//         width: 100,\n//         dataIndex: 'age',\n//         key: 'age',\n//         fixed: 'left',\n//     },\n//     {\n//         title: 'Column 1',\n//         dataIndex: 'address',\n//         key: '1',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 2',\n//         dataIndex: 'address',\n//         key: '2',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 3',\n//         dataIndex: 'address',\n//         key: '3',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 4',\n//         dataIndex: 'address',\n//         key: '4',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 5',\n//         dataIndex: 'address',\n//         key: '5',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 6',\n//         dataIndex: 'address',\n//         key: '6',\n//         width: 150,\n//     },\n//     {\n//         title: 'Column 7',\n//         dataIndex: 'address',\n//         key: '7',\n//         width: 150,\n//     },\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\n//     {\n//         title: 'Action',\n//         key: 'operation',\n//         fixed: 'right',\n//         width: 100,\n//         render: () => <a>action</a>,\n//     },\n// ];\n// const data = [];\n// for (let i = 0; i < 100; i++) {\n//     data.push({\n//         key: i,\n//         name: `Edrward ${i}`,\n//         age: 32,\n//         address: `London Park no. ${i}`,\n//     });\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Testpage1 = () => {\n  var generateData = function (amount) {\n    var result = [];\n    var data = {\n      coin: \"100\",\n      game_group: \"GameGroup\",\n      game_name: \"XPTO2\",\n      game_version: \"25\",\n      machine: \"20485861\",\n      vlt: \"0\"\n    };\n\n    for (var i = 0; i < amount; i += 1) {\n      data.id = (i + 1).toString();\n      result.push(Object.assign({}, data));\n    }\n\n    return result;\n  };\n\n  function createHeaders(keys) {\n    var result = [];\n\n    for (var i = 0; i < keys.length; i += 1) {\n      result.push({\n        id: keys[i],\n        name: keys[i],\n        prompt: keys[i],\n        width: 65,\n        align: \"center\",\n        padding: 0\n      });\n    }\n\n    return result;\n  }\n\n  var headers = createHeaders([\"id\", \"coin\", \"game_group\", \"game_name\", \"game_version\", \"machine\", \"vlt\"]);\n\n  const generateDataa = () => {\n    doc.table(1, 1, generateData(100), headers, {\n      autoSize: true\n    });\n  };\n\n  var doc = new jsPDF({\n    putOnlyUsedFonts: true,\n    orientation: \"landscape\"\n  }); //   doc.table(1, 1, generateData(100), headers, { autoSize: true });\n\n  const convertCanvas = () => {\n    const input = document.getElementById(\"capture\");\n    html2canvas(input, {\n      scale: 6\n    }).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/jpeg\");\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        type: 'a4'\n      }); //const imgProps = pdf.getImageProperties(imgData);\n\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = pdf.internal.pageSize.getHeight();\n      pdf.addImage(imgData, 'SVG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save('download.pdf');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"generateDataa\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Testpage1;\nexport default Testpage1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage1\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/TestPage/Testpage1.jsx"],"names":["React","Page","Text","View","Document","StyleSheet","ReactPDF","PDFDownloadLink","Button","Table","Tabs","html2canvas","jsPDF","Svgexporttest","Testpage1","generateData","amount","result","data","coin","game_group","game_name","game_version","machine","vlt","i","id","toString","push","Object","assign","createHeaders","keys","length","name","prompt","width","align","padding","headers","generateDataa","doc","table","autoSize","putOnlyUsedFonts","orientation","convertCanvas","input","document","getElementById","scale","then","canvas","imgData","toDataURL","pdf","type","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","addImage","save"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, ReactPDF, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Button, Table, Tabs } from 'antd';\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\nimport Svgexporttest from './Svgexporttest';\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Full Name',\r\n//         width: 100,\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Age',\r\n//         width: 100,\r\n//         dataIndex: 'age',\r\n//         key: 'age',\r\n//         fixed: 'left',\r\n//     },\r\n//     {\r\n//         title: 'Column 1',\r\n//         dataIndex: 'address',\r\n//         key: '1',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 2',\r\n//         dataIndex: 'address',\r\n//         key: '2',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 3',\r\n//         dataIndex: 'address',\r\n//         key: '3',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 4',\r\n//         dataIndex: 'address',\r\n//         key: '4',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 5',\r\n//         dataIndex: 'address',\r\n//         key: '5',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 6',\r\n//         dataIndex: 'address',\r\n//         key: '6',\r\n//         width: 150,\r\n//     },\r\n//     {\r\n//         title: 'Column 7',\r\n//         dataIndex: 'address',\r\n//         key: '7',\r\n//         width: 150,\r\n//     },\r\n//     { title: 'Column 8', dataIndex: 'address', key: '8' },\r\n//     {\r\n//         title: 'Action',\r\n//         key: 'operation',\r\n//         fixed: 'right',\r\n//         width: 100,\r\n//         render: () => <a>action</a>,\r\n//     },\r\n// ];\r\n\r\n// const data = [];\r\n// for (let i = 0; i < 100; i++) {\r\n//     data.push({\r\n//         key: i,\r\n//         name: `Edrward ${i}`,\r\n//         age: 32,\r\n//         address: `London Park no. ${i}`,\r\n//     });\r\n// }\r\n\r\nconst Testpage1 = () => {\r\n\r\n    var generateData = function(amount) {\r\n        var result = [];\r\n        var data = {\r\n          coin: \"100\",\r\n          game_group: \"GameGroup\",\r\n          game_name: \"XPTO2\",\r\n          game_version: \"25\",\r\n          machine: \"20485861\",\r\n          vlt: \"0\"\r\n        };\r\n        for (var i = 0; i < amount; i += 1) {\r\n          data.id = (i + 1).toString();\r\n          result.push(Object.assign({}, data));\r\n        }\r\n        return result;\r\n      };\r\n      \r\n      function createHeaders(keys) {\r\n        var result = [];\r\n        for (var i = 0; i < keys.length; i += 1) {\r\n          result.push({\r\n            id: keys[i],\r\n            name: keys[i],\r\n            prompt: keys[i],\r\n            width: 65,\r\n            align: \"center\",\r\n            padding: 0\r\n          });\r\n        }\r\n        return result;\r\n      }\r\n      \r\n      var headers = createHeaders([\r\n        \"id\",\r\n        \"coin\",\r\n        \"game_group\",\r\n        \"game_name\",\r\n        \"game_version\",\r\n        \"machine\",\r\n        \"vlt\"\r\n      ]);\r\n\r\n      const generateDataa = () =>{\r\n        doc.table(1, 1, generateData(100), headers, { autoSize: true });\r\n      }\r\n      \r\n      var doc = new jsPDF({ putOnlyUsedFonts: true, orientation: \"landscape\" });\r\n    //   doc.table(1, 1, generateData(100), headers, { autoSize: true });\r\n\r\n\r\n    const convertCanvas = () => {\r\n        const input = document.getElementById(\"capture\");\r\n\r\n        html2canvas(input, { scale: 6 })\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL(\"image/jpeg\");\r\n                const pdf = new jsPDF({\r\n                    orientation: 'landscape',\r\n                    type: 'a4'\r\n                });\r\n                //const imgProps = pdf.getImageProperties(imgData);\r\n                const pdfWidth = pdf.internal.pageSize.getWidth();\r\n                const pdfHeight = pdf.internal.pageSize.getHeight();\r\n                pdf.addImage(imgData, 'SVG', 0, 0, pdfWidth, pdfHeight);\r\n                pdf.save('download.pdf');\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={MyDocument}>\r\n                capture\r\n            </Button> */}\r\n            {/* \r\n            <div id='capture' style={{ width: '100%', height: 600, borderRadius: 15, }}>\r\n            </div> */}\r\n            <div>\r\n                <generateDataa/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Testpage1\r\n"]},"metadata":{},"sourceType":"module"}