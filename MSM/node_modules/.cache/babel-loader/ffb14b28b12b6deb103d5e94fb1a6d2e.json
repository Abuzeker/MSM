{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _ = require(\"lodash\");\n\nvar RELATIONSHIP_SCHEMA_PREFIX = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\";\n/**\n * A relationship collection.\n * @ignore\n */\n\nvar Relationships = /*#__PURE__*/function () {\n  /**\n   * Creates a new instance of _Relationships.\n   * @param {{}} node - The node.\n   */\n  function Relationships(node) {\n    _classCallCheck(this, Relationships);\n\n    this._init(node);\n\n    this._getStartingId();\n  }\n  /**\n   * Add a new relationship.\n   * @param {string} type - The type of relationship.\n   * @param {string} target - The target of the relationship.\n   * @param {string} [targetMode] - The target mode of the relationship.\n   * @returns {{}} The new relationship.\n   */\n\n\n  _createClass(Relationships, [{\n    key: \"add\",\n    value: function add(type, target, targetMode) {\n      var node = {\n        name: \"Relationship\",\n        attributes: {\n          Id: \"rId\".concat(this._nextId++),\n          Type: \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type),\n          Target: target\n        }\n      };\n\n      if (targetMode) {\n        node.attributes.TargetMode = targetMode;\n      }\n\n      this._node.children.push(node);\n\n      return node;\n    }\n    /**\n     * Find a relationship by ID.\n     * @param {string} id - The relationship ID.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Id === id;\n      });\n    }\n    /**\n     * Find a relationship by type.\n     * @param {string} type - The type to search for.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n\n  }, {\n    key: \"findByType\",\n    value: function findByType(type) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Type === \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type);\n      });\n    }\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}|undefined} The XML or undefined if empty.\n     */\n\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      if (!this._node.children.length) return;\n      return this._node;\n    }\n    /**\n     * Get the starting relationship ID to use for new relationships.\n     * @private\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"_getStartingId\",\n    value: function _getStartingId() {\n      var _this = this;\n\n      this._nextId = 1;\n\n      this._node.children.forEach(function (node) {\n        var id = parseInt(node.attributes.Id.substr(3));\n        if (id >= _this._nextId) _this._nextId = id + 1;\n      });\n    }\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The relationships node.\n     * @private\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      if (!node) node = {\n        name: \"Relationships\",\n        attributes: {\n          xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n        },\n        children: []\n      };\n      this._node = node;\n    }\n  }]);\n\n  return Relationships;\n}();\n\nmodule.exports = Relationships;\n/*\nxl/_rels/workbook.xml.rels\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/>\n    <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>\n    <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/calcChain\" Target=\"calcChain.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\"/>\n</Relationships>\n*/","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/node_modules/xlsx-populate/lib/Relationships.js"],"names":["_","require","RELATIONSHIP_SCHEMA_PREFIX","Relationships","node","_init","_getStartingId","type","target","targetMode","name","attributes","Id","_nextId","Type","Target","TargetMode","_node","children","push","id","find","length","forEach","parseInt","substr","xmlns","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAMC,0BAA0B,GAAG,sEAAnC;AAEA;AACA;AACA;AACA;;IACMC,a;AACF;AACJ;AACA;AACA;AACI,yBAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKC,KAAL,CAAWD,IAAX;;AACA,SAAKE,cAAL;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;WACI,aAAIC,IAAJ,EAAUC,MAAV,EAAkBC,UAAlB,EAA8B;AAC1B,UAAML,IAAI,GAAG;AACTM,QAAAA,IAAI,EAAE,cADG;AAETC,QAAAA,UAAU,EAAE;AACRC,UAAAA,EAAE,eAAQ,KAAKC,OAAL,EAAR,CADM;AAERC,UAAAA,IAAI,YAAKZ,0BAAL,SAAkCK,IAAlC,CAFI;AAGRQ,UAAAA,MAAM,EAAEP;AAHA;AAFH,OAAb;;AASA,UAAIC,UAAJ,EAAgB;AACZL,QAAAA,IAAI,CAACO,UAAL,CAAgBK,UAAhB,GAA6BP,UAA7B;AACH;;AAED,WAAKQ,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBf,IAAzB;;AACA,aAAOA,IAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,kBAASgB,EAAT,EAAa;AACT,aAAOpB,CAAC,CAACqB,IAAF,CAAO,KAAKJ,KAAL,CAAWC,QAAlB,EAA4B,UAAAd,IAAI;AAAA,eAAIA,IAAI,CAACO,UAAL,CAAgBC,EAAhB,KAAuBQ,EAA3B;AAAA,OAAhC,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,oBAAWb,IAAX,EAAiB;AACb,aAAOP,CAAC,CAACqB,IAAF,CAAO,KAAKJ,KAAL,CAAWC,QAAlB,EAA4B,UAAAd,IAAI;AAAA,eAAIA,IAAI,CAACO,UAAL,CAAgBG,IAAhB,eAA4BZ,0BAA5B,SAAyDK,IAAzD,CAAJ;AAAA,OAAhC,CAAP;AACH;AAED;AACJ;AACA;AACA;;;;WACI,iBAAQ;AACJ,UAAI,CAAC,KAAKU,KAAL,CAAWC,QAAX,CAAoBI,MAAzB,EAAiC;AACjC,aAAO,KAAKL,KAAZ;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,0BAAiB;AAAA;;AACb,WAAKJ,OAAL,GAAe,CAAf;;AACA,WAAKI,KAAL,CAAWC,QAAX,CAAoBK,OAApB,CAA4B,UAAAnB,IAAI,EAAI;AAChC,YAAMgB,EAAE,GAAGI,QAAQ,CAACpB,IAAI,CAACO,UAAL,CAAgBC,EAAhB,CAAmBa,MAAnB,CAA0B,CAA1B,CAAD,CAAnB;AACA,YAAIL,EAAE,IAAI,KAAI,CAACP,OAAf,EAAwB,KAAI,CAACA,OAAL,GAAeO,EAAE,GAAG,CAApB;AAC3B,OAHD;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,eAAMhB,IAAN,EAAY;AACR,UAAI,CAACA,IAAL,EAAWA,IAAI,GAAG;AACdM,QAAAA,IAAI,EAAE,eADQ;AAEdC,QAAAA,UAAU,EAAE;AACRe,UAAAA,KAAK,EAAE;AADC,SAFE;AAKdR,QAAAA,QAAQ,EAAE;AALI,OAAP;AAQX,WAAKD,KAAL,GAAab,IAAb;AACH;;;;;;AAGLuB,MAAM,CAACC,OAAP,GAAiBzB,aAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst RELATIONSHIP_SCHEMA_PREFIX = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\";\n\n/**\n * A relationship collection.\n * @ignore\n */\nclass Relationships {\n    /**\n     * Creates a new instance of _Relationships.\n     * @param {{}} node - The node.\n     */\n    constructor(node) {\n        this._init(node);\n        this._getStartingId();\n    }\n\n    /**\n     * Add a new relationship.\n     * @param {string} type - The type of relationship.\n     * @param {string} target - The target of the relationship.\n     * @param {string} [targetMode] - The target mode of the relationship.\n     * @returns {{}} The new relationship.\n     */\n    add(type, target, targetMode) {\n        const node = {\n            name: \"Relationship\",\n            attributes: {\n                Id: `rId${this._nextId++}`,\n                Type: `${RELATIONSHIP_SCHEMA_PREFIX}${type}`,\n                Target: target\n            }\n        };\n\n        if (targetMode) {\n            node.attributes.TargetMode = targetMode;\n        }\n\n        this._node.children.push(node);\n        return node;\n    }\n\n    /**\n     * Find a relationship by ID.\n     * @param {string} id - The relationship ID.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n    findById(id) {\n        return _.find(this._node.children, node => node.attributes.Id === id);\n    }\n\n    /**\n     * Find a relationship by type.\n     * @param {string} type - The type to search for.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n    findByType(type) {\n        return _.find(this._node.children, node => node.attributes.Type === `${RELATIONSHIP_SCHEMA_PREFIX}${type}`);\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}|undefined} The XML or undefined if empty.\n     */\n    toXml() {\n        if (!this._node.children.length) return;\n        return this._node;\n    }\n\n    /**\n     * Get the starting relationship ID to use for new relationships.\n     * @private\n     * @returns {undefined}\n     */\n    _getStartingId() {\n        this._nextId = 1;\n        this._node.children.forEach(node => {\n            const id = parseInt(node.attributes.Id.substr(3));\n            if (id >= this._nextId) this._nextId = id + 1;\n        });\n    }\n\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The relationships node.\n     * @private\n     * @returns {undefined}\n     */\n    _init(node) {\n        if (!node) node = {\n            name: \"Relationships\",\n            attributes: {\n                xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n            },\n            children: []\n        };\n\n        this._node = node;\n    }\n}\n\nmodule.exports = Relationships;\n\n/*\nxl/_rels/workbook.xml.rels\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/>\n    <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>\n    <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/calcChain\" Target=\"calcChain.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\"/>\n</Relationships>\n*/\n\n"]},"metadata":{},"sourceType":"script"}