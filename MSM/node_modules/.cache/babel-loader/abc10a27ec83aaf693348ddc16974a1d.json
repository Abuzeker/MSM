{"ast":null,"code":"import React from 'react';\nimport { RealtimeData_Request } from '../api';\nimport moment from 'moment';\nexport const DataRequest = async (label, site, page, line) => {\n  const response = await RealtimeData_Request(label, site, page, line).then(response => {\n    if (response.success !== false) {\n      const data = response.Data;\n      let DataReturn = data.map(obj => {\n        let cobj = [];\n        let ar0 = moment(obj.fields.LastChange).utc(true).format('YYYY-MM-DD HH:mm:ss');\n        cobj = {\n          'time': ar0,\n          'Label': obj.fields.Label,\n          'Value': obj.fields.Value,\n          'Line': obj.fields.Line,\n          'key': obj.fields.Label,\n          'Page': obj.fields.Page\n        };\n        return cobj;\n      });\n      return DataReturn; // console.log(DataReturn);\n    } else {\n      console.log('Data Request Error');\n    }\n  });\n};\n_c = DataRequest;\nexport const RealTimeRequestWrap = props => {};\n_c2 = RealTimeRequestWrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataRequest\");\n$RefreshReg$(_c2, \"RealTimeRequestWrap\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/DataRequest/RealTimeRequestWrap.js"],"names":["React","RealtimeData_Request","moment","DataRequest","label","site","page","line","response","then","success","data","Data","DataReturn","map","obj","cobj","ar0","fields","LastChange","utc","format","Label","Value","Line","Page","console","log","RealTimeRequestWrap","props"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAIA,OAAO,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,KAAmC;AAE1D,QAAMC,QAAQ,GAAG,MAAMP,oBAAoB,CAACG,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,CAApB,CAClBE,IADkB,CACZD,QAAD,IAAc;AAChB,QAAIA,QAAQ,CAACE,OAAT,KAAqB,KAAzB,EAAgC;AAC5B,YAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAtB;AAEA,UAAIC,UAAU,GAAGF,IAAI,CAACG,GAAL,CAASC,GAAG,IAAI;AAC7B,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIC,GAAG,GAAGf,MAAM,CAACa,GAAG,CAACG,MAAJ,CAAWC,UAAZ,CAAN,CAA8BC,GAA9B,CAAkC,IAAlC,EAAwCC,MAAxC,CAA+C,qBAA/C,CAAV;AAEAL,QAAAA,IAAI,GAAG;AACH,kBAAQC,GADL;AAEH,mBAASF,GAAG,CAACG,MAAJ,CAAWI,KAFjB;AAGH,mBAASP,GAAG,CAACG,MAAJ,CAAWK,KAHjB;AAIH,kBAAQR,GAAG,CAACG,MAAJ,CAAWM,IAJhB;AAKH,iBAAOT,GAAG,CAACG,MAAJ,CAAWI,KALf;AAMH,kBAAQP,GAAG,CAACG,MAAJ,CAAWO;AANhB,SAAP;AAQA,eAAOT,IAAP;AACH,OAbgB,CAAjB;AAcA,aAAOH,UAAP,CAjB4B,CAkB5B;AACH,KAnBD,MAoBK;AACDa,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,GAzBkB,CAAvB;AA4BH,CA9BM;KAAMxB,W;AAgCb,OAAO,MAAMyB,mBAAmB,GAAIC,KAAD,IAAW,CAG7C,CAHM;MAAMD,mB","sourcesContent":["import React from 'react'\r\nimport { RealtimeData_Request } from '../api'\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport const DataRequest = async (label, site, page, line) => {\r\n\r\n    const response = await RealtimeData_Request(label, site, page, line)\r\n        .then((response) => {\r\n            if (response.success !== false) {\r\n                const data = response.Data\r\n\r\n                let DataReturn = data.map(obj => {\r\n                    let cobj = []\r\n                    let ar0 = moment(obj.fields.LastChange).utc(true).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n                    cobj = {\r\n                        'time': ar0,\r\n                        'Label': obj.fields.Label,\r\n                        'Value': obj.fields.Value,\r\n                        'Line': obj.fields.Line,\r\n                        'key': obj.fields.Label,\r\n                        'Page': obj.fields.Page,\r\n                    }\r\n                    return cobj\r\n                })\r\n                return DataReturn\r\n                // console.log(DataReturn);\r\n            }\r\n            else {\r\n                console.log('Data Request Error');\r\n            }\r\n        })\r\n\r\n\r\n}\r\n\r\nexport const RealTimeRequestWrap = (props) => {\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}