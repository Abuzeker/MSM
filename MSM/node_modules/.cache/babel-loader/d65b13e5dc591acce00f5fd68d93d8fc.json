{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1Report.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request } from '../../api';\nimport { DataSortTime, LogDataMappingTime, TableColumbTimeAsRow, TableColumbLabelAsRow } from '../../DataRequest/LogDataRequestWrap';\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\nimport TimeTableWrapper from '../Report/TimeTableWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LogValue = {\n  \"LogC3\": [],\n  \"LogG2\": []\n};\nconst ColumbC3 = TableColumbTimeAsRow();\nconst ColumbG2 = TableColumbLabelAsRow(G2Model);\n_c = ColumbG2;\n\nconst Line1Report = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = DataSortTime(response);\n    LogValue[BufferName] = LogDataMappingTime(Model, data);\n    setState(_ref => {\n      let {\n        count\n      } = _ref;\n      return {\n        count: count + 1\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimeTableWrapper, {\n      SetTimeRangeCallBack: UpdateTableData,\n      LogValue: LogValue['LogC3'],\n      Columb: ColumbC3,\n      site: 'C3',\n      page: '1',\n      BufferName: \"LogC3\",\n      Model: C3Model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimeTableWrapper, {\n      SetTimeRangeCallBack: UpdateTableData,\n      LogValue: LogValue['LogG2'],\n      Columb: ColumbG2,\n      site: 'G2',\n      page: '1',\n      BufferName: \"LogG2\",\n      Model: G2Model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1Report, \"TOtJj3Zjk9A8N3grQNDDe2GZezA=\");\n\n_c2 = Line1Report;\nexport default Line1Report;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColumbG2\");\n$RefreshReg$(_c2, \"Line1Report\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1Report.jsx"],"names":["React","useState","useEffect","logdata_request","DataSortTime","LogDataMappingTime","TableColumbTimeAsRow","TableColumbLabelAsRow","C3Model","G2Model","TimeTableWrapper","LogValue","ColumbC3","ColumbG2","Line1Report","state","setState","count","UpdateTableData","Parameter","StartTime","EndTime","Site","Line","Page","BufferName","Model","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA4CC,oBAA5C,EAAkEC,qBAAlE,QAA+F,sCAA/F;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,6BAAjC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,IAAIC,QAAQ,GAAG;AACX,WAAS,EADE;AAEX,WAAS;AAFE,CAAf;AAKA,MAAMC,QAAQ,GAAGN,oBAAoB,EAArC;AACA,MAAMO,QAAQ,GAAEN,qBAAqB,CAACE,OAAD,CAArC;KAAMI,Q;;AAEN,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;;AAEA,QAAMC,eAAe,GAAG,OAAOC,SAAP,EAAkBC,SAAlB,EAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkDC,IAAlD,EAAwDC,UAAxD,EAAoEC,KAApE,KAA8E;AAClG,UAAMC,QAAQ,GAAG,MAAMxB,eAAe,CAACgB,SAAD,EAAYC,SAAZ,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,IAA5C,CAAtC;AACA,QAAII,IAAI,GAAGxB,YAAY,CAACuB,QAAD,CAAvB;AACAhB,IAAAA,QAAQ,CAACc,UAAD,CAAR,GAAuBpB,kBAAkB,CAACqB,KAAD,EAAQE,IAAR,CAAzC;AACAZ,IAAAA,QAAQ,CAAC;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAgB;AAAEA,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,OAAhB;AAAA,KAAD,CAAR;AACH,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,oBAAoB,EAAEC,eAAxC;AACI,MAAA,QAAQ,EAAEP,QAAQ,CAAC,OAAD,CADtB;AACiC,MAAA,MAAM,EAAEC,QADzC;AAEI,MAAA,IAAI,EAAE,IAFV;AAEgB,MAAA,IAAI,EAAE,GAFtB;AAE2B,MAAA,UAAU,EAAE,OAFvC;AAEgD,MAAA,KAAK,EAAEJ;AAFvD;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,gBAAD;AAAkB,MAAA,oBAAoB,EAAEU,eAAxC;AACI,MAAA,QAAQ,EAAEP,QAAQ,CAAC,OAAD,CADtB;AACiC,MAAA,MAAM,EAAEE,QADzC;AAEI,MAAA,IAAI,EAAE,IAFV;AAEgB,MAAA,IAAI,EAAE,GAFtB;AAE2B,MAAA,UAAU,EAAE,OAFvC;AAEgD,MAAA,KAAK,EAAEJ;AAFvD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1BD;;GAAMK,W;;MAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { logdata_request } from '../../api';\r\nimport { DataSortTime, LogDataMappingTime,  TableColumbTimeAsRow, TableColumbLabelAsRow } from '../../DataRequest/LogDataRequestWrap';\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\r\nimport TimeTableWrapper from '../Report/TimeTableWrapper';\r\n\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nconst ColumbC3 = TableColumbTimeAsRow()\r\nconst ColumbG2= TableColumbLabelAsRow(G2Model)\r\n\r\nconst Line1Report = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n        LogValue[BufferName] = LogDataMappingTime(Model, data)\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TimeTableWrapper SetTimeRangeCallBack={UpdateTableData}\r\n                LogValue={LogValue['LogC3']} Columb={ColumbC3}\r\n                site={'C3'} page={'1'} BufferName={\"LogC3\"} Model={C3Model}\r\n            />\r\n\r\n            <TimeTableWrapper SetTimeRangeCallBack={UpdateTableData}\r\n                LogValue={LogValue['LogG2']} Columb={ColumbG2}\r\n                site={'G2'} page={'1'} BufferName={\"LogG2\"} Model={G2Model}\r\n            />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Line1Report\r\n"]},"metadata":{},"sourceType":"module"}