{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Report\\\\EditReportForm.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { Form, Input, Button, DatePicker, Modal } from 'antd';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst EditReportForm = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [visible, setVisible] = useState(false);\n  const InitialValue = {\n    'Job': props.InfoData['Job No'],\n    'Job Period': [moment(props.InfoData['Start Time'], \"DD-MM-yyyy HH:mm:ss\"), moment(props.InfoData['End Time'], \"DD-MM-yyyy HH:mm:ss\")],\n    'Color': props.InfoData['Color'],\n    'Grade': props.InfoData['Grade'],\n    'Actual Product': props.InfoData['Actual Product'],\n    'Estimated Rate': props.InfoData['Estimated Rate']\n  };\n\n  const CollectionCreateForm = ({\n    visible,\n    onCreate,\n    onCancel\n  }) => {\n    _s();\n\n    const [form] = Form.useForm();\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      title: \"New Job\",\n      okText: \"Create\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      onOk: () => {\n        form.validateFields().then(values => {\n          form.resetFields();\n          onCreate(values);\n        }).catch(info => {\n          console.log('Validate Failed:', info);\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        name: \"form_in_modal\",\n        initialValues: InitialValue,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Job\",\n          label: \"Job No\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.InfoData['Job No']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Job Period\",\n          label: \"Job Period\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(RangePicker, {\n            showTime: true,\n            defaultValue: [moment(props.InfoData['Start Time'], \"DD-MM-yyyy HH:mm:ss\"), moment(props.InfoData['End Time'], \"DD-MM-yyyy HH:mm:ss\")],\n            format: \"DD-MM-yyyy HH:mm:ss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Grade\",\n          label: \"Grade\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.InfoData['Grade']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Color\",\n          label: \"Color\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.InfoData['Color']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Estimated Rate\",\n          label: \"Estimated Rate (Kg/hr)\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.InfoData['Estimated Rate']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Actual Product\",\n          label: \"Actual Product (kg)\",\n          rules: [{\n            required: true,\n            message: 'Please input the title of collection!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.InfoData['Actual Product']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(CollectionCreateForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n    return [Form.useForm];\n  });\n\n  console.log('Repos');\n  useEffect(() => {\n    console.log('red'); // setVisible(props.Visibility)\n\n    return () => {};\n  }, []);\n\n  const onCreate = values => {\n    console.log('Received values of form: ', values);\n    let info = {};\n    let DateTime = values['Job Period'];\n    info.info1 = values['Job'];\n    info.info2 = values['Grade'];\n    info.info3 = values['Color'];\n    info.info4 = values['Estimated Rate'];\n    info.info5 = values['Actual Product'];\n    let StartTime = DateTime[0].toISOString(false).split('.')[0] + \"Z\";\n    let EndTime = DateTime[1].toISOString(false).split('.')[0] + \"Z\";\n    console.log(values); // props.CreateJobCallBack(info, StartTime, EndTime, props.site, props.line)\n\n    setVisible(false);\n  };\n\n  const onCancel = () => {\n    props.callbackClose();\n  };\n\n  const setVisibleHandler = () => {\n    setVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"New Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CollectionCreateForm, {\n      visible: props.Visibility,\n      onCreate: onCreate,\n      onCancel: () => {\n        onCancel();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(EditReportForm, \"cz/DzCD06IMMsoBJ0A1IgCy1P5M=\");\n\n_c = EditReportForm;\nexport default EditReportForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditReportForm\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Report/EditReportForm.jsx"],"names":["Form","Input","Button","DatePicker","Modal","moment","React","useState","useEffect","RangePicker","EditReportForm","props","visible","setVisible","InitialValue","InfoData","CollectionCreateForm","onCreate","onCancel","form","useForm","validateFields","then","values","resetFields","catch","info","console","log","required","message","DateTime","info1","info2","info3","info4","info5","StartTime","toISOString","split","EndTime","callbackClose","setVisibleHandler","paddingTop","Visibility"],"mappings":"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","sourcesContent":["import {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    DatePicker,\r\n    Modal,\r\n} from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nconst EditReportForm = (props) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const InitialValue = {\r\n        'Job'           : props.InfoData['Job No' ],\r\n        'Job Period'    : [moment(props.InfoData['Start Time'], \"DD-MM-yyyy HH:mm:ss\"),moment(props.InfoData['End Time'], \"DD-MM-yyyy HH:mm:ss\")],\r\n        'Color'         : props.InfoData['Color'],\r\n        'Grade'         : props.InfoData['Grade'],\r\n        'Actual Product': props.InfoData['Actual Product'],\r\n        'Estimated Rate': props.InfoData['Estimated Rate']\r\n    }\r\n\r\n\r\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n        const [form] = Form.useForm();\r\n        return (\r\n            <Modal\r\n                visible={visible}\r\n                title=\"New Job\"\r\n                okText=\"Create\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={onCancel}\r\n                onOk={() => {\r\n                    form\r\n                        .validateFields()\r\n                        .then((values) => {\r\n                            form.resetFields();\r\n                            onCreate(values);\r\n                        })\r\n                        .catch((info) => {\r\n                            console.log('Validate Failed:', info);\r\n                        });\r\n                }}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                    name=\"form_in_modal\"\r\n                    initialValues={InitialValue}\r\n\r\n                >\r\n                    <Form.Item\r\n                        name=\"Job\"\r\n                        label=\"Job No\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input defaultValue={props.InfoData['Job No']}/>\r\n                    </Form.Item>\r\n    \r\n                    <Form.Item\r\n                        name=\"Job Period\"\r\n                        label=\"Job Period\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <RangePicker showTime \r\n                            defaultValue={[moment(props.InfoData['Start Time'], \"DD-MM-yyyy HH:mm:ss\"),moment(props.InfoData['End Time'], \"DD-MM-yyyy HH:mm:ss\")]}\r\n                            format={\"DD-MM-yyyy HH:mm:ss\"}\r\n                        />\r\n                    </Form.Item>\r\n    \r\n                    <Form.Item\r\n                        name=\"Grade\"\r\n                        label=\"Grade\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input defaultValue={props.InfoData['Grade']}/>\r\n                    </Form.Item>\r\n    \r\n                    <Form.Item\r\n                        name=\"Color\"\r\n                        label=\"Color\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input defaultValue={props.InfoData['Color']}/>\r\n                    </Form.Item>\r\n    \r\n                    <Form.Item\r\n                        name=\"Estimated Rate\"\r\n                        label=\"Estimated Rate (Kg/hr)\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input defaultValue={props.InfoData['Estimated Rate']}/>\r\n                    </Form.Item>\r\n    \r\n                    <Form.Item\r\n                        name=\"Actual Product\"\r\n                        label=\"Actual Product (kg)\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the title of collection!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input defaultValue={props.InfoData['Actual Product']}/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    console.log('Repos');\r\n\r\n    useEffect(() => {\r\n        console.log('red');\r\n        // setVisible(props.Visibility)\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    const onCreate = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        let info = {}\r\n\r\n        let DateTime = values['Job Period']\r\n        info.info1 = values['Job']\r\n        info.info2 = values['Grade']\r\n        info.info3 = values['Color']\r\n        info.info4 = values['Estimated Rate']\r\n        info.info5 = values['Actual Product']\r\n\r\n        let StartTime   = DateTime[0].toISOString(false).split('.')[0] + \"Z\"\r\n        let EndTime     = DateTime[1].toISOString(false).split('.')[0] + \"Z\"\r\n\r\n        console.log(values);\r\n\r\n        // props.CreateJobCallBack(info, StartTime, EndTime, props.site, props.line)\r\n        setVisible(false);\r\n    }\r\n\r\n    const onCancel = () =>{\r\n        props.callbackClose()\r\n    }\r\n\r\n    const setVisibleHandler = () =>{\r\n        setVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop:'10px'}}>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                New Job\r\n            </Button>\r\n            <CollectionCreateForm\r\n                visible={props.Visibility}\r\n                onCreate={onCreate}\r\n                onCancel={() => {\r\n                    onCancel()\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditReportForm\r\n\r\n"]},"metadata":{},"sourceType":"module"}