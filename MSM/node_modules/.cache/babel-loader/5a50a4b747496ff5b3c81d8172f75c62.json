{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1DataLog.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request, RealtimeData_Request } from '../../api';\nimport { C3Model, G2Model } from '../../DataRequest/DataModel';\nimport { ConvertMonentToDateTime, DataSortTime, VisualizeLogColumb } from '../../DataRequest/LogDataRequestWrap';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet C3DataModel = C3Model;\nlet G2DataModel = G2Model;\nlet BlankPage,\n    data_filter = [];\nlet C3DTRange = [],\n    G2DTRange = [];\nlet LogValue = {\n  \"C3Table\": [],\n  \"G2Table\": [],\n  \"C3Graph\": [],\n  \"G2Graph\": [],\n  \"C3Selected\": [],\n  \"G2Selected\": []\n};\nlet DateTimeRange;\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\nlet OptionC3 = Object.keys(C3Model);\n_c = OptionC3;\nlet OptionG2 = Object.keys(G2Model);\n_c2 = OptionG2;\nconst OptionSelectorC3 = [];\nconst OptionSelectorG2 = [];\nLogValue['C3Selected'] = [OptionC3[0], OptionC3[1]];\nLogValue['G2Selected'] = [OptionG2[0], OptionG2[1]];\nOptionC3.forEach(element => {\n  OptionSelectorC3.push( /*#__PURE__*/_jsxDEV(Option, {\n    children: element\n  }, element, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 27\n  }, this));\n});\nOptionG2.forEach(element => {\n  OptionSelectorG2.push( /*#__PURE__*/_jsxDEV(Option, {\n    children: element\n  }, element, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 27\n  }, this));\n});\nconst columnsC3 = VisualizeLogColumb(OptionC3);\nconst columnsG2 = VisualizeLogColumb(OptionG2);\n\nconst Line1DataLog = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    console.log('ok');\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = DataSortTime(response);\n    console.log(data);\n    LogValue[BufferName] = data; // setState(({ count }) => ({ count: count + 1 }));\n  };\n\n  const C3LogRequest = DT => {\n    C3DTRange = ConvertMonentToDateTime(DT);\n    UpdateTableData(LogValue['C3Selected'], C3DTRange[0], C3DTRange[1], 'Polymerlink', 'C3', '1', \"C3Table\", C3Model);\n  };\n\n  const G2LogRequest = DT => {\n    G2DTRange = ConvertMonentToDateTime(DT);\n    UpdateTableData(LogValue['G2Selected'], G2DTRange[0], G2DTRange[1], 'Polymerlink', 'G2', BlankPage, \"G2Table\", G2Model);\n  };\n\n  const ChangeC3Select = value => {\n    LogValue['C3Selected'] = value;\n  };\n\n  const ChangeG2Select = value => {\n    LogValue['G2Selected'] = value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n      showTime: true,\n      onOk: C3LogRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      size: \"middle\",\n      placeholder: \"Please select\",\n      defaultValue: [OptionC3[0], OptionC3[1]],\n      style: {\n        width: '100%'\n      },\n      onChange: ChangeC3Select,\n      children: OptionSelectorC3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"RealTime\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsC3,\n        dataSource: LogValue['C3Table'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n      showTime: true,\n      onOk: G2LogRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      size: \"middle\",\n      placeholder: \"Please select\",\n      defaultValue: [OptionG2[0], OptionG2[1]],\n      style: {\n        width: '100%'\n      },\n      onChange: ChangeG2Select,\n      children: OptionSelectorG2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"RealTime\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsG2,\n        dataSource: LogValue['G2Table'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1DataLog, \"TOtJj3Zjk9A8N3grQNDDe2GZezA=\");\n\n_c3 = Line1DataLog;\nexport default Line1DataLog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OptionC3\");\n$RefreshReg$(_c2, \"OptionG2\");\n$RefreshReg$(_c3, \"Line1DataLog\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1DataLog.jsx"],"names":["Button","Col","Divider","Row","DatePicker","Card","Table","Select","React","useState","useEffect","logdata_request","RealtimeData_Request","C3Model","G2Model","ConvertMonentToDateTime","DataSortTime","VisualizeLogColumb","DataSortRT","RealTimeGraphWrapper","RealTimeTableWrapper","C3DataModel","G2DataModel","BlankPage","data_filter","C3DTRange","G2DTRange","LogValue","DateTimeRange","RangePicker","Option","OptionC3","Object","keys","OptionG2","OptionSelectorC3","OptionSelectorG2","forEach","element","push","columnsC3","columnsG2","Line1DataLog","state","setState","count","UpdateTableData","Parameter","StartTime","EndTime","Site","Line","Page","BufferName","Model","console","log","response","data","C3LogRequest","DT","G2LogRequest","ChangeC3Select","value","ChangeG2Select","width","borderRadius","y"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { logdata_request, RealtimeData_Request } from '../../api'\r\nimport { C3Model, G2Model } from '../../DataRequest/DataModel'\r\nimport { ConvertMonentToDateTime, DataSortTime, VisualizeLogColumb } from '../../DataRequest/LogDataRequestWrap'\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap'\r\nimport RealTimeGraphWrapper from '../Realtime/RealTimeGraphWrapper'\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper'\r\n\r\n\r\nlet C3DataModel = C3Model\r\nlet G2DataModel = G2Model\r\nlet BlankPage, data_filter = []\r\nlet C3DTRange=[] , G2DTRange=[]\r\n\r\nlet LogValue = {\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n    \"C3Selected\":[],\r\n    \"G2Selected\":[],\r\n}\r\nlet DateTimeRange\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nlet OptionC3 = Object.keys(C3Model)\r\nlet OptionG2 = Object.keys(G2Model)\r\n\r\nconst OptionSelectorC3 = [];\r\nconst OptionSelectorG2 = [];\r\n\r\n\r\n\r\nLogValue['C3Selected'] = [OptionC3[0], OptionC3[1]];\r\nLogValue['G2Selected'] = [OptionG2[0], OptionG2[1]];\r\n\r\nOptionC3.forEach(element => {\r\n    OptionSelectorC3.push(<Option key={element}>{element}</Option>)\r\n});\r\nOptionG2.forEach(element => {\r\n    OptionSelectorG2.push(<Option key={element}>{element}</Option>)\r\n});\r\n\r\nconst columnsC3 = VisualizeLogColumb(OptionC3)\r\nconst columnsG2 = VisualizeLogColumb(OptionG2)\r\n\r\n\r\nconst Line1DataLog = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n  \r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        console.log('ok');\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n\r\n        console.log(data);\r\n\r\n         LogValue[BufferName] = data\r\n        // setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const C3LogRequest = (DT) => {\r\n        C3DTRange = ConvertMonentToDateTime(DT)\r\n        UpdateTableData(LogValue['C3Selected'], C3DTRange[0], C3DTRange[1],'Polymerlink', 'C3', '1', \"C3Table\", C3Model)\r\n    }\r\n\r\n    const G2LogRequest = (DT) => {\r\n        G2DTRange = ConvertMonentToDateTime(DT)\r\n        UpdateTableData(LogValue['G2Selected'], G2DTRange[0], G2DTRange[1], 'Polymerlink' ,'G2', BlankPage, \"G2Table\", G2Model)\r\n    }\r\n\r\n    const ChangeC3Select = (value) =>{\r\n        LogValue['C3Selected'] = value\r\n    }\r\n\r\n    const ChangeG2Select = (value) =>{\r\n        LogValue['G2Selected'] = value\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={C3LogRequest}> test </Button> */}\r\n            <RangePicker showTime onOk={C3LogRequest} />\r\n            <Select\r\n                mode=\"multiple\"\r\n                size=\"middle\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={[OptionC3[0],OptionC3[1]]}\r\n                style={{ width: '100%' }}\r\n                onChange={ChangeC3Select}\r\n            >\r\n                {OptionSelectorC3}\r\n            </Select>\r\n\r\n            <Card title='RealTime' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                <Table bordered columns={columnsC3} dataSource={LogValue['C3Table']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n\r\n            <RangePicker showTime onOk={G2LogRequest} />\r\n            <Select\r\n                mode=\"multiple\"\r\n                size=\"middle\"\r\n                placeholder=\"Please select\"\r\n                defaultValue={[OptionG2[0],OptionG2[1]]}\r\n                style={{ width: '100%' }}\r\n                onChange={ChangeG2Select}\r\n\r\n            >\r\n                {OptionSelectorG2}\r\n            </Select>\r\n\r\n            <Card title='RealTime' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, }} hoverable={true}>\r\n                <Table bordered columns={columnsG2} dataSource={LogValue['G2Table']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1DataLog\r\n"]},"metadata":{},"sourceType":"module"}