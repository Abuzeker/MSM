{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\Polymerlink-Front\\\\polymerlink-2\\\\src\\\\pages\\\\Line1\\\\Line1McG.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { logdata_request, RealtimeData_Request } from '../../api';\nimport { CMcGuire } from '../../DataRequest/DataModel';\nimport { ConvertMonentToDateTime, DataSortTime, GetDateTime } from '../../DataRequest/LogDataRequestWrap';\nimport { Line } from '@antv/g2plot';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst property = ['PROPERTY_1', 'PROPERTY_2', 'PROPERTY_3', 'PROPERTY_4', 'PROPERTY_5'];\nlet DTinitial = GetDateTime(1, 1);\nlet DTc3 = [],\n    DTg2 = [];\nlet MCGDTRange = [];\nDTc3.push(moment(DTinitial[2]));\nDTc3.push(moment(DTinitial[3]));\nDTg2 = DTc3;\nlet LogValue = {\n  \"MCGTable\": []\n};\nconst {\n  RangePicker\n} = DatePicker;\n\nconst parseDMYhmG2 = s => {\n  var b = s.split(/\\D/);\n  return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\n};\n\nconst columnsG2 = [{\n  title: 'Parameter',\n  dataIndex: 'Parameter',\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.Parameter.includes(value),\n  width: '30%'\n}, {\n  title: 'Value',\n  dataIndex: 'Value',\n  sorter: (a, b) => a.Value - b.Value\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  sorter: (a, b) => parseDMYhmG2(a.date) - parseDMYhmG2(b.date)\n}];\n\nconst Line1McG = () => {\n  _s();\n\n  const [state, setState] = useState({\n    count: 0\n  });\n  useEffect(() => {\n    console.log('Reffect');\n  }, []);\n\n  const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\n    const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page);\n    let data = DataSortTime(response);\n    LogValue[BufferName] = data; // console.log(response);\n\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const MCGLogRequest = async DT => {\n    DTg2 = DT;\n    MCGDTRange = ConvertMonentToDateTime(DT);\n    await UpdateTableData(LogValue['G2Selected'], MCGDTRange[0], MCGDTRange[1], 'Polymerlink', 'Maguire C3', '1', \"MCGTable\", CMcGuire);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px',\n        paddingTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"G2 Log Visualize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        showTime: true,\n        onOk: MCGLogRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        onClick: () => {\n          MCGLogRequest(DTg2);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Log Value G2\",\n      bordered: true,\n      style: {\n        width: '100%',\n        borderRadius: 15,\n        marginBottom: '10px'\n      },\n      hoverable: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columnsG2,\n        dataSource: LogValue['MCGTable'],\n        size: \"small\",\n        scroll: {\n          y: 500\n        },\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Line1McG, \"kcd+c1a7RyKAa2KvtJN963wq2Sk=\");\n\n_c = Line1McG;\nexport default Line1McG;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line1McG\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/Polymerlink-Front/polymerlink-2/src/pages/Line1/Line1McG.jsx"],"names":["Button","Col","Divider","Row","DatePicker","Card","Table","Select","React","useState","useEffect","logdata_request","RealtimeData_Request","CMcGuire","ConvertMonentToDateTime","DataSortTime","GetDateTime","Line","moment","property","DTinitial","DTc3","DTg2","MCGDTRange","push","LogValue","RangePicker","parseDMYhmG2","s","b","split","Date","columnsG2","title","dataIndex","filterMode","filterSearch","onFilter","value","record","Parameter","includes","width","sorter","a","Value","date","Line1McG","state","setState","count","console","log","UpdateTableData","StartTime","EndTime","Site","Page","BufferName","Model","response","data","MCGLogRequest","DT","paddingBottom","paddingTop","marginLeft","borderRadius","marginBottom","y"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Row, DatePicker, Card, Table, Select } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { logdata_request, RealtimeData_Request } from '../../api'\r\nimport { CMcGuire } from '../../DataRequest/DataModel'\r\nimport { ConvertMonentToDateTime, DataSortTime, GetDateTime } from '../../DataRequest/LogDataRequestWrap'\r\nimport { Line } from '@antv/g2plot';\r\nimport moment from 'moment';\r\n\r\nconst property = [\r\n    'PROPERTY_1', 'PROPERTY_2', 'PROPERTY_3', 'PROPERTY_4', 'PROPERTY_5'\r\n]\r\n\r\nlet DTinitial = GetDateTime(1,1)\r\nlet DTc3 = [] , DTg2 = []\r\nlet MCGDTRange = []\r\n\r\nDTc3.push(moment(DTinitial[2]))\r\nDTc3.push(moment(DTinitial[3]))\r\nDTg2 = DTc3\r\n\r\n\r\nlet LogValue = {\r\n    \"MCGTable\": [],\r\n}\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst parseDMYhmG2 = (s) => {\r\n    var b = s.split(/\\D/);\r\n    return new Date(b[2], b[1] - 1, b[2], b[3], b[4]);\r\n}\r\n\r\nconst columnsG2 = [\r\n    {\r\n        title: 'Parameter',\r\n        dataIndex: 'Parameter',\r\n        filterMode: 'tree',\r\n        filterSearch: true,\r\n        onFilter: (value, record) => record.Parameter.includes(value),\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        sorter: (a, b) => a.Value - b.Value,\r\n    },\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        sorter: (a, b) => parseDMYhmG2(a.date) - parseDMYhmG2(b.date),\r\n    },\r\n];\r\n\r\n\r\nconst Line1McG = () => {\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n\r\n    useEffect(() => {\r\n        console.log('Reffect');\r\n\r\n    }, [])\r\n\r\n    const UpdateTableData = async (Parameter, StartTime, EndTime, Site, Line, Page, BufferName, Model) => {\r\n        const response = await logdata_request(Parameter, StartTime, EndTime, Site, Line, Page)\r\n        let data = DataSortTime(response)\r\n        LogValue[BufferName] = data\r\n        // console.log(response);\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const MCGLogRequest = async (DT) => {\r\n        DTg2 = DT\r\n        MCGDTRange = ConvertMonentToDateTime(DT)\r\n        await UpdateTableData(LogValue['G2Selected'], MCGDTRange[0], MCGDTRange[1], 'Polymerlink', 'Maguire C3', '1', \"MCGTable\", CMcGuire)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ paddingBottom: '10px', paddingTop:'20px' }}>\r\n                <Divider orientation=\"left\">G2 Log Visualize</Divider>\r\n            </div>\r\n\r\n            <div style={{ paddingBottom: '10px' }}>\r\n                <RangePicker showTime onOk={MCGLogRequest} />\r\n                <Button type='primary' style={{ marginLeft: '10px' }} onClick={() => { MCGLogRequest(DTg2) }}>Update</Button>\r\n            </div>\r\n\r\n            <Card title='Log Value G2' bordered={true}\r\n                style={{ width: '100%', borderRadius: 15, marginBottom: '10px' }} hoverable={true}>\r\n                <Table bordered columns={columnsG2} dataSource={LogValue['MCGTable']} size=\"small\" scroll={{ y: 500 }} pagination={false} />\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line1McG\r\n"]},"metadata":{},"sourceType":"module"}