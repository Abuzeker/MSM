{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tzika\\\\Desktop\\\\MSM-Front\\\\MSM\\\\src\\\\pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ReadJob, RealtimeData_Request } from '../../api';\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob, TableColumbJobHome, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\nimport moment from 'moment';\nimport { C3Model, G2Model, JobModel } from '../../DataRequest/DataModel';\nimport { Button, Col, Row, Table, Typography, Statistic, Card, Descriptions, PageHeader, Tag } from 'antd';\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LogValue = {\n  \"LogC3\": [],\n  \"LogG2\": []\n};\nlet ReportList = {\n  \"C3ReportList\": [],\n  \"G2ReportList\": [],\n  'All': []\n};\nlet JobDetailRecord = {\n  datetimeStart: '',\n  datetimeEnd: '',\n  site: '',\n  line: '',\n  BufferName: ''\n};\nlet ReportInfoG2 = {};\nlet BlankPage = 1,\n    ClickTime;\nlet RealTimeValue = {\n  \"C3Table\": [],\n  \"G2Table\": [],\n  \"C3Graph\": [],\n  \"G2Graph\": []\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const [state, setState] = useState({\n    count: 0\n  });\n  const [sortedInfo, setSortedInfo] = useState({});\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter); // setFilteredInfo(filters);\n\n    setSortedInfo(sorter);\n  };\n\n  const setAgeSort = () => {\n    setSortedInfo({\n      order: 'descend',\n      columnKey: 'age'\n    });\n  };\n\n  const DataRequest = async (label, site, page, line, HMIName, TableName) => {\n    const response = await RealtimeData_Request(label, site, page, line);\n    RealTimeValue[TableName] = DataSortRT(response);\n    RealTimeValue[HMIName] = RealTimeValue[TableName];\n  };\n\n  const RenderNewData = () => {\n    DataRequest([], 'Polymerlink', BlankPage, 'C3', 'C3HMI', \"C3Table\");\n    DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\");\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  useEffect(() => {\n    RenderNewData();\n    time(); // const interval = setInterval(() => {\n    //     RenderNewData()\n    // }, 3000)\n\n    return () => {\n      // clearInterval(interval)\n      console.log('Unmount Effect Line1RT');\n    };\n  }, []);\n\n  const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\n    const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line[0]);\n    filter(response, BufferName[0]);\n    const response2 = await ReadJob(info, datetimeStart, datetimeEnd, site, line[1]);\n    filter(response2, BufferName[1]);\n    console.log();\n    ReportList['All'] = [];\n    ReportList[BufferName[0]].forEach(element => {\n      ReportList['All'].push(element);\n    });\n    ReportList[BufferName[1]].forEach(element => {\n      ReportList['All'].push(element);\n    });\n    console.log(ReportList['All']);\n    setState(({\n      count\n    }) => ({\n      count: count + 1\n    }));\n  };\n\n  const filter = (response, BufferName) => {\n    console.log(response);\n    let data = ReportSort(response);\n    console.log(data);\n    let OngoingJob = FilterOutEndedJob(data);\n    console.log(OngoingJob);\n    ReportList[BufferName] = OngoingJob;\n  };\n\n  const time = (line, BufferName) => {\n    const timetange = GetDateTime(2, 20);\n    RequestJob([], timetange[0], timetange[1], 'Polymerlink', ['G2', 'C3'], [\"G2ReportList\", \"C3ReportList\"]);\n  };\n\n  const ColumbJob = TableColumbJobHome(JobModel, 'G2', BlankPage, 'Log');\n  const LogColumb = [{\n    title: 'DateTime',\n    width: 70,\n    dataIndex: 'DateTime',\n    key: 'DateTime',\n    align: 'center',\n    sorter: (a, b) => moment(a.date).unix() - moment(b.date).unix()\n  }, {\n    title: '50 KG',\n    width: 70,\n    dataIndex: 'Line50',\n    key: 'Line50',\n    align: 'center',\n    sorter: (a, b) => a.Line50 - b.Line50,\n    sortOrder: sortedInfo.columnKey === 'age' ? sortedInfo.order : null,\n    ellipsis: true\n  }, {\n    title: '1 KG',\n    width: 70,\n    dataIndex: 'Line',\n    key: 'Line',\n    align: 'center'\n  }, {\n    title: '2 KG',\n    width: 70,\n    dataIndex: 'Line',\n    key: 'Line',\n    align: 'center'\n  }, {\n    title: '1 TON',\n    width: 70,\n    dataIndex: 'Line',\n    key: 'Line',\n    align: 'center'\n  }];\n\n  const comparedate = () => {\n    const ii = new Date();\n    const NowTime = moment(ii).format('DD-MM-yyyy HH:mm:ss');\n    let dat1 = '11-12-2021 01:00:00';\n    let dat2 = '01-12-2021 23:00:00';\n    var date1 = new Date(dat1);\n    var date2 = new Date(dat2);\n    console.log(NowTime);\n    date2 > date1 ? console.log('yes') : console.log('no');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bordered: true,\n        children: /*#__PURE__*/_jsxDEV(Descriptions, {\n          column: 4,\n          title: \"Total Unit\",\n          bordered: true,\n          layout: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"50 KG\",\n            children: \"1234\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"1 KG\",\n            children: \"4535\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"2 KG\",\n            children: \"32456\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n            label: \"1 TON\",\n            children: \"23423\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Packaging Line 50 KG\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              children: [\" \", DateDisplay(), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              value: 1128,\n              precision: 0,\n              valueStyle: {\n                color: '#3f8600'\n              },\n              prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this),\n              suffix: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Packaging Line 1 KG\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              children: [\" \", DateDisplay(), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              value: 1128,\n              precision: 0,\n              valueStyle: {\n                color: '#3f8600'\n              },\n              prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this),\n              suffix: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Packaging Line 2 KG\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              children: [\" \", DateDisplay(), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              value: 1128,\n              precision: 0,\n              valueStyle: {\n                color: '#3f8600'\n              },\n              prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 41\n              }, this),\n              suffix: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Packaging Line 1 TON\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              children: [\" \", DateDisplay(), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              value: 1128,\n              precision: 0,\n              valueStyle: {\n                color: '#3f8600'\n              },\n              prefix: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this),\n              suffix: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: LogColumb,\n        dataSource: ReportList['All'],\n        bordered: true,\n        scroll: {\n          x: 1000,\n          y: 500\n        },\n        pagination: false,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"z05QRx00DfD+9D+XdMF9jJb/bKE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/tzika/Desktop/MSM-Front/MSM/src/pages/Home/Home.jsx"],"names":["React","useEffect","useState","ReadJob","RealtimeData_Request","FilterOutEndedJob","GetDateTime","ReportSort","TableColumbJob","TableColumbJobHome","DateDisplay","moment","C3Model","G2Model","JobModel","Button","Col","Row","Table","Typography","Statistic","Card","Descriptions","PageHeader","Tag","RealTimeTableWrapper","DataSortRT","ArrowUpOutlined","ArrowDownOutlined","DashboardOutlined","LogValue","ReportList","JobDetailRecord","datetimeStart","datetimeEnd","site","line","BufferName","ReportInfoG2","BlankPage","ClickTime","RealTimeValue","Home","Title","state","setState","count","sortedInfo","setSortedInfo","handleChange","pagination","filters","sorter","console","log","setAgeSort","order","columnKey","DataRequest","label","page","HMIName","TableName","response","RenderNewData","time","RequestJob","info","filter","response2","forEach","element","push","data","OngoingJob","timetange","ColumbJob","LogColumb","title","width","dataIndex","key","align","a","b","date","unix","Line50","sortOrder","ellipsis","comparedate","ii","Date","NowTime","format","dat1","dat2","date1","date2","marginTop","color","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ReadJob, RealtimeData_Request } from '../../api'\r\nimport { FilterOutEndedJob, GetDateTime, ReportSort, TableColumbJob, TableColumbJobHome, DateDisplay } from '../../DataRequest/LogDataRequestWrap';\r\nimport moment from 'moment';\r\nimport { C3Model, G2Model, JobModel } from '../../DataRequest/DataModel';\r\nimport { Button, Col, Row, Table, Typography, Statistic, Card, Descriptions, PageHeader, Tag } from 'antd';\r\nimport RealTimeTableWrapper from '../Realtime/RealTimeTableWrapper';\r\nimport { DataSortRT } from '../../DataRequest/RealTimeRequestWrap';\r\nimport { ArrowUpOutlined, ArrowDownOutlined, DashboardOutlined } from '@ant-design/icons';\r\nimport './home.css'\r\n\r\nlet LogValue = {\r\n    \"LogC3\": [],\r\n    \"LogG2\": [],\r\n}\r\n\r\nlet ReportList = {\r\n    \"C3ReportList\": [],\r\n    \"G2ReportList\": [],\r\n    'All': []\r\n}\r\n\r\nlet JobDetailRecord = {\r\n    datetimeStart: '',\r\n    datetimeEnd: '',\r\n    site: '',\r\n    line: '',\r\n    BufferName: ''\r\n}\r\n\r\nlet ReportInfoG2 = {}\r\n\r\nlet BlankPage = 1, ClickTime\r\n\r\nlet RealTimeValue = {\r\n    \"C3Table\": [],\r\n    \"G2Table\": [],\r\n    \"C3Graph\": [],\r\n    \"G2Graph\": [],\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    const { Title } = Typography\r\n\r\n    const [state, setState] = useState({ count: 0 });\r\n    const [sortedInfo, setSortedInfo] = useState({});\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        // setFilteredInfo(filters);\r\n        setSortedInfo(sorter);\r\n    };\r\n\r\n    const setAgeSort = () => {\r\n        setSortedInfo({\r\n            order: 'descend',\r\n            columnKey: 'age',\r\n        });\r\n    };\r\n\r\n    const DataRequest = async (label, site, page, line, HMIName, TableName) => {\r\n        const response = await RealtimeData_Request(label, site, page, line)\r\n        RealTimeValue[TableName] = DataSortRT(response)\r\n        RealTimeValue[HMIName] = RealTimeValue[TableName]\r\n    }\r\n\r\n    const RenderNewData = () => {\r\n\r\n        DataRequest([], 'Polymerlink', BlankPage, 'C3', 'C3HMI', \"C3Table\")\r\n        DataRequest([], 'Polymerlink', BlankPage, 'G2', 'G2HMI', \"G2Table\")\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        RenderNewData()\r\n        time()\r\n\r\n        // const interval = setInterval(() => {\r\n        //     RenderNewData()\r\n        // }, 3000)\r\n\r\n        return () => {\r\n            // clearInterval(interval)\r\n            console.log('Unmount Effect Line1RT');\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const RequestJob = async (info, datetimeStart, datetimeEnd, site, line, BufferName) => {\r\n        const response = await ReadJob(info, datetimeStart, datetimeEnd, site, line[0])\r\n        filter(response, BufferName[0])\r\n        const response2 = await ReadJob(info, datetimeStart, datetimeEnd, site, line[1])\r\n        filter(response2, BufferName[1])\r\n\r\n        console.log();\r\n\r\n        ReportList['All'] = []\r\n\r\n        ReportList[BufferName[0]].forEach(element => {\r\n            ReportList['All'].push(element)\r\n        });\r\n\r\n        ReportList[BufferName[1]].forEach(element => {\r\n            ReportList['All'].push(element)\r\n        });\r\n\r\n        console.log(ReportList['All']);\r\n\r\n\r\n        setState(({ count }) => ({ count: count + 1 }));\r\n    }\r\n\r\n    const filter = (response, BufferName) => {\r\n        console.log(response)\r\n        let data = ReportSort(response)\r\n        console.log(data)\r\n        let OngoingJob = FilterOutEndedJob(data)\r\n        console.log(OngoingJob)\r\n        ReportList[BufferName] = OngoingJob\r\n    }\r\n\r\n\r\n\r\n    const time = (line, BufferName) => {\r\n        const timetange = GetDateTime(2, 20)\r\n        RequestJob([], timetange[0], timetange[1], 'Polymerlink', ['G2', 'C3'], [\"G2ReportList\", \"C3ReportList\"])\r\n    }\r\n\r\n\r\n    const ColumbJob = TableColumbJobHome(JobModel, 'G2', BlankPage, 'Log')\r\n\r\n\r\n    const LogColumb = [\r\n        {\r\n            title: 'DateTime',\r\n            width: 70,\r\n            dataIndex: 'DateTime',\r\n            key: 'DateTime',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => moment(a.date).unix() - moment(b.date).unix()\r\n        },\r\n        {\r\n            title: '50 KG',\r\n            width: 70,\r\n            dataIndex: 'Line50',\r\n            key: 'Line50',\r\n            align: 'center',\r\n\r\n            sorter: (a, b) => a.Line50 - b.Line50,\r\n            sortOrder: sortedInfo.columnKey === 'age' ? sortedInfo.order : null,\r\n            ellipsis: true,\r\n        },\r\n        {\r\n            title: '1 KG',\r\n            width: 70,\r\n            dataIndex: 'Line',\r\n            key: 'Line',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '2 KG',\r\n            width: 70,\r\n            dataIndex: 'Line',\r\n            key: 'Line',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '1 TON',\r\n            width: 70,\r\n            dataIndex: 'Line',\r\n            key: 'Line',\r\n            align: 'center',\r\n        },\r\n\r\n    ]\r\n\r\n\r\n    const comparedate = () => {\r\n        const ii = new Date()\r\n        const NowTime = moment(ii).format('DD-MM-yyyy HH:mm:ss');\r\n\r\n        let dat1 = '11-12-2021 01:00:00'\r\n        let dat2 = '01-12-2021 23:00:00'\r\n\r\n        var date1 = new Date(dat1);\r\n        var date2 = new Date(dat2);\r\n\r\n        console.log(NowTime);\r\n\r\n        date2 > date1 ? console.log('yes') : console.log('no');\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* <div className=\"site-page-header-ghost-wrapper\" style={{ borderRadius: '15px' }}>\r\n                <PageHeader\r\n                    className=\"site-page-header-responsive\"\r\n                    title=\"PLM\"\r\n                    subTitle={window.location.pathname}\r\n                    ghost={true}\r\n                >\r\n                    <Row gutter={[16, 16]}>\r\n                        <Statistic\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                            title=\"Name\" value={'Tan'} />\r\n                        <Statistic\r\n                            title=\"Role\"\r\n                            value={'User'}\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                        />\r\n                        <Statistic\r\n                            style={{\r\n                                marginRight: '32px',\r\n                            }}\r\n                            title=\"Production Line\" value={'MSM'} />\r\n                    </Row>\r\n\r\n                </PageHeader>\r\n            </div> */}\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Card bordered={true}>\r\n                    <Descriptions column={4} title=\"Total Unit\" bordered layout='vertical'>\r\n                        <Descriptions.Item label=\"50 KG\">1234</Descriptions.Item>\r\n                        <Descriptions.Item label=\"1 KG\">4535</Descriptions.Item>\r\n                        <Descriptions.Item label=\"2 KG\">32456</Descriptions.Item>\r\n                        <Descriptions.Item label=\"1 TON\">23423</Descriptions.Item>\r\n                    </Descriptions>\r\n                </Card >\r\n            </div>\r\n\r\n\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 50 KG\">\r\n\r\n                            {/* <Title level={3}>Packaging Line 50 KG</Title> */}\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 1 KG\">\r\n\r\n                            {/* <Title level={3}>Packaging Line 1 KG</Title> */}\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 2 KG\">\r\n\r\n                            {/* <Title level={3}>Packaging Line 2 KG</Title> */}\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Card title=\"Packaging Line 1 TON\">\r\n\r\n                            {/* <Title level={3}>Packaging Line 1 TON</Title> */}\r\n                            <Title level={5}> {DateDisplay()}  </Title>\r\n\r\n                            <Statistic\r\n                                value={1128}\r\n                                precision={0}\r\n                                valueStyle={{ color: '#3f8600' }}\r\n                                prefix={<DashboardOutlined />}\r\n                                suffix=\"Unit\"\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '16px' }}>\r\n                <Table columns={LogColumb} dataSource={ReportList['All']} bordered scroll={{ x: 1000, y: 500 }} pagination={false} size=\"small\" />\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <Button onClick={time}> test </Button>\r\n            <Button onClick={comparedate}> compare </Button>\r\n             */}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}